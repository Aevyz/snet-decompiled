package com.google.kidsmanagement.v1;

import com.google.android.gms.lint.BuildConfig;
import com.google.apps.framework.consistency.proto.ApiaryConsistencyTokenResponseHeader;
import com.google.kidsmanagement.v1.ActivitiesCommonProto.AppActivity;
import com.google.kidsmanagement.v1.AppVersionCommonProto.AppUpgradeStatus;
import com.google.kidsmanagement.v1.AppVersionCommonProto.ClientInfo;
import com.google.kidsmanagement.v1.AppsCommonProto.App;
import com.google.kidsmanagement.v1.AppsCommonProto.AppFilter;
import com.google.kidsmanagement.v1.CardsCommonProto.Card;
import com.google.kidsmanagement.v1.CardsCommonProto.CardDismissal;
import com.google.kidsmanagement.v1.DevicesCommonProto.Device;
import com.google.kidsmanagement.v1.DevicesCommonProto.Receipt;
import com.google.kidsmanagement.v1.DevicesCommonProto.RemoteInstruction;
import com.google.kidsmanagement.v1.FamiliesCommonProto.Family;
import com.google.kidsmanagement.v1.FamiliesCommonProto.FamilyMember;
import com.google.kidsmanagement.v1.FamiliesCommonProto.FamilyMemberProfile;
import com.google.kidsmanagement.v1.FamiliesCommonProto.FixitState;
import com.google.kidsmanagement.v1.FamiliesCommonProto.ManagementCapabilities;
import com.google.kidsmanagement.v1.FamilyTimeCommonProto.FamilyMemberWithLocation;
import com.google.kidsmanagement.v1.FamilyTimeCommonProto.FamilyPlace;
import com.google.kidsmanagement.v1.FamilyTimeCommonProto.LocationSharingAcl;
import com.google.kidsmanagement.v1.FamilyTimeCommonProto.LocationSharingAclUpdate;
import com.google.kidsmanagement.v1.GoogleServicesCommonProto.ChromeSettings;
import com.google.kidsmanagement.v1.GoogleServicesCommonProto.SearchSettings;
import com.google.kidsmanagement.v1.PermissionsCommonProto.InboxItemCollapsedView;
import com.google.kidsmanagement.v1.PermissionsCommonProto.InboxItemExpandedView;
import com.google.kidsmanagement.v1.PermissionsCommonProto.PermissionRequestAdditionalData;
import com.google.kidsmanagement.v1.PermissionsCommonProto.ViewParameters;
import com.google.kidsmanagement.v1.RestrictionsCommonProto.Restriction;
import com.google.kidsmanagement.v1.RestrictionsCommonProto.RestrictionFilter;
import com.google.kidsmanagement.v1.RestrictionsCommonProto.RestrictionGroup;
import com.google.kidsmanagement.v1.RestrictionsCommonProto.RestrictionValue;
import com.google.kidsmanagement.v1.TimeoutsCommonProto.Timeout;
import com.google.protobuf.nano.CodedInputByteBufferNano;
import com.google.protobuf.nano.CodedOutputByteBufferNano;
import com.google.protobuf.nano.ExtendableMessageNano;
import com.google.protobuf.nano.InternalNano;
import com.google.protobuf.nano.InvalidProtocolBufferNanoException;
import com.google.protobuf.nano.MessageNano;
import com.google.protobuf.nano.WireFormatNano;
import com.google.wireless.android.play.playlog.proto.ClientAnalytics.LogRequest.LogSource;
import com.google.wireless.android.play.playlog.proto.UserLocation.LaunchSettingsEvent.Action;
import com.google.wireless.android.play.playlog.proto.UserLocation.LocationSharingEvent.Type;
import com.google.wireless.android.play.playlog.proto.UserLocation.OvenFreshEvent.OvenFreshResult;
import com.google.wireless.android.play.playlog.proto.UserLocation.TimeSelection;
import java.io.IOException;
import java.util.Arrays;

public interface KidsManagementMessagesProto {

    public static final class ActionItem extends ExtendableMessageNano<ActionItem> {
        private static volatile ActionItem[] _emptyArray;
        public long timestampMillis;
        public String userId;

        public static ActionItem[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ActionItem[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ActionItem() {
            clear();
        }

        public ActionItem clear() {
            this.timestampMillis = 0;
            this.userId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ActionItem)) {
                return false;
            }
            ActionItem other = (ActionItem) o;
            if (this.timestampMillis != other.timestampMillis) {
                return false;
            }
            if (this.userId == null) {
                if (other.userId != null) {
                    return false;
                }
            } else if (!this.userId.equals(other.userId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + ((int) (this.timestampMillis ^ (this.timestampMillis >>> 32)))) * 31) + (this.userId == null ? 0 : this.userId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.timestampMillis != 0) {
                output.writeInt64(1, this.timestampMillis);
            }
            if (!this.userId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.userId);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.timestampMillis != 0) {
                size += CodedOutputByteBufferNano.computeInt64Size(1, this.timestampMillis);
            }
            if (this.userId.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(2, this.userId);
        }

        public ActionItem mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_GET_LINK /*8*/:
                        this.timestampMillis = input.readInt64();
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.userId = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ActionItem parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ActionItem) MessageNano.mergeFrom(new ActionItem(), data);
        }

        public static ActionItem parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ActionItem().mergeFrom(input);
        }
    }

    public static final class ApiRequestHeader extends ExtendableMessageNano<ApiRequestHeader> {
        private static volatile ApiRequestHeader[] _emptyArray;
        public String consistencyTokenJar;
        public String experimentOverride;
        public String locale;

        public static ApiRequestHeader[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ApiRequestHeader[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ApiRequestHeader() {
            clear();
        }

        public ApiRequestHeader clear() {
            this.consistencyTokenJar = BuildConfig.VERSION_NAME;
            this.locale = BuildConfig.VERSION_NAME;
            this.experimentOverride = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ApiRequestHeader)) {
                return false;
            }
            ApiRequestHeader other = (ApiRequestHeader) o;
            if (this.consistencyTokenJar == null) {
                if (other.consistencyTokenJar != null) {
                    return false;
                }
            } else if (!this.consistencyTokenJar.equals(other.consistencyTokenJar)) {
                return false;
            }
            if (this.locale == null) {
                if (other.locale != null) {
                    return false;
                }
            } else if (!this.locale.equals(other.locale)) {
                return false;
            }
            if (this.experimentOverride == null) {
                if (other.experimentOverride != null) {
                    return false;
                }
            } else if (!this.experimentOverride.equals(other.experimentOverride)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.consistencyTokenJar == null ? 0 : this.consistencyTokenJar.hashCode())) * 31) + (this.locale == null ? 0 : this.locale.hashCode())) * 31) + (this.experimentOverride == null ? 0 : this.experimentOverride.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (!this.consistencyTokenJar.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(1, this.consistencyTokenJar);
            }
            if (!this.locale.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.locale);
            }
            if (!this.experimentOverride.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.experimentOverride);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (!this.consistencyTokenJar.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(1, this.consistencyTokenJar);
            }
            if (!this.locale.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.locale);
            }
            if (this.experimentOverride.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(3, this.experimentOverride);
        }

        public ApiRequestHeader mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        this.consistencyTokenJar = input.readString();
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.locale = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.experimentOverride = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ApiRequestHeader parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ApiRequestHeader) MessageNano.mergeFrom(new ApiRequestHeader(), data);
        }

        public static ApiRequestHeader parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ApiRequestHeader().mergeFrom(input);
        }
    }

    public static final class ApiResponseHeader extends ExtendableMessageNano<ApiResponseHeader> {
        private static volatile ApiResponseHeader[] _emptyArray;
        public ApiaryConsistencyTokenResponseHeader consistency;
        public long serverTimestampMillis;

        public static ApiResponseHeader[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ApiResponseHeader[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ApiResponseHeader() {
            clear();
        }

        public ApiResponseHeader clear() {
            this.consistency = null;
            this.serverTimestampMillis = 0;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ApiResponseHeader)) {
                return false;
            }
            ApiResponseHeader other = (ApiResponseHeader) o;
            if (this.consistency == null) {
                if (other.consistency != null) {
                    return false;
                }
            } else if (!this.consistency.equals(other.consistency)) {
                return false;
            }
            if (this.serverTimestampMillis != other.serverTimestampMillis) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.consistency == null ? 0 : this.consistency.hashCode())) * 31) + ((int) (this.serverTimestampMillis ^ (this.serverTimestampMillis >>> 32)))) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.consistency != null) {
                output.writeMessage(1, this.consistency);
            }
            if (this.serverTimestampMillis != 0) {
                output.writeInt64(2, this.serverTimestampMillis);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.consistency != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.consistency);
            }
            if (this.serverTimestampMillis != 0) {
                return size + CodedOutputByteBufferNano.computeInt64Size(2, this.serverTimestampMillis);
            }
            return size;
        }

        public ApiResponseHeader mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.consistency == null) {
                            this.consistency = new ApiaryConsistencyTokenResponseHeader();
                        }
                        input.readMessage(this.consistency);
                        continue;
                    case LogSource.GMS_CORE_PEOPLE /*16*/:
                        this.serverTimestampMillis = input.readInt64();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ApiResponseHeader parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ApiResponseHeader) MessageNano.mergeFrom(new ApiResponseHeader(), data);
        }

        public static ApiResponseHeader parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ApiResponseHeader().mergeFrom(input);
        }
    }

    public static final class ApnsRegistrationInfo extends ExtendableMessageNano<ApnsRegistrationInfo> {
        private static volatile ApnsRegistrationInfo[] _emptyArray;
        public String apnsApplicationId;
        public String deviceToken;

        public static ApnsRegistrationInfo[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ApnsRegistrationInfo[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ApnsRegistrationInfo() {
            clear();
        }

        public ApnsRegistrationInfo clear() {
            this.deviceToken = BuildConfig.VERSION_NAME;
            this.apnsApplicationId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ApnsRegistrationInfo)) {
                return false;
            }
            ApnsRegistrationInfo other = (ApnsRegistrationInfo) o;
            if (this.deviceToken == null) {
                if (other.deviceToken != null) {
                    return false;
                }
            } else if (!this.deviceToken.equals(other.deviceToken)) {
                return false;
            }
            if (this.apnsApplicationId == null) {
                if (other.apnsApplicationId != null) {
                    return false;
                }
            } else if (!this.apnsApplicationId.equals(other.apnsApplicationId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.deviceToken == null ? 0 : this.deviceToken.hashCode())) * 31) + (this.apnsApplicationId == null ? 0 : this.apnsApplicationId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (!this.deviceToken.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(1, this.deviceToken);
            }
            if (!this.apnsApplicationId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.apnsApplicationId);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (!this.deviceToken.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(1, this.deviceToken);
            }
            if (this.apnsApplicationId.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(2, this.apnsApplicationId);
        }

        public ApnsRegistrationInfo mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        this.deviceToken = input.readString();
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.apnsApplicationId = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ApnsRegistrationInfo parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ApnsRegistrationInfo) MessageNano.mergeFrom(new ApnsRegistrationInfo(), data);
        }

        public static ApnsRegistrationInfo parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ApnsRegistrationInfo().mergeFrom(input);
        }
    }

    public static final class BatchUpdateAppsRequest extends ExtendableMessageNano<BatchUpdateAppsRequest> {
        private static volatile BatchUpdateAppsRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public App[] apps;
        public String personId;

        public static BatchUpdateAppsRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new BatchUpdateAppsRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public BatchUpdateAppsRequest() {
            clear();
        }

        public BatchUpdateAppsRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.apps = App.emptyArray();
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof BatchUpdateAppsRequest)) {
                return false;
            }
            BatchUpdateAppsRequest other = (BatchUpdateAppsRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (!InternalNano.equals(this.apps, other.apps)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + InternalNano.hashCode(this.apps)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (this.apps != null && this.apps.length > 0) {
                for (App element : this.apps) {
                    if (element != null) {
                        output.writeMessage(3, element);
                    }
                }
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (this.apps != null && this.apps.length > 0) {
                for (App element : this.apps) {
                    if (element != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(3, element);
                    }
                }
            }
            return size;
        }

        public BatchUpdateAppsRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        int i;
                        int arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 26);
                        if (this.apps == null) {
                            i = 0;
                        } else {
                            i = this.apps.length;
                        }
                        App[] newArray = new App[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.apps, 0, newArray, 0, i);
                        }
                        while (i < newArray.length - 1) {
                            newArray[i] = new App();
                            input.readMessage(newArray[i]);
                            input.readTag();
                            i++;
                        }
                        newArray[i] = new App();
                        input.readMessage(newArray[i]);
                        this.apps = newArray;
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static BatchUpdateAppsRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (BatchUpdateAppsRequest) MessageNano.mergeFrom(new BatchUpdateAppsRequest(), data);
        }

        public static BatchUpdateAppsRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new BatchUpdateAppsRequest().mergeFrom(input);
        }
    }

    public static final class BatchUpdateAppsResponse extends ExtendableMessageNano<BatchUpdateAppsResponse> {
        private static volatile BatchUpdateAppsResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public App[] apps;

        public static BatchUpdateAppsResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new BatchUpdateAppsResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public BatchUpdateAppsResponse() {
            clear();
        }

        public BatchUpdateAppsResponse clear() {
            this.apiHeader = null;
            this.apps = App.emptyArray();
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof BatchUpdateAppsResponse)) {
                return false;
            }
            BatchUpdateAppsResponse other = (BatchUpdateAppsResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (!InternalNano.equals(this.apps, other.apps)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + InternalNano.hashCode(this.apps)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.apps != null && this.apps.length > 0) {
                for (App element : this.apps) {
                    if (element != null) {
                        output.writeMessage(2, element);
                    }
                }
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.apps != null && this.apps.length > 0) {
                for (App element : this.apps) {
                    if (element != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(2, element);
                    }
                }
            }
            return size;
        }

        public BatchUpdateAppsResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        int i;
                        int arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 18);
                        if (this.apps == null) {
                            i = 0;
                        } else {
                            i = this.apps.length;
                        }
                        App[] newArray = new App[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.apps, 0, newArray, 0, i);
                        }
                        while (i < newArray.length - 1) {
                            newArray[i] = new App();
                            input.readMessage(newArray[i]);
                            input.readTag();
                            i++;
                        }
                        newArray[i] = new App();
                        input.readMessage(newArray[i]);
                        this.apps = newArray;
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static BatchUpdateAppsResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (BatchUpdateAppsResponse) MessageNano.mergeFrom(new BatchUpdateAppsResponse(), data);
        }

        public static BatchUpdateAppsResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new BatchUpdateAppsResponse().mergeFrom(input);
        }
    }

    public static final class CanAddMemberRequest extends ExtendableMessageNano<CanAddMemberRequest> {
        private static volatile CanAddMemberRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String familyId;
        public int role;
        public String userId;

        public static CanAddMemberRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new CanAddMemberRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public CanAddMemberRequest() {
            clear();
        }

        public CanAddMemberRequest clear() {
            this.apiHeader = null;
            this.familyId = BuildConfig.VERSION_NAME;
            this.userId = BuildConfig.VERSION_NAME;
            this.role = 0;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof CanAddMemberRequest)) {
                return false;
            }
            CanAddMemberRequest other = (CanAddMemberRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.familyId == null) {
                if (other.familyId != null) {
                    return false;
                }
            } else if (!this.familyId.equals(other.familyId)) {
                return false;
            }
            if (this.userId == null) {
                if (other.userId != null) {
                    return false;
                }
            } else if (!this.userId.equals(other.userId)) {
                return false;
            }
            if (this.role != other.role) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.familyId == null ? 0 : this.familyId.hashCode())) * 31) + (this.userId == null ? 0 : this.userId.hashCode())) * 31) + this.role) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.role != 0) {
                output.writeInt32(2, this.role);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.familyId);
            }
            if (!this.userId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(4, this.userId);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.role != 0) {
                size += CodedOutputByteBufferNano.computeInt32Size(2, this.role);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(3, this.familyId);
            }
            if (this.userId.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(4, this.userId);
        }

        public CanAddMemberRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GMS_CORE_PEOPLE /*16*/:
                        int value = input.readInt32();
                        switch (value) {
                            case Action.UNKNOWN /*0*/:
                            case TimeSelection.Type.TEMPORARY /*1*/:
                            case TimeSelection.Type.INDEFINITELY /*2*/:
                            case TimeSelection.Type.CUSTOM /*3*/:
                            case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                this.role = value;
                                break;
                            default:
                                continue;
                        }
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.familyId = input.readString();
                        continue;
                    case LogSource.NOVA /*34*/:
                        this.userId = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static CanAddMemberRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (CanAddMemberRequest) MessageNano.mergeFrom(new CanAddMemberRequest(), data);
        }

        public static CanAddMemberRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new CanAddMemberRequest().mergeFrom(input);
        }
    }

    public static final class CanAddMemberResponse extends ExtendableMessageNano<CanAddMemberResponse> {
        private static volatile CanAddMemberResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public boolean canAddMember;
        public CvnChallengeDetails cvnChallengeDetails;
        public int[] unmetPreconditions;

        public static final class CvnChallengeDetails extends ExtendableMessageNano<CvnChallengeDetails> {
            private static volatile CvnChallengeDetails[] _emptyArray;
            public String challengeDescription;
            public String challengeTitle;
            public int cvnImageType;
            public int cvnLength;
            public int familyProductCorrelationIdType;

            public interface CvnImageType {
                public static final int CVN_BACK = 0;
                public static final int CVN_FRONT = 1;
            }

            public static CvnChallengeDetails[] emptyArray() {
                if (_emptyArray == null) {
                    synchronized (InternalNano.LAZY_INIT_LOCK) {
                        if (_emptyArray == null) {
                            _emptyArray = new CvnChallengeDetails[0];
                        }
                    }
                }
                return _emptyArray;
            }

            public CvnChallengeDetails() {
                clear();
            }

            public CvnChallengeDetails clear() {
                this.familyProductCorrelationIdType = 0;
                this.challengeTitle = BuildConfig.VERSION_NAME;
                this.challengeDescription = BuildConfig.VERSION_NAME;
                this.cvnLength = 0;
                this.cvnImageType = 0;
                this.unknownFieldData = null;
                this.cachedSize = -1;
                return this;
            }

            public boolean equals(Object o) {
                if (o == this) {
                    return true;
                }
                if (!(o instanceof CvnChallengeDetails)) {
                    return false;
                }
                CvnChallengeDetails other = (CvnChallengeDetails) o;
                if (this.familyProductCorrelationIdType != other.familyProductCorrelationIdType) {
                    return false;
                }
                if (this.challengeTitle == null) {
                    if (other.challengeTitle != null) {
                        return false;
                    }
                } else if (!this.challengeTitle.equals(other.challengeTitle)) {
                    return false;
                }
                if (this.challengeDescription == null) {
                    if (other.challengeDescription != null) {
                        return false;
                    }
                } else if (!this.challengeDescription.equals(other.challengeDescription)) {
                    return false;
                }
                if (this.cvnLength != other.cvnLength || this.cvnImageType != other.cvnImageType) {
                    return false;
                }
                if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                    return this.unknownFieldData.equals(other.unknownFieldData);
                }
                if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                    return true;
                }
                return false;
            }

            public int hashCode() {
                int i = 0;
                int hashCode = (((((((((((getClass().getName().hashCode() + 527) * 31) + this.familyProductCorrelationIdType) * 31) + (this.challengeTitle == null ? 0 : this.challengeTitle.hashCode())) * 31) + (this.challengeDescription == null ? 0 : this.challengeDescription.hashCode())) * 31) + this.cvnLength) * 31) + this.cvnImageType) * 31;
                if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                    i = this.unknownFieldData.hashCode();
                }
                return hashCode + i;
            }

            public void writeTo(CodedOutputByteBufferNano output) throws IOException {
                if (this.familyProductCorrelationIdType != 0) {
                    output.writeInt32(1, this.familyProductCorrelationIdType);
                }
                if (!this.challengeTitle.equals(BuildConfig.VERSION_NAME)) {
                    output.writeString(2, this.challengeTitle);
                }
                if (!this.challengeDescription.equals(BuildConfig.VERSION_NAME)) {
                    output.writeString(3, this.challengeDescription);
                }
                if (this.cvnLength != 0) {
                    output.writeUInt32(4, this.cvnLength);
                }
                if (this.cvnImageType != 0) {
                    output.writeInt32(5, this.cvnImageType);
                }
                super.writeTo(output);
            }

            protected int computeSerializedSize() {
                int size = super.computeSerializedSize();
                if (this.familyProductCorrelationIdType != 0) {
                    size += CodedOutputByteBufferNano.computeInt32Size(1, this.familyProductCorrelationIdType);
                }
                if (!this.challengeTitle.equals(BuildConfig.VERSION_NAME)) {
                    size += CodedOutputByteBufferNano.computeStringSize(2, this.challengeTitle);
                }
                if (!this.challengeDescription.equals(BuildConfig.VERSION_NAME)) {
                    size += CodedOutputByteBufferNano.computeStringSize(3, this.challengeDescription);
                }
                if (this.cvnLength != 0) {
                    size += CodedOutputByteBufferNano.computeUInt32Size(4, this.cvnLength);
                }
                if (this.cvnImageType != 0) {
                    return size + CodedOutputByteBufferNano.computeInt32Size(5, this.cvnImageType);
                }
                return size;
            }

            public CvnChallengeDetails mergeFrom(CodedInputByteBufferNano input) throws IOException {
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case Action.UNKNOWN /*0*/:
                            break;
                        case Type.TAP_GET_LINK /*8*/:
                            this.familyProductCorrelationIdType = input.readInt32();
                            continue;
                        case LogSource.GOOGLE_ANALYTICS /*18*/:
                            this.challengeTitle = input.readString();
                            continue;
                        case LogSource.ANDROID_CAMERA /*26*/:
                            this.challengeDescription = input.readString();
                            continue;
                        case LogSource.SOCIAL /*32*/:
                            this.cvnLength = input.readUInt32();
                            continue;
                        case LogSource.COPRESENCE /*40*/:
                            int value = input.readInt32();
                            switch (value) {
                                case Action.UNKNOWN /*0*/:
                                case TimeSelection.Type.TEMPORARY /*1*/:
                                    this.cvnImageType = value;
                                    break;
                                default:
                                    continue;
                            }
                        default:
                            if (!storeUnknownField(input, tag)) {
                                break;
                            }
                            continue;
                    }
                    return this;
                }
            }

            public static CvnChallengeDetails parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
                return (CvnChallengeDetails) MessageNano.mergeFrom(new CvnChallengeDetails(), data);
            }

            public static CvnChallengeDetails parseFrom(CodedInputByteBufferNano input) throws IOException {
                return new CvnChallengeDetails().mergeFrom(input);
            }
        }

        public static CanAddMemberResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new CanAddMemberResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public CanAddMemberResponse() {
            clear();
        }

        public CanAddMemberResponse clear() {
            this.apiHeader = null;
            this.canAddMember = false;
            this.unmetPreconditions = WireFormatNano.EMPTY_INT_ARRAY;
            this.cvnChallengeDetails = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof CanAddMemberResponse)) {
                return false;
            }
            CanAddMemberResponse other = (CanAddMemberResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.canAddMember != other.canAddMember || !InternalNano.equals(this.unmetPreconditions, other.unmetPreconditions)) {
                return false;
            }
            if (this.cvnChallengeDetails == null) {
                if (other.cvnChallengeDetails != null) {
                    return false;
                }
            } else if (!this.cvnChallengeDetails.equals(other.cvnChallengeDetails)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.canAddMember ? 1231 : 1237)) * 31) + InternalNano.hashCode(this.unmetPreconditions)) * 31) + (this.cvnChallengeDetails == null ? 0 : this.cvnChallengeDetails.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.canAddMember) {
                output.writeBool(1, this.canAddMember);
            }
            if (this.unmetPreconditions != null && this.unmetPreconditions.length > 0) {
                for (int writeInt32 : this.unmetPreconditions) {
                    output.writeInt32(2, writeInt32);
                }
            }
            if (this.apiHeader != null) {
                output.writeMessage(3, this.apiHeader);
            }
            if (this.cvnChallengeDetails != null) {
                output.writeMessage(4, this.cvnChallengeDetails);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.canAddMember) {
                size += CodedOutputByteBufferNano.computeBoolSize(1, this.canAddMember);
            }
            if (this.unmetPreconditions != null && this.unmetPreconditions.length > 0) {
                int dataSize = 0;
                for (int element : this.unmetPreconditions) {
                    dataSize += CodedOutputByteBufferNano.computeInt32SizeNoTag(element);
                }
                size = (size + dataSize) + (this.unmetPreconditions.length * 1);
            }
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(3, this.apiHeader);
            }
            if (this.cvnChallengeDetails != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(4, this.cvnChallengeDetails);
            }
            return size;
        }

        public CanAddMemberResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                int i;
                int value;
                int[] newArray;
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_GET_LINK /*8*/:
                        this.canAddMember = input.readBool();
                        continue;
                    case LogSource.GMS_CORE_PEOPLE /*16*/:
                        int length = WireFormatNano.getRepeatedFieldArrayLength(input, 16);
                        int[] validValues = new int[length];
                        i = 0;
                        int validCount = 0;
                        while (i < length) {
                            int validCount2;
                            if (i != 0) {
                                input.readTag();
                            }
                            value = input.readInt32();
                            switch (value) {
                                case Action.UNKNOWN /*0*/:
                                case TimeSelection.Type.TEMPORARY /*1*/:
                                case TimeSelection.Type.INDEFINITELY /*2*/:
                                case TimeSelection.Type.CUSTOM /*3*/:
                                case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                case Type.ADD_NEW_SHARES /*5*/:
                                case Type.REMOVE_SHARE /*6*/:
                                case Type.RESET_TIME /*7*/:
                                case Type.TAP_GET_LINK /*8*/:
                                case Type.CREATE_LINK /*9*/:
                                case Type.TAP_ABOUT /*10*/:
                                case Type.TAP_LEARN_MORE /*11*/:
                                case Type.SWITCH_ACCOUNT /*12*/:
                                case Type.DISPLAY_ERROR /*13*/:
                                case Type.LAUNCH_SETTINGS /*14*/:
                                case Type.OVEN_FRESH /*15*/:
                                case LogSource.GMS_CORE_PEOPLE /*16*/:
                                    validCount2 = validCount + 1;
                                    validValues[validCount] = value;
                                    break;
                                default:
                                    validCount2 = validCount;
                                    break;
                            }
                            i++;
                            validCount = validCount2;
                        }
                        if (validCount != 0) {
                            i = this.unmetPreconditions == null ? 0 : this.unmetPreconditions.length;
                            if (i != 0 || validCount != validValues.length) {
                                newArray = new int[(i + validCount)];
                                if (i != 0) {
                                    System.arraycopy(this.unmetPreconditions, 0, newArray, 0, i);
                                }
                                System.arraycopy(validValues, 0, newArray, i, validCount);
                                this.unmetPreconditions = newArray;
                                break;
                            }
                            this.unmetPreconditions = validValues;
                            break;
                        }
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        int limit = input.pushLimit(input.readRawVarint32());
                        int arrayLength = 0;
                        int startPos = input.getPosition();
                        while (input.getBytesUntilLimit() > 0) {
                            switch (input.readInt32()) {
                                case Action.UNKNOWN /*0*/:
                                case TimeSelection.Type.TEMPORARY /*1*/:
                                case TimeSelection.Type.INDEFINITELY /*2*/:
                                case TimeSelection.Type.CUSTOM /*3*/:
                                case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                case Type.ADD_NEW_SHARES /*5*/:
                                case Type.REMOVE_SHARE /*6*/:
                                case Type.RESET_TIME /*7*/:
                                case Type.TAP_GET_LINK /*8*/:
                                case Type.CREATE_LINK /*9*/:
                                case Type.TAP_ABOUT /*10*/:
                                case Type.TAP_LEARN_MORE /*11*/:
                                case Type.SWITCH_ACCOUNT /*12*/:
                                case Type.DISPLAY_ERROR /*13*/:
                                case Type.LAUNCH_SETTINGS /*14*/:
                                case Type.OVEN_FRESH /*15*/:
                                case LogSource.GMS_CORE_PEOPLE /*16*/:
                                    arrayLength++;
                                    break;
                                default:
                                    break;
                            }
                        }
                        if (arrayLength != 0) {
                            input.rewindToPosition(startPos);
                            if (this.unmetPreconditions == null) {
                                i = 0;
                            } else {
                                i = this.unmetPreconditions.length;
                            }
                            newArray = new int[(i + arrayLength)];
                            if (i != 0) {
                                System.arraycopy(this.unmetPreconditions, 0, newArray, 0, i);
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                value = input.readInt32();
                                switch (value) {
                                    case Action.UNKNOWN /*0*/:
                                    case TimeSelection.Type.TEMPORARY /*1*/:
                                    case TimeSelection.Type.INDEFINITELY /*2*/:
                                    case TimeSelection.Type.CUSTOM /*3*/:
                                    case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                    case Type.ADD_NEW_SHARES /*5*/:
                                    case Type.REMOVE_SHARE /*6*/:
                                    case Type.RESET_TIME /*7*/:
                                    case Type.TAP_GET_LINK /*8*/:
                                    case Type.CREATE_LINK /*9*/:
                                    case Type.TAP_ABOUT /*10*/:
                                    case Type.TAP_LEARN_MORE /*11*/:
                                    case Type.SWITCH_ACCOUNT /*12*/:
                                    case Type.DISPLAY_ERROR /*13*/:
                                    case Type.LAUNCH_SETTINGS /*14*/:
                                    case Type.OVEN_FRESH /*15*/:
                                    case LogSource.GMS_CORE_PEOPLE /*16*/:
                                        int i2 = i + 1;
                                        newArray[i] = value;
                                        i = i2;
                                        break;
                                    default:
                                        break;
                                }
                            }
                            this.unmetPreconditions = newArray;
                        }
                        input.popLimit(limit);
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.NOVA /*34*/:
                        if (this.cvnChallengeDetails == null) {
                            this.cvnChallengeDetails = new CvnChallengeDetails();
                        }
                        input.readMessage(this.cvnChallengeDetails);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static CanAddMemberResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (CanAddMemberResponse) MessageNano.mergeFrom(new CanAddMemberResponse(), data);
        }

        public static CanAddMemberResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new CanAddMemberResponse().mergeFrom(input);
        }
    }

    public static final class CanBeParentRequest extends ExtendableMessageNano<CanBeParentRequest> {
        private static volatile CanBeParentRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String personId;

        public static CanBeParentRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new CanBeParentRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public CanBeParentRequest() {
            clear();
        }

        public CanBeParentRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof CanBeParentRequest)) {
                return false;
            }
            CanBeParentRequest other = (CanBeParentRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(2, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.personId);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(2, this.apiHeader);
            }
            if (this.personId.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(3, this.personId);
        }

        public CanBeParentRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.personId = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static CanBeParentRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (CanBeParentRequest) MessageNano.mergeFrom(new CanBeParentRequest(), data);
        }

        public static CanBeParentRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new CanBeParentRequest().mergeFrom(input);
        }
    }

    public static final class CanBeParentResponse extends ExtendableMessageNano<CanBeParentResponse> {
        private static volatile CanBeParentResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public boolean canBeParent;
        public int[] unmetPreconditions;

        public static CanBeParentResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new CanBeParentResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public CanBeParentResponse() {
            clear();
        }

        public CanBeParentResponse clear() {
            this.apiHeader = null;
            this.canBeParent = false;
            this.unmetPreconditions = WireFormatNano.EMPTY_INT_ARRAY;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof CanBeParentResponse)) {
                return false;
            }
            CanBeParentResponse other = (CanBeParentResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.canBeParent != other.canBeParent || !InternalNano.equals(this.unmetPreconditions, other.unmetPreconditions)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.canBeParent ? 1231 : 1237)) * 31) + InternalNano.hashCode(this.unmetPreconditions)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.canBeParent) {
                output.writeBool(1, this.canBeParent);
            }
            if (this.unmetPreconditions != null && this.unmetPreconditions.length > 0) {
                for (int writeInt32 : this.unmetPreconditions) {
                    output.writeInt32(2, writeInt32);
                }
            }
            if (this.apiHeader != null) {
                output.writeMessage(3, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.canBeParent) {
                size += CodedOutputByteBufferNano.computeBoolSize(1, this.canBeParent);
            }
            if (this.unmetPreconditions != null && this.unmetPreconditions.length > 0) {
                int dataSize = 0;
                for (int element : this.unmetPreconditions) {
                    dataSize += CodedOutputByteBufferNano.computeInt32SizeNoTag(element);
                }
                size = (size + dataSize) + (this.unmetPreconditions.length * 1);
            }
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(3, this.apiHeader);
            }
            return size;
        }

        public CanBeParentResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                int i;
                int value;
                int[] newArray;
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_GET_LINK /*8*/:
                        this.canBeParent = input.readBool();
                        continue;
                    case LogSource.GMS_CORE_PEOPLE /*16*/:
                        int length = WireFormatNano.getRepeatedFieldArrayLength(input, 16);
                        int[] validValues = new int[length];
                        i = 0;
                        int validCount = 0;
                        while (i < length) {
                            int validCount2;
                            if (i != 0) {
                                input.readTag();
                            }
                            value = input.readInt32();
                            switch (value) {
                                case Action.UNKNOWN /*0*/:
                                case TimeSelection.Type.TEMPORARY /*1*/:
                                case TimeSelection.Type.INDEFINITELY /*2*/:
                                case TimeSelection.Type.CUSTOM /*3*/:
                                case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                case Type.ADD_NEW_SHARES /*5*/:
                                case Type.REMOVE_SHARE /*6*/:
                                case Type.RESET_TIME /*7*/:
                                case Type.TAP_GET_LINK /*8*/:
                                case Type.CREATE_LINK /*9*/:
                                case Type.TAP_ABOUT /*10*/:
                                case Type.TAP_LEARN_MORE /*11*/:
                                case Type.SWITCH_ACCOUNT /*12*/:
                                case Type.DISPLAY_ERROR /*13*/:
                                case Type.LAUNCH_SETTINGS /*14*/:
                                case Type.OVEN_FRESH /*15*/:
                                case LogSource.GMS_CORE_PEOPLE /*16*/:
                                    validCount2 = validCount + 1;
                                    validValues[validCount] = value;
                                    break;
                                default:
                                    validCount2 = validCount;
                                    break;
                            }
                            i++;
                            validCount = validCount2;
                        }
                        if (validCount != 0) {
                            i = this.unmetPreconditions == null ? 0 : this.unmetPreconditions.length;
                            if (i != 0 || validCount != validValues.length) {
                                newArray = new int[(i + validCount)];
                                if (i != 0) {
                                    System.arraycopy(this.unmetPreconditions, 0, newArray, 0, i);
                                }
                                System.arraycopy(validValues, 0, newArray, i, validCount);
                                this.unmetPreconditions = newArray;
                                break;
                            }
                            this.unmetPreconditions = validValues;
                            break;
                        }
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        int limit = input.pushLimit(input.readRawVarint32());
                        int arrayLength = 0;
                        int startPos = input.getPosition();
                        while (input.getBytesUntilLimit() > 0) {
                            switch (input.readInt32()) {
                                case Action.UNKNOWN /*0*/:
                                case TimeSelection.Type.TEMPORARY /*1*/:
                                case TimeSelection.Type.INDEFINITELY /*2*/:
                                case TimeSelection.Type.CUSTOM /*3*/:
                                case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                case Type.ADD_NEW_SHARES /*5*/:
                                case Type.REMOVE_SHARE /*6*/:
                                case Type.RESET_TIME /*7*/:
                                case Type.TAP_GET_LINK /*8*/:
                                case Type.CREATE_LINK /*9*/:
                                case Type.TAP_ABOUT /*10*/:
                                case Type.TAP_LEARN_MORE /*11*/:
                                case Type.SWITCH_ACCOUNT /*12*/:
                                case Type.DISPLAY_ERROR /*13*/:
                                case Type.LAUNCH_SETTINGS /*14*/:
                                case Type.OVEN_FRESH /*15*/:
                                case LogSource.GMS_CORE_PEOPLE /*16*/:
                                    arrayLength++;
                                    break;
                                default:
                                    break;
                            }
                        }
                        if (arrayLength != 0) {
                            input.rewindToPosition(startPos);
                            if (this.unmetPreconditions == null) {
                                i = 0;
                            } else {
                                i = this.unmetPreconditions.length;
                            }
                            newArray = new int[(i + arrayLength)];
                            if (i != 0) {
                                System.arraycopy(this.unmetPreconditions, 0, newArray, 0, i);
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                value = input.readInt32();
                                switch (value) {
                                    case Action.UNKNOWN /*0*/:
                                    case TimeSelection.Type.TEMPORARY /*1*/:
                                    case TimeSelection.Type.INDEFINITELY /*2*/:
                                    case TimeSelection.Type.CUSTOM /*3*/:
                                    case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                    case Type.ADD_NEW_SHARES /*5*/:
                                    case Type.REMOVE_SHARE /*6*/:
                                    case Type.RESET_TIME /*7*/:
                                    case Type.TAP_GET_LINK /*8*/:
                                    case Type.CREATE_LINK /*9*/:
                                    case Type.TAP_ABOUT /*10*/:
                                    case Type.TAP_LEARN_MORE /*11*/:
                                    case Type.SWITCH_ACCOUNT /*12*/:
                                    case Type.DISPLAY_ERROR /*13*/:
                                    case Type.LAUNCH_SETTINGS /*14*/:
                                    case Type.OVEN_FRESH /*15*/:
                                    case LogSource.GMS_CORE_PEOPLE /*16*/:
                                        int i2 = i + 1;
                                        newArray[i] = value;
                                        i = i2;
                                        break;
                                    default:
                                        break;
                                }
                            }
                            this.unmetPreconditions = newArray;
                        }
                        input.popLimit(limit);
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static CanBeParentResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (CanBeParentResponse) MessageNano.mergeFrom(new CanBeParentResponse(), data);
        }

        public static CanBeParentResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new CanBeParentResponse().mergeFrom(input);
        }
    }

    public static final class CanCreateFamilyRequest extends ExtendableMessageNano<CanCreateFamilyRequest> {
        private static volatile CanCreateFamilyRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String personId;

        public static CanCreateFamilyRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new CanCreateFamilyRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public CanCreateFamilyRequest() {
            clear();
        }

        public CanCreateFamilyRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof CanCreateFamilyRequest)) {
                return false;
            }
            CanCreateFamilyRequest other = (CanCreateFamilyRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.personId.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(2, this.personId);
        }

        public CanCreateFamilyRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static CanCreateFamilyRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (CanCreateFamilyRequest) MessageNano.mergeFrom(new CanCreateFamilyRequest(), data);
        }

        public static CanCreateFamilyRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new CanCreateFamilyRequest().mergeFrom(input);
        }
    }

    public static final class CanCreateFamilyResponse extends ExtendableMessageNano<CanCreateFamilyResponse> {
        private static volatile CanCreateFamilyResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public boolean canCreateFamily;
        public int[] unmetPreconditions;

        public static CanCreateFamilyResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new CanCreateFamilyResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public CanCreateFamilyResponse() {
            clear();
        }

        public CanCreateFamilyResponse clear() {
            this.apiHeader = null;
            this.canCreateFamily = false;
            this.unmetPreconditions = WireFormatNano.EMPTY_INT_ARRAY;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof CanCreateFamilyResponse)) {
                return false;
            }
            CanCreateFamilyResponse other = (CanCreateFamilyResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.canCreateFamily != other.canCreateFamily || !InternalNano.equals(this.unmetPreconditions, other.unmetPreconditions)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.canCreateFamily ? 1231 : 1237)) * 31) + InternalNano.hashCode(this.unmetPreconditions)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.canCreateFamily) {
                output.writeBool(2, this.canCreateFamily);
            }
            if (this.unmetPreconditions != null && this.unmetPreconditions.length > 0) {
                for (int writeInt32 : this.unmetPreconditions) {
                    output.writeInt32(3, writeInt32);
                }
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.canCreateFamily) {
                size += CodedOutputByteBufferNano.computeBoolSize(2, this.canCreateFamily);
            }
            if (this.unmetPreconditions == null || this.unmetPreconditions.length <= 0) {
                return size;
            }
            int dataSize = 0;
            for (int element : this.unmetPreconditions) {
                dataSize += CodedOutputByteBufferNano.computeInt32SizeNoTag(element);
            }
            return (size + dataSize) + (this.unmetPreconditions.length * 1);
        }

        public CanCreateFamilyResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                int i;
                int value;
                int[] newArray;
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GMS_CORE_PEOPLE /*16*/:
                        this.canCreateFamily = input.readBool();
                        continue;
                    case LogSource.LB_C /*24*/:
                        int length = WireFormatNano.getRepeatedFieldArrayLength(input, 24);
                        int[] validValues = new int[length];
                        i = 0;
                        int validCount = 0;
                        while (i < length) {
                            int validCount2;
                            if (i != 0) {
                                input.readTag();
                            }
                            value = input.readInt32();
                            switch (value) {
                                case Action.UNKNOWN /*0*/:
                                case TimeSelection.Type.TEMPORARY /*1*/:
                                case TimeSelection.Type.INDEFINITELY /*2*/:
                                case TimeSelection.Type.CUSTOM /*3*/:
                                case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                case Type.ADD_NEW_SHARES /*5*/:
                                case Type.REMOVE_SHARE /*6*/:
                                case Type.RESET_TIME /*7*/:
                                case Type.TAP_GET_LINK /*8*/:
                                case Type.CREATE_LINK /*9*/:
                                case Type.TAP_ABOUT /*10*/:
                                case Type.TAP_LEARN_MORE /*11*/:
                                case Type.SWITCH_ACCOUNT /*12*/:
                                case Type.DISPLAY_ERROR /*13*/:
                                case Type.LAUNCH_SETTINGS /*14*/:
                                case Type.OVEN_FRESH /*15*/:
                                case LogSource.GMS_CORE_PEOPLE /*16*/:
                                    validCount2 = validCount + 1;
                                    validValues[validCount] = value;
                                    break;
                                default:
                                    validCount2 = validCount;
                                    break;
                            }
                            i++;
                            validCount = validCount2;
                        }
                        if (validCount != 0) {
                            i = this.unmetPreconditions == null ? 0 : this.unmetPreconditions.length;
                            if (i != 0 || validCount != validValues.length) {
                                newArray = new int[(i + validCount)];
                                if (i != 0) {
                                    System.arraycopy(this.unmetPreconditions, 0, newArray, 0, i);
                                }
                                System.arraycopy(validValues, 0, newArray, i, validCount);
                                this.unmetPreconditions = newArray;
                                break;
                            }
                            this.unmetPreconditions = validValues;
                            break;
                        }
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        int limit = input.pushLimit(input.readRawVarint32());
                        int arrayLength = 0;
                        int startPos = input.getPosition();
                        while (input.getBytesUntilLimit() > 0) {
                            switch (input.readInt32()) {
                                case Action.UNKNOWN /*0*/:
                                case TimeSelection.Type.TEMPORARY /*1*/:
                                case TimeSelection.Type.INDEFINITELY /*2*/:
                                case TimeSelection.Type.CUSTOM /*3*/:
                                case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                case Type.ADD_NEW_SHARES /*5*/:
                                case Type.REMOVE_SHARE /*6*/:
                                case Type.RESET_TIME /*7*/:
                                case Type.TAP_GET_LINK /*8*/:
                                case Type.CREATE_LINK /*9*/:
                                case Type.TAP_ABOUT /*10*/:
                                case Type.TAP_LEARN_MORE /*11*/:
                                case Type.SWITCH_ACCOUNT /*12*/:
                                case Type.DISPLAY_ERROR /*13*/:
                                case Type.LAUNCH_SETTINGS /*14*/:
                                case Type.OVEN_FRESH /*15*/:
                                case LogSource.GMS_CORE_PEOPLE /*16*/:
                                    arrayLength++;
                                    break;
                                default:
                                    break;
                            }
                        }
                        if (arrayLength != 0) {
                            input.rewindToPosition(startPos);
                            if (this.unmetPreconditions == null) {
                                i = 0;
                            } else {
                                i = this.unmetPreconditions.length;
                            }
                            newArray = new int[(i + arrayLength)];
                            if (i != 0) {
                                System.arraycopy(this.unmetPreconditions, 0, newArray, 0, i);
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                value = input.readInt32();
                                switch (value) {
                                    case Action.UNKNOWN /*0*/:
                                    case TimeSelection.Type.TEMPORARY /*1*/:
                                    case TimeSelection.Type.INDEFINITELY /*2*/:
                                    case TimeSelection.Type.CUSTOM /*3*/:
                                    case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                    case Type.ADD_NEW_SHARES /*5*/:
                                    case Type.REMOVE_SHARE /*6*/:
                                    case Type.RESET_TIME /*7*/:
                                    case Type.TAP_GET_LINK /*8*/:
                                    case Type.CREATE_LINK /*9*/:
                                    case Type.TAP_ABOUT /*10*/:
                                    case Type.TAP_LEARN_MORE /*11*/:
                                    case Type.SWITCH_ACCOUNT /*12*/:
                                    case Type.DISPLAY_ERROR /*13*/:
                                    case Type.LAUNCH_SETTINGS /*14*/:
                                    case Type.OVEN_FRESH /*15*/:
                                    case LogSource.GMS_CORE_PEOPLE /*16*/:
                                        int i2 = i + 1;
                                        newArray[i] = value;
                                        i = i2;
                                        break;
                                    default:
                                        break;
                                }
                            }
                            this.unmetPreconditions = newArray;
                        }
                        input.popLimit(limit);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static CanCreateFamilyResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (CanCreateFamilyResponse) MessageNano.mergeFrom(new CanCreateFamilyResponse(), data);
        }

        public static CanCreateFamilyResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new CanCreateFamilyResponse().mergeFrom(input);
        }
    }

    public static final class CreateFamilyRequest extends ExtendableMessageNano<CreateFamilyRequest> {
        private static volatile CreateFamilyRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public Family family;

        public static CreateFamilyRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new CreateFamilyRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public CreateFamilyRequest() {
            clear();
        }

        public CreateFamilyRequest clear() {
            this.apiHeader = null;
            this.family = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof CreateFamilyRequest)) {
                return false;
            }
            CreateFamilyRequest other = (CreateFamilyRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.family == null) {
                if (other.family != null) {
                    return false;
                }
            } else if (!this.family.equals(other.family)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.family == null ? 0 : this.family.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.family != null) {
                output.writeMessage(1, this.family);
            }
            if (this.apiHeader != null) {
                output.writeMessage(2, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.family != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.family);
            }
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.apiHeader);
            }
            return size;
        }

        public CreateFamilyRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.family == null) {
                            this.family = new Family();
                        }
                        input.readMessage(this.family);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static CreateFamilyRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (CreateFamilyRequest) MessageNano.mergeFrom(new CreateFamilyRequest(), data);
        }

        public static CreateFamilyRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new CreateFamilyRequest().mergeFrom(input);
        }
    }

    public static final class CreateFamilyResponse extends ExtendableMessageNano<CreateFamilyResponse> {
        private static volatile CreateFamilyResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public Family family;

        public static CreateFamilyResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new CreateFamilyResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public CreateFamilyResponse() {
            clear();
        }

        public CreateFamilyResponse clear() {
            this.apiHeader = null;
            this.family = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof CreateFamilyResponse)) {
                return false;
            }
            CreateFamilyResponse other = (CreateFamilyResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.family == null) {
                if (other.family != null) {
                    return false;
                }
            } else if (!this.family.equals(other.family)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.family == null ? 0 : this.family.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.family != null) {
                output.writeMessage(2, this.family);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.family != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.family);
            }
            return size;
        }

        public CreateFamilyResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.family == null) {
                            this.family = new Family();
                        }
                        input.readMessage(this.family);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static CreateFamilyResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (CreateFamilyResponse) MessageNano.mergeFrom(new CreateFamilyResponse(), data);
        }

        public static CreateFamilyResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new CreateFamilyResponse().mergeFrom(input);
        }
    }

    public static final class CreateInvitationRequest extends ExtendableMessageNano<CreateInvitationRequest> {
        private static volatile CreateInvitationRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String familyId;
        public Invitation invitation;
        public String requesterProductId;

        public static CreateInvitationRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new CreateInvitationRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public CreateInvitationRequest() {
            clear();
        }

        public CreateInvitationRequest clear() {
            this.apiHeader = null;
            this.familyId = BuildConfig.VERSION_NAME;
            this.invitation = null;
            this.requesterProductId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof CreateInvitationRequest)) {
                return false;
            }
            CreateInvitationRequest other = (CreateInvitationRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.familyId == null) {
                if (other.familyId != null) {
                    return false;
                }
            } else if (!this.familyId.equals(other.familyId)) {
                return false;
            }
            if (this.invitation == null) {
                if (other.invitation != null) {
                    return false;
                }
            } else if (!this.invitation.equals(other.invitation)) {
                return false;
            }
            if (this.requesterProductId == null) {
                if (other.requesterProductId != null) {
                    return false;
                }
            } else if (!this.requesterProductId.equals(other.requesterProductId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.familyId == null ? 0 : this.familyId.hashCode())) * 31) + (this.invitation == null ? 0 : this.invitation.hashCode())) * 31) + (this.requesterProductId == null ? 0 : this.requesterProductId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.invitation != null) {
                output.writeMessage(1, this.invitation);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.familyId);
            }
            if (this.apiHeader != null) {
                output.writeMessage(4, this.apiHeader);
            }
            if (!this.requesterProductId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(5, this.requesterProductId);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.invitation != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.invitation);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.familyId);
            }
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(4, this.apiHeader);
            }
            if (this.requesterProductId.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(5, this.requesterProductId);
        }

        public CreateInvitationRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.invitation == null) {
                            this.invitation = new Invitation();
                        }
                        input.readMessage(this.invitation);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.familyId = input.readString();
                        continue;
                    case LogSource.NOVA /*34*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.PHOTOS /*42*/:
                        this.requesterProductId = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static CreateInvitationRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (CreateInvitationRequest) MessageNano.mergeFrom(new CreateInvitationRequest(), data);
        }

        public static CreateInvitationRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new CreateInvitationRequest().mergeFrom(input);
        }
    }

    public static final class CreateInvitationResponse extends ExtendableMessageNano<CreateInvitationResponse> {
        private static volatile CreateInvitationResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public Invitation invitation;

        public static CreateInvitationResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new CreateInvitationResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public CreateInvitationResponse() {
            clear();
        }

        public CreateInvitationResponse clear() {
            this.apiHeader = null;
            this.invitation = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof CreateInvitationResponse)) {
                return false;
            }
            CreateInvitationResponse other = (CreateInvitationResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.invitation == null) {
                if (other.invitation != null) {
                    return false;
                }
            } else if (!this.invitation.equals(other.invitation)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.invitation == null ? 0 : this.invitation.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.invitation != null) {
                output.writeMessage(2, this.invitation);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.invitation != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.invitation);
            }
            return size;
        }

        public CreateInvitationResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.invitation == null) {
                            this.invitation = new Invitation();
                        }
                        input.readMessage(this.invitation);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static CreateInvitationResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (CreateInvitationResponse) MessageNano.mergeFrom(new CreateInvitationResponse(), data);
        }

        public static CreateInvitationResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new CreateInvitationResponse().mergeFrom(input);
        }
    }

    public static final class CreateInvitationsRequest extends ExtendableMessageNano<CreateInvitationsRequest> {
        private static volatile CreateInvitationsRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String familyId;
        public InvitationList invitationList;
        public String requesterProductId;

        public static CreateInvitationsRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new CreateInvitationsRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public CreateInvitationsRequest() {
            clear();
        }

        public CreateInvitationsRequest clear() {
            this.apiHeader = null;
            this.familyId = BuildConfig.VERSION_NAME;
            this.invitationList = null;
            this.requesterProductId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof CreateInvitationsRequest)) {
                return false;
            }
            CreateInvitationsRequest other = (CreateInvitationsRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.familyId == null) {
                if (other.familyId != null) {
                    return false;
                }
            } else if (!this.familyId.equals(other.familyId)) {
                return false;
            }
            if (this.invitationList == null) {
                if (other.invitationList != null) {
                    return false;
                }
            } else if (!this.invitationList.equals(other.invitationList)) {
                return false;
            }
            if (this.requesterProductId == null) {
                if (other.requesterProductId != null) {
                    return false;
                }
            } else if (!this.requesterProductId.equals(other.requesterProductId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.familyId == null ? 0 : this.familyId.hashCode())) * 31) + (this.invitationList == null ? 0 : this.invitationList.hashCode())) * 31) + (this.requesterProductId == null ? 0 : this.requesterProductId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.familyId);
            }
            if (!this.requesterProductId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(4, this.requesterProductId);
            }
            if (this.invitationList != null) {
                output.writeMessage(6, this.invitationList);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.familyId);
            }
            if (!this.requesterProductId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(4, this.requesterProductId);
            }
            if (this.invitationList != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(6, this.invitationList);
            }
            return size;
        }

        public CreateInvitationsRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.familyId = input.readString();
                        continue;
                    case LogSource.NOVA /*34*/:
                        this.requesterProductId = input.readString();
                        continue;
                    case LogSource.HANGOUT_LOG_REQUEST /*50*/:
                        if (this.invitationList == null) {
                            this.invitationList = new InvitationList();
                        }
                        input.readMessage(this.invitationList);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static CreateInvitationsRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (CreateInvitationsRequest) MessageNano.mergeFrom(new CreateInvitationsRequest(), data);
        }

        public static CreateInvitationsRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new CreateInvitationsRequest().mergeFrom(input);
        }
    }

    public static final class CreateInvitationsResponse extends ExtendableMessageNano<CreateInvitationsResponse> {
        private static volatile CreateInvitationsResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public FailedInvitationList failedInvitationList;
        public InvitationList invitationList;

        public static CreateInvitationsResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new CreateInvitationsResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public CreateInvitationsResponse() {
            clear();
        }

        public CreateInvitationsResponse clear() {
            this.apiHeader = null;
            this.invitationList = null;
            this.failedInvitationList = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof CreateInvitationsResponse)) {
                return false;
            }
            CreateInvitationsResponse other = (CreateInvitationsResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.invitationList == null) {
                if (other.invitationList != null) {
                    return false;
                }
            } else if (!this.invitationList.equals(other.invitationList)) {
                return false;
            }
            if (this.failedInvitationList == null) {
                if (other.failedInvitationList != null) {
                    return false;
                }
            } else if (!this.failedInvitationList.equals(other.failedInvitationList)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.invitationList == null ? 0 : this.invitationList.hashCode())) * 31) + (this.failedInvitationList == null ? 0 : this.failedInvitationList.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.invitationList != null) {
                output.writeMessage(3, this.invitationList);
            }
            if (this.failedInvitationList != null) {
                output.writeMessage(4, this.failedInvitationList);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.invitationList != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(3, this.invitationList);
            }
            if (this.failedInvitationList != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(4, this.failedInvitationList);
            }
            return size;
        }

        public CreateInvitationsResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        if (this.invitationList == null) {
                            this.invitationList = new InvitationList();
                        }
                        input.readMessage(this.invitationList);
                        continue;
                    case LogSource.NOVA /*34*/:
                        if (this.failedInvitationList == null) {
                            this.failedInvitationList = new FailedInvitationList();
                        }
                        input.readMessage(this.failedInvitationList);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static CreateInvitationsResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (CreateInvitationsResponse) MessageNano.mergeFrom(new CreateInvitationsResponse(), data);
        }

        public static CreateInvitationsResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new CreateInvitationsResponse().mergeFrom(input);
        }
    }

    public static final class CreatePermissionRequestRequest extends ExtendableMessageNano<CreatePermissionRequestRequest> {
        private static volatile CreatePermissionRequestRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public PermissionRequest permissionRequest;
        public String personId;

        public static CreatePermissionRequestRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new CreatePermissionRequestRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public CreatePermissionRequestRequest() {
            clear();
        }

        public CreatePermissionRequestRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.permissionRequest = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof CreatePermissionRequestRequest)) {
                return false;
            }
            CreatePermissionRequestRequest other = (CreatePermissionRequestRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.permissionRequest == null) {
                if (other.permissionRequest != null) {
                    return false;
                }
            } else if (!this.permissionRequest.equals(other.permissionRequest)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.permissionRequest == null ? 0 : this.permissionRequest.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.permissionRequest != null) {
                output.writeMessage(1, this.permissionRequest);
            }
            if (this.apiHeader != null) {
                output.writeMessage(2, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.personId);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.permissionRequest != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.permissionRequest);
            }
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(2, this.apiHeader);
            }
            if (this.personId.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(3, this.personId);
        }

        public CreatePermissionRequestRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.permissionRequest == null) {
                            this.permissionRequest = new PermissionRequest();
                        }
                        input.readMessage(this.permissionRequest);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.personId = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static CreatePermissionRequestRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (CreatePermissionRequestRequest) MessageNano.mergeFrom(new CreatePermissionRequestRequest(), data);
        }

        public static CreatePermissionRequestRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new CreatePermissionRequestRequest().mergeFrom(input);
        }
    }

    public static final class CreatePermissionRequestResponse extends ExtendableMessageNano<CreatePermissionRequestResponse> {
        private static volatile CreatePermissionRequestResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public PermissionRequest permissionRequest;

        public static CreatePermissionRequestResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new CreatePermissionRequestResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public CreatePermissionRequestResponse() {
            clear();
        }

        public CreatePermissionRequestResponse clear() {
            this.apiHeader = null;
            this.permissionRequest = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof CreatePermissionRequestResponse)) {
                return false;
            }
            CreatePermissionRequestResponse other = (CreatePermissionRequestResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.permissionRequest == null) {
                if (other.permissionRequest != null) {
                    return false;
                }
            } else if (!this.permissionRequest.equals(other.permissionRequest)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.permissionRequest == null ? 0 : this.permissionRequest.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.permissionRequest != null) {
                output.writeMessage(2, this.permissionRequest);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.permissionRequest != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.permissionRequest);
            }
            return size;
        }

        public CreatePermissionRequestResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.permissionRequest == null) {
                            this.permissionRequest = new PermissionRequest();
                        }
                        input.readMessage(this.permissionRequest);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static CreatePermissionRequestResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (CreatePermissionRequestResponse) MessageNano.mergeFrom(new CreatePermissionRequestResponse(), data);
        }

        public static CreatePermissionRequestResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new CreatePermissionRequestResponse().mergeFrom(input);
        }
    }

    public static final class CreateReceiptRequest extends ExtendableMessageNano<CreateReceiptRequest> {
        private static volatile CreateReceiptRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String deviceId;
        public String personId;
        public Receipt receipt;

        public static CreateReceiptRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new CreateReceiptRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public CreateReceiptRequest() {
            clear();
        }

        public CreateReceiptRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.deviceId = BuildConfig.VERSION_NAME;
            this.receipt = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof CreateReceiptRequest)) {
                return false;
            }
            CreateReceiptRequest other = (CreateReceiptRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.deviceId == null) {
                if (other.deviceId != null) {
                    return false;
                }
            } else if (!this.deviceId.equals(other.deviceId)) {
                return false;
            }
            if (this.receipt == null) {
                if (other.receipt != null) {
                    return false;
                }
            } else if (!this.receipt.equals(other.receipt)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.deviceId == null ? 0 : this.deviceId.hashCode())) * 31) + (this.receipt == null ? 0 : this.receipt.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (!this.deviceId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.deviceId);
            }
            if (this.receipt != null) {
                output.writeMessage(4, this.receipt);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (!this.deviceId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(3, this.deviceId);
            }
            if (this.receipt != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(4, this.receipt);
            }
            return size;
        }

        public CreateReceiptRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.deviceId = input.readString();
                        continue;
                    case LogSource.NOVA /*34*/:
                        if (this.receipt == null) {
                            this.receipt = new Receipt();
                        }
                        input.readMessage(this.receipt);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static CreateReceiptRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (CreateReceiptRequest) MessageNano.mergeFrom(new CreateReceiptRequest(), data);
        }

        public static CreateReceiptRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new CreateReceiptRequest().mergeFrom(input);
        }
    }

    public static final class CreateReceiptResponse extends ExtendableMessageNano<CreateReceiptResponse> {
        private static volatile CreateReceiptResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;

        public static CreateReceiptResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new CreateReceiptResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public CreateReceiptResponse() {
            clear();
        }

        public CreateReceiptResponse clear() {
            this.apiHeader = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof CreateReceiptResponse)) {
                return false;
            }
            CreateReceiptResponse other = (CreateReceiptResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            return size;
        }

        public CreateReceiptResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static CreateReceiptResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (CreateReceiptResponse) MessageNano.mergeFrom(new CreateReceiptResponse(), data);
        }

        public static CreateReceiptResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new CreateReceiptResponse().mergeFrom(input);
        }
    }

    public static final class CreateRegisteredDeviceRequest extends ExtendableMessageNano<CreateRegisteredDeviceRequest> {
        private static volatile CreateRegisteredDeviceRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String personId;
        public RegisteredDevice registeredDevice;

        public static CreateRegisteredDeviceRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new CreateRegisteredDeviceRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public CreateRegisteredDeviceRequest() {
            clear();
        }

        public CreateRegisteredDeviceRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.registeredDevice = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof CreateRegisteredDeviceRequest)) {
                return false;
            }
            CreateRegisteredDeviceRequest other = (CreateRegisteredDeviceRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.registeredDevice == null) {
                if (other.registeredDevice != null) {
                    return false;
                }
            } else if (!this.registeredDevice.equals(other.registeredDevice)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.registeredDevice == null ? 0 : this.registeredDevice.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.registeredDevice != null) {
                output.writeMessage(1, this.registeredDevice);
            }
            if (this.apiHeader != null) {
                output.writeMessage(2, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.personId);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.registeredDevice != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.registeredDevice);
            }
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(2, this.apiHeader);
            }
            if (this.personId.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(3, this.personId);
        }

        public CreateRegisteredDeviceRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.registeredDevice == null) {
                            this.registeredDevice = new RegisteredDevice();
                        }
                        input.readMessage(this.registeredDevice);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.personId = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static CreateRegisteredDeviceRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (CreateRegisteredDeviceRequest) MessageNano.mergeFrom(new CreateRegisteredDeviceRequest(), data);
        }

        public static CreateRegisteredDeviceRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new CreateRegisteredDeviceRequest().mergeFrom(input);
        }
    }

    public static final class CreateRegisteredDeviceResponse extends ExtendableMessageNano<CreateRegisteredDeviceResponse> {
        private static volatile CreateRegisteredDeviceResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public RegisteredDevice registeredDevice;

        public static CreateRegisteredDeviceResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new CreateRegisteredDeviceResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public CreateRegisteredDeviceResponse() {
            clear();
        }

        public CreateRegisteredDeviceResponse clear() {
            this.apiHeader = null;
            this.registeredDevice = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof CreateRegisteredDeviceResponse)) {
                return false;
            }
            CreateRegisteredDeviceResponse other = (CreateRegisteredDeviceResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.registeredDevice == null) {
                if (other.registeredDevice != null) {
                    return false;
                }
            } else if (!this.registeredDevice.equals(other.registeredDevice)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.registeredDevice == null ? 0 : this.registeredDevice.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.registeredDevice != null) {
                output.writeMessage(2, this.registeredDevice);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.registeredDevice != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.registeredDevice);
            }
            return size;
        }

        public CreateRegisteredDeviceResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.registeredDevice == null) {
                            this.registeredDevice = new RegisteredDevice();
                        }
                        input.readMessage(this.registeredDevice);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static CreateRegisteredDeviceResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (CreateRegisteredDeviceResponse) MessageNano.mergeFrom(new CreateRegisteredDeviceResponse(), data);
        }

        public static CreateRegisteredDeviceResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new CreateRegisteredDeviceResponse().mergeFrom(input);
        }
    }

    public static final class CreateTimeoutRequest extends ExtendableMessageNano<CreateTimeoutRequest> {
        private static volatile CreateTimeoutRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String personId;
        public Timeout timeout;

        public static CreateTimeoutRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new CreateTimeoutRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public CreateTimeoutRequest() {
            clear();
        }

        public CreateTimeoutRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.timeout = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof CreateTimeoutRequest)) {
                return false;
            }
            CreateTimeoutRequest other = (CreateTimeoutRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.timeout == null) {
                if (other.timeout != null) {
                    return false;
                }
            } else if (!this.timeout.equals(other.timeout)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.timeout == null ? 0 : this.timeout.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (this.timeout != null) {
                output.writeMessage(3, this.timeout);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (this.timeout != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(3, this.timeout);
            }
            return size;
        }

        public CreateTimeoutRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        if (this.timeout == null) {
                            this.timeout = new Timeout();
                        }
                        input.readMessage(this.timeout);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static CreateTimeoutRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (CreateTimeoutRequest) MessageNano.mergeFrom(new CreateTimeoutRequest(), data);
        }

        public static CreateTimeoutRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new CreateTimeoutRequest().mergeFrom(input);
        }
    }

    public static final class CreateTimeoutResponse extends ExtendableMessageNano<CreateTimeoutResponse> {
        private static volatile CreateTimeoutResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public Timeout timeout;

        public static CreateTimeoutResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new CreateTimeoutResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public CreateTimeoutResponse() {
            clear();
        }

        public CreateTimeoutResponse clear() {
            this.apiHeader = null;
            this.timeout = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof CreateTimeoutResponse)) {
                return false;
            }
            CreateTimeoutResponse other = (CreateTimeoutResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.timeout == null) {
                if (other.timeout != null) {
                    return false;
                }
            } else if (!this.timeout.equals(other.timeout)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.timeout == null ? 0 : this.timeout.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.timeout != null) {
                output.writeMessage(2, this.timeout);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.timeout != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.timeout);
            }
            return size;
        }

        public CreateTimeoutResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.timeout == null) {
                            this.timeout = new Timeout();
                        }
                        input.readMessage(this.timeout);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static CreateTimeoutResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (CreateTimeoutResponse) MessageNano.mergeFrom(new CreateTimeoutResponse(), data);
        }

        public static CreateTimeoutResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new CreateTimeoutResponse().mergeFrom(input);
        }
    }

    public static final class DeleteFamilyPlaceRequest extends ExtendableMessageNano<DeleteFamilyPlaceRequest> {
        private static volatile DeleteFamilyPlaceRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String familyId;
        public String familyPlaceId;

        public static DeleteFamilyPlaceRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new DeleteFamilyPlaceRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public DeleteFamilyPlaceRequest() {
            clear();
        }

        public DeleteFamilyPlaceRequest clear() {
            this.apiHeader = null;
            this.familyId = BuildConfig.VERSION_NAME;
            this.familyPlaceId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof DeleteFamilyPlaceRequest)) {
                return false;
            }
            DeleteFamilyPlaceRequest other = (DeleteFamilyPlaceRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.familyId == null) {
                if (other.familyId != null) {
                    return false;
                }
            } else if (!this.familyId.equals(other.familyId)) {
                return false;
            }
            if (this.familyPlaceId == null) {
                if (other.familyPlaceId != null) {
                    return false;
                }
            } else if (!this.familyPlaceId.equals(other.familyPlaceId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.familyId == null ? 0 : this.familyId.hashCode())) * 31) + (this.familyPlaceId == null ? 0 : this.familyPlaceId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.familyId);
            }
            if (!this.familyPlaceId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.familyPlaceId);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.familyId);
            }
            if (this.familyPlaceId.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(3, this.familyPlaceId);
        }

        public DeleteFamilyPlaceRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.familyId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.familyPlaceId = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static DeleteFamilyPlaceRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (DeleteFamilyPlaceRequest) MessageNano.mergeFrom(new DeleteFamilyPlaceRequest(), data);
        }

        public static DeleteFamilyPlaceRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new DeleteFamilyPlaceRequest().mergeFrom(input);
        }
    }

    public static final class DeleteFamilyPlaceResponse extends ExtendableMessageNano<DeleteFamilyPlaceResponse> {
        private static volatile DeleteFamilyPlaceResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;

        public static DeleteFamilyPlaceResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new DeleteFamilyPlaceResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public DeleteFamilyPlaceResponse() {
            clear();
        }

        public DeleteFamilyPlaceResponse clear() {
            this.apiHeader = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof DeleteFamilyPlaceResponse)) {
                return false;
            }
            DeleteFamilyPlaceResponse other = (DeleteFamilyPlaceResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            return size;
        }

        public DeleteFamilyPlaceResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static DeleteFamilyPlaceResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (DeleteFamilyPlaceResponse) MessageNano.mergeFrom(new DeleteFamilyPlaceResponse(), data);
        }

        public static DeleteFamilyPlaceResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new DeleteFamilyPlaceResponse().mergeFrom(input);
        }
    }

    public static final class DeleteFamilyRequest extends ExtendableMessageNano<DeleteFamilyRequest> {
        private static volatile DeleteFamilyRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String id;

        public static DeleteFamilyRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new DeleteFamilyRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public DeleteFamilyRequest() {
            clear();
        }

        public DeleteFamilyRequest clear() {
            this.apiHeader = null;
            this.id = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof DeleteFamilyRequest)) {
                return false;
            }
            DeleteFamilyRequest other = (DeleteFamilyRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.id == null) {
                if (other.id != null) {
                    return false;
                }
            } else if (!this.id.equals(other.id)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.id == null ? 0 : this.id.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(1, this.id);
            }
            if (this.apiHeader != null) {
                output.writeMessage(2, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(1, this.id);
            }
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.apiHeader);
            }
            return size;
        }

        public DeleteFamilyRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        this.id = input.readString();
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static DeleteFamilyRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (DeleteFamilyRequest) MessageNano.mergeFrom(new DeleteFamilyRequest(), data);
        }

        public static DeleteFamilyRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new DeleteFamilyRequest().mergeFrom(input);
        }
    }

    public static final class DeleteFamilyResponse extends ExtendableMessageNano<DeleteFamilyResponse> {
        private static volatile DeleteFamilyResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;

        public static DeleteFamilyResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new DeleteFamilyResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public DeleteFamilyResponse() {
            clear();
        }

        public DeleteFamilyResponse clear() {
            this.apiHeader = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof DeleteFamilyResponse)) {
                return false;
            }
            DeleteFamilyResponse other = (DeleteFamilyResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            return size;
        }

        public DeleteFamilyResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static DeleteFamilyResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (DeleteFamilyResponse) MessageNano.mergeFrom(new DeleteFamilyResponse(), data);
        }

        public static DeleteFamilyResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new DeleteFamilyResponse().mergeFrom(input);
        }
    }

    public static final class DeleteInvitationRequest extends ExtendableMessageNano<DeleteInvitationRequest> {
        private static volatile DeleteInvitationRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String familyId;
        public String invitationId;

        public static DeleteInvitationRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new DeleteInvitationRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public DeleteInvitationRequest() {
            clear();
        }

        public DeleteInvitationRequest clear() {
            this.apiHeader = null;
            this.familyId = BuildConfig.VERSION_NAME;
            this.invitationId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof DeleteInvitationRequest)) {
                return false;
            }
            DeleteInvitationRequest other = (DeleteInvitationRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.familyId == null) {
                if (other.familyId != null) {
                    return false;
                }
            } else if (!this.familyId.equals(other.familyId)) {
                return false;
            }
            if (this.invitationId == null) {
                if (other.invitationId != null) {
                    return false;
                }
            } else if (!this.invitationId.equals(other.invitationId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.familyId == null ? 0 : this.familyId.hashCode())) * 31) + (this.invitationId == null ? 0 : this.invitationId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (!this.invitationId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(1, this.invitationId);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.familyId);
            }
            if (this.apiHeader != null) {
                output.writeMessage(3, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (!this.invitationId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(1, this.invitationId);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.familyId);
            }
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(3, this.apiHeader);
            }
            return size;
        }

        public DeleteInvitationRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        this.invitationId = input.readString();
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.familyId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static DeleteInvitationRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (DeleteInvitationRequest) MessageNano.mergeFrom(new DeleteInvitationRequest(), data);
        }

        public static DeleteInvitationRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new DeleteInvitationRequest().mergeFrom(input);
        }
    }

    public static final class DeleteInvitationResponse extends ExtendableMessageNano<DeleteInvitationResponse> {
        private static volatile DeleteInvitationResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;

        public static DeleteInvitationResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new DeleteInvitationResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public DeleteInvitationResponse() {
            clear();
        }

        public DeleteInvitationResponse clear() {
            this.apiHeader = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof DeleteInvitationResponse)) {
                return false;
            }
            DeleteInvitationResponse other = (DeleteInvitationResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(2, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.apiHeader);
            }
            return size;
        }

        public DeleteInvitationResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static DeleteInvitationResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (DeleteInvitationResponse) MessageNano.mergeFrom(new DeleteInvitationResponse(), data);
        }

        public static DeleteInvitationResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new DeleteInvitationResponse().mergeFrom(input);
        }
    }

    public static final class DeleteMemberRequest extends ExtendableMessageNano<DeleteMemberRequest> {
        private static volatile DeleteMemberRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String familyId;
        public String userId;

        public static DeleteMemberRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new DeleteMemberRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public DeleteMemberRequest() {
            clear();
        }

        public DeleteMemberRequest clear() {
            this.apiHeader = null;
            this.familyId = BuildConfig.VERSION_NAME;
            this.userId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof DeleteMemberRequest)) {
                return false;
            }
            DeleteMemberRequest other = (DeleteMemberRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.familyId == null) {
                if (other.familyId != null) {
                    return false;
                }
            } else if (!this.familyId.equals(other.familyId)) {
                return false;
            }
            if (this.userId == null) {
                if (other.userId != null) {
                    return false;
                }
            } else if (!this.userId.equals(other.userId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.familyId == null ? 0 : this.familyId.hashCode())) * 31) + (this.userId == null ? 0 : this.userId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (!this.userId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(1, this.userId);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.familyId);
            }
            if (this.apiHeader != null) {
                output.writeMessage(3, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (!this.userId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(1, this.userId);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.familyId);
            }
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(3, this.apiHeader);
            }
            return size;
        }

        public DeleteMemberRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        this.userId = input.readString();
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.familyId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static DeleteMemberRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (DeleteMemberRequest) MessageNano.mergeFrom(new DeleteMemberRequest(), data);
        }

        public static DeleteMemberRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new DeleteMemberRequest().mergeFrom(input);
        }
    }

    public static final class DeleteMemberResponse extends ExtendableMessageNano<DeleteMemberResponse> {
        private static volatile DeleteMemberResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;

        public static DeleteMemberResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new DeleteMemberResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public DeleteMemberResponse() {
            clear();
        }

        public DeleteMemberResponse clear() {
            this.apiHeader = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof DeleteMemberResponse)) {
                return false;
            }
            DeleteMemberResponse other = (DeleteMemberResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            return size;
        }

        public DeleteMemberResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static DeleteMemberResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (DeleteMemberResponse) MessageNano.mergeFrom(new DeleteMemberResponse(), data);
        }

        public static DeleteMemberResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new DeleteMemberResponse().mergeFrom(input);
        }
    }

    public static final class DeletePermissionRequestRequest extends ExtendableMessageNano<DeletePermissionRequestRequest> {
        private static volatile DeletePermissionRequestRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String id;
        public String personId;

        public static DeletePermissionRequestRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new DeletePermissionRequestRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public DeletePermissionRequestRequest() {
            clear();
        }

        public DeletePermissionRequestRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.id = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof DeletePermissionRequestRequest)) {
                return false;
            }
            DeletePermissionRequestRequest other = (DeletePermissionRequestRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.id == null) {
                if (other.id != null) {
                    return false;
                }
            } else if (!this.id.equals(other.id)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.id == null ? 0 : this.id.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(1, this.id);
            }
            if (this.apiHeader != null) {
                output.writeMessage(2, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.personId);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(1, this.id);
            }
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(2, this.apiHeader);
            }
            if (this.personId.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(3, this.personId);
        }

        public DeletePermissionRequestRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        this.id = input.readString();
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.personId = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static DeletePermissionRequestRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (DeletePermissionRequestRequest) MessageNano.mergeFrom(new DeletePermissionRequestRequest(), data);
        }

        public static DeletePermissionRequestRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new DeletePermissionRequestRequest().mergeFrom(input);
        }
    }

    public static final class DeletePermissionRequestResponse extends ExtendableMessageNano<DeletePermissionRequestResponse> {
        private static volatile DeletePermissionRequestResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;

        public static DeletePermissionRequestResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new DeletePermissionRequestResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public DeletePermissionRequestResponse() {
            clear();
        }

        public DeletePermissionRequestResponse clear() {
            this.apiHeader = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof DeletePermissionRequestResponse)) {
                return false;
            }
            DeletePermissionRequestResponse other = (DeletePermissionRequestResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            return size;
        }

        public DeletePermissionRequestResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static DeletePermissionRequestResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (DeletePermissionRequestResponse) MessageNano.mergeFrom(new DeletePermissionRequestResponse(), data);
        }

        public static DeletePermissionRequestResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new DeletePermissionRequestResponse().mergeFrom(input);
        }
    }

    public static final class DeleteRegisteredDeviceRequest extends ExtendableMessageNano<DeleteRegisteredDeviceRequest> {
        private static volatile DeleteRegisteredDeviceRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String personId;
        public RegisteredDevice registeredDevice;
        public String registrationId;

        public static DeleteRegisteredDeviceRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new DeleteRegisteredDeviceRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public DeleteRegisteredDeviceRequest() {
            clear();
        }

        public DeleteRegisteredDeviceRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.registrationId = BuildConfig.VERSION_NAME;
            this.registeredDevice = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof DeleteRegisteredDeviceRequest)) {
                return false;
            }
            DeleteRegisteredDeviceRequest other = (DeleteRegisteredDeviceRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.registrationId == null) {
                if (other.registrationId != null) {
                    return false;
                }
            } else if (!this.registrationId.equals(other.registrationId)) {
                return false;
            }
            if (this.registeredDevice == null) {
                if (other.registeredDevice != null) {
                    return false;
                }
            } else if (!this.registeredDevice.equals(other.registeredDevice)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.registrationId == null ? 0 : this.registrationId.hashCode())) * 31) + (this.registeredDevice == null ? 0 : this.registeredDevice.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (!this.registrationId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(1, this.registrationId);
            }
            if (this.apiHeader != null) {
                output.writeMessage(2, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.personId);
            }
            if (this.registeredDevice != null) {
                output.writeMessage(4, this.registeredDevice);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (!this.registrationId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(1, this.registrationId);
            }
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(2, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(3, this.personId);
            }
            if (this.registeredDevice != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(4, this.registeredDevice);
            }
            return size;
        }

        public DeleteRegisteredDeviceRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        this.registrationId = input.readString();
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.NOVA /*34*/:
                        if (this.registeredDevice == null) {
                            this.registeredDevice = new RegisteredDevice();
                        }
                        input.readMessage(this.registeredDevice);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static DeleteRegisteredDeviceRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (DeleteRegisteredDeviceRequest) MessageNano.mergeFrom(new DeleteRegisteredDeviceRequest(), data);
        }

        public static DeleteRegisteredDeviceRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new DeleteRegisteredDeviceRequest().mergeFrom(input);
        }
    }

    public static final class DeleteRegisteredDeviceResponse extends ExtendableMessageNano<DeleteRegisteredDeviceResponse> {
        private static volatile DeleteRegisteredDeviceResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;

        public static DeleteRegisteredDeviceResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new DeleteRegisteredDeviceResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public DeleteRegisteredDeviceResponse() {
            clear();
        }

        public DeleteRegisteredDeviceResponse clear() {
            this.apiHeader = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof DeleteRegisteredDeviceResponse)) {
                return false;
            }
            DeleteRegisteredDeviceResponse other = (DeleteRegisteredDeviceResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            return size;
        }

        public DeleteRegisteredDeviceResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static DeleteRegisteredDeviceResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (DeleteRegisteredDeviceResponse) MessageNano.mergeFrom(new DeleteRegisteredDeviceResponse(), data);
        }

        public static DeleteRegisteredDeviceResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new DeleteRegisteredDeviceResponse().mergeFrom(input);
        }
    }

    public static final class DeleteTimeoutRequest extends ExtendableMessageNano<DeleteTimeoutRequest> {
        private static volatile DeleteTimeoutRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String personId;
        public String timeoutId;

        public static DeleteTimeoutRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new DeleteTimeoutRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public DeleteTimeoutRequest() {
            clear();
        }

        public DeleteTimeoutRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.timeoutId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof DeleteTimeoutRequest)) {
                return false;
            }
            DeleteTimeoutRequest other = (DeleteTimeoutRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.timeoutId == null) {
                if (other.timeoutId != null) {
                    return false;
                }
            } else if (!this.timeoutId.equals(other.timeoutId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.timeoutId == null ? 0 : this.timeoutId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (!this.timeoutId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.timeoutId);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (this.timeoutId.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(3, this.timeoutId);
        }

        public DeleteTimeoutRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.timeoutId = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static DeleteTimeoutRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (DeleteTimeoutRequest) MessageNano.mergeFrom(new DeleteTimeoutRequest(), data);
        }

        public static DeleteTimeoutRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new DeleteTimeoutRequest().mergeFrom(input);
        }
    }

    public static final class DeleteTimeoutResponse extends ExtendableMessageNano<DeleteTimeoutResponse> {
        private static volatile DeleteTimeoutResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;

        public static DeleteTimeoutResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new DeleteTimeoutResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public DeleteTimeoutResponse() {
            clear();
        }

        public DeleteTimeoutResponse clear() {
            this.apiHeader = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof DeleteTimeoutResponse)) {
                return false;
            }
            DeleteTimeoutResponse other = (DeleteTimeoutResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            return size;
        }

        public DeleteTimeoutResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static DeleteTimeoutResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (DeleteTimeoutResponse) MessageNano.mergeFrom(new DeleteTimeoutResponse(), data);
        }

        public static DeleteTimeoutResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new DeleteTimeoutResponse().mergeFrom(input);
        }
    }

    public static final class EventTypeConfig extends ExtendableMessageNano<EventTypeConfig> {
        private static volatile EventTypeConfig[] _emptyArray;
        public int autoDecideState;
        public String eventTypeId;
        public String personId;

        public static EventTypeConfig[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new EventTypeConfig[0];
                    }
                }
            }
            return _emptyArray;
        }

        public EventTypeConfig() {
            clear();
        }

        public EventTypeConfig clear() {
            this.eventTypeId = BuildConfig.VERSION_NAME;
            this.personId = BuildConfig.VERSION_NAME;
            this.autoDecideState = 0;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof EventTypeConfig)) {
                return false;
            }
            EventTypeConfig other = (EventTypeConfig) o;
            if (this.eventTypeId == null) {
                if (other.eventTypeId != null) {
                    return false;
                }
            } else if (!this.eventTypeId.equals(other.eventTypeId)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.autoDecideState != other.autoDecideState) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.eventTypeId == null ? 0 : this.eventTypeId.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + this.autoDecideState) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (!this.eventTypeId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(1, this.eventTypeId);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (this.autoDecideState != 0) {
                output.writeInt32(3, this.autoDecideState);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (!this.eventTypeId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(1, this.eventTypeId);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (this.autoDecideState != 0) {
                return size + CodedOutputByteBufferNano.computeInt32Size(3, this.autoDecideState);
            }
            return size;
        }

        public EventTypeConfig mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        this.eventTypeId = input.readString();
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.LB_C /*24*/:
                        int value = input.readInt32();
                        switch (value) {
                            case Action.UNKNOWN /*0*/:
                            case TimeSelection.Type.TEMPORARY /*1*/:
                            case TimeSelection.Type.INDEFINITELY /*2*/:
                            case TimeSelection.Type.CUSTOM /*3*/:
                                this.autoDecideState = value;
                                break;
                            default:
                                continue;
                        }
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static EventTypeConfig parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (EventTypeConfig) MessageNano.mergeFrom(new EventTypeConfig(), data);
        }

        public static EventTypeConfig parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new EventTypeConfig().mergeFrom(input);
        }
    }

    public static final class ExecuteRemoteActionRequest extends ExtendableMessageNano<ExecuteRemoteActionRequest> {
        private static volatile ExecuteRemoteActionRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String deviceId;
        public RemoteInstruction instruction;
        public String personId;

        public static ExecuteRemoteActionRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ExecuteRemoteActionRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ExecuteRemoteActionRequest() {
            clear();
        }

        public ExecuteRemoteActionRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.deviceId = BuildConfig.VERSION_NAME;
            this.instruction = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ExecuteRemoteActionRequest)) {
                return false;
            }
            ExecuteRemoteActionRequest other = (ExecuteRemoteActionRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.deviceId == null) {
                if (other.deviceId != null) {
                    return false;
                }
            } else if (!this.deviceId.equals(other.deviceId)) {
                return false;
            }
            if (this.instruction == null) {
                if (other.instruction != null) {
                    return false;
                }
            } else if (!this.instruction.equals(other.instruction)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.deviceId == null ? 0 : this.deviceId.hashCode())) * 31) + (this.instruction == null ? 0 : this.instruction.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (!this.deviceId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.deviceId);
            }
            if (this.instruction != null) {
                output.writeMessage(4, this.instruction);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (!this.deviceId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(3, this.deviceId);
            }
            if (this.instruction != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(4, this.instruction);
            }
            return size;
        }

        public ExecuteRemoteActionRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.deviceId = input.readString();
                        continue;
                    case LogSource.NOVA /*34*/:
                        if (this.instruction == null) {
                            this.instruction = new RemoteInstruction();
                        }
                        input.readMessage(this.instruction);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ExecuteRemoteActionRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ExecuteRemoteActionRequest) MessageNano.mergeFrom(new ExecuteRemoteActionRequest(), data);
        }

        public static ExecuteRemoteActionRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ExecuteRemoteActionRequest().mergeFrom(input);
        }
    }

    public static final class ExecuteRemoteActionResponse extends ExtendableMessageNano<ExecuteRemoteActionResponse> {
        private static volatile ExecuteRemoteActionResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;

        public static ExecuteRemoteActionResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ExecuteRemoteActionResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ExecuteRemoteActionResponse() {
            clear();
        }

        public ExecuteRemoteActionResponse clear() {
            this.apiHeader = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ExecuteRemoteActionResponse)) {
                return false;
            }
            ExecuteRemoteActionResponse other = (ExecuteRemoteActionResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            return size;
        }

        public ExecuteRemoteActionResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ExecuteRemoteActionResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ExecuteRemoteActionResponse) MessageNano.mergeFrom(new ExecuteRemoteActionResponse(), data);
        }

        public static ExecuteRemoteActionResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ExecuteRemoteActionResponse().mergeFrom(input);
        }
    }

    public static final class FailedInvitation extends ExtendableMessageNano<FailedInvitation> {
        private static volatile FailedInvitation[] _emptyArray;
        public String clientCorrelationId;

        public static FailedInvitation[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new FailedInvitation[0];
                    }
                }
            }
            return _emptyArray;
        }

        public FailedInvitation() {
            clear();
        }

        public FailedInvitation clear() {
            this.clientCorrelationId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof FailedInvitation)) {
                return false;
            }
            FailedInvitation other = (FailedInvitation) o;
            if (this.clientCorrelationId == null) {
                if (other.clientCorrelationId != null) {
                    return false;
                }
            } else if (!this.clientCorrelationId.equals(other.clientCorrelationId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((getClass().getName().hashCode() + 527) * 31) + (this.clientCorrelationId == null ? 0 : this.clientCorrelationId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (!this.clientCorrelationId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(1, this.clientCorrelationId);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.clientCorrelationId.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(1, this.clientCorrelationId);
        }

        public FailedInvitation mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        this.clientCorrelationId = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static FailedInvitation parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (FailedInvitation) MessageNano.mergeFrom(new FailedInvitation(), data);
        }

        public static FailedInvitation parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new FailedInvitation().mergeFrom(input);
        }
    }

    public static final class FailedInvitationList extends ExtendableMessageNano<FailedInvitationList> {
        private static volatile FailedInvitationList[] _emptyArray;
        public FailedInvitation[] failedInvitations;

        public static FailedInvitationList[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new FailedInvitationList[0];
                    }
                }
            }
            return _emptyArray;
        }

        public FailedInvitationList() {
            clear();
        }

        public FailedInvitationList clear() {
            this.failedInvitations = FailedInvitation.emptyArray();
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof FailedInvitationList)) {
                return false;
            }
            FailedInvitationList other = (FailedInvitationList) o;
            if (!InternalNano.equals(this.failedInvitations, other.failedInvitations)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int hashCode = (((getClass().getName().hashCode() + 527) * 31) + InternalNano.hashCode(this.failedInvitations)) * 31;
            int hashCode2 = (this.unknownFieldData == null || this.unknownFieldData.isEmpty()) ? 0 : this.unknownFieldData.hashCode();
            return hashCode + hashCode2;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.failedInvitations != null && this.failedInvitations.length > 0) {
                for (FailedInvitation element : this.failedInvitations) {
                    if (element != null) {
                        output.writeMessage(1, element);
                    }
                }
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.failedInvitations != null && this.failedInvitations.length > 0) {
                for (FailedInvitation element : this.failedInvitations) {
                    if (element != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(1, element);
                    }
                }
            }
            return size;
        }

        public FailedInvitationList mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        int i;
                        int arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 10);
                        if (this.failedInvitations == null) {
                            i = 0;
                        } else {
                            i = this.failedInvitations.length;
                        }
                        FailedInvitation[] newArray = new FailedInvitation[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.failedInvitations, 0, newArray, 0, i);
                        }
                        while (i < newArray.length - 1) {
                            newArray[i] = new FailedInvitation();
                            input.readMessage(newArray[i]);
                            input.readTag();
                            i++;
                        }
                        newArray[i] = new FailedInvitation();
                        input.readMessage(newArray[i]);
                        this.failedInvitations = newArray;
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static FailedInvitationList parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (FailedInvitationList) MessageNano.mergeFrom(new FailedInvitationList(), data);
        }

        public static FailedInvitationList parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new FailedInvitationList().mergeFrom(input);
        }
    }

    public static final class FamilyAppConfig extends ExtendableMessageNano<FamilyAppConfig> {
        private static volatile FamilyAppConfig[] _emptyArray;
        public ClientFeature[] clientFeatures;
        public int familyMembership;
        public int familyState;
        public FixitState fixitState;
        public String invitationSmsPreviewText;
        public ManagementCapabilities managementCapabilities;
        public int maxFamilySize;
        public MobileExperiment[] mobileExperiments;
        public int role;
        public AppUpgradeStatus upgradeStatus;
        public String viewerUserId;

        public static final class ClientFeature extends ExtendableMessageNano<ClientFeature> {
            private static volatile ClientFeature[] _emptyArray;
            public String name;

            public static ClientFeature[] emptyArray() {
                if (_emptyArray == null) {
                    synchronized (InternalNano.LAZY_INIT_LOCK) {
                        if (_emptyArray == null) {
                            _emptyArray = new ClientFeature[0];
                        }
                    }
                }
                return _emptyArray;
            }

            public ClientFeature() {
                clear();
            }

            public ClientFeature clear() {
                this.name = BuildConfig.VERSION_NAME;
                this.unknownFieldData = null;
                this.cachedSize = -1;
                return this;
            }

            public boolean equals(Object o) {
                if (o == this) {
                    return true;
                }
                if (!(o instanceof ClientFeature)) {
                    return false;
                }
                ClientFeature other = (ClientFeature) o;
                if (this.name == null) {
                    if (other.name != null) {
                        return false;
                    }
                } else if (!this.name.equals(other.name)) {
                    return false;
                }
                if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                    return this.unknownFieldData.equals(other.unknownFieldData);
                }
                if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                    return true;
                }
                return false;
            }

            public int hashCode() {
                int i = 0;
                int hashCode = (((getClass().getName().hashCode() + 527) * 31) + (this.name == null ? 0 : this.name.hashCode())) * 31;
                if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                    i = this.unknownFieldData.hashCode();
                }
                return hashCode + i;
            }

            public void writeTo(CodedOutputByteBufferNano output) throws IOException {
                if (!this.name.equals(BuildConfig.VERSION_NAME)) {
                    output.writeString(1, this.name);
                }
                super.writeTo(output);
            }

            protected int computeSerializedSize() {
                int size = super.computeSerializedSize();
                if (this.name.equals(BuildConfig.VERSION_NAME)) {
                    return size;
                }
                return size + CodedOutputByteBufferNano.computeStringSize(1, this.name);
            }

            public ClientFeature mergeFrom(CodedInputByteBufferNano input) throws IOException {
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case Action.UNKNOWN /*0*/:
                            break;
                        case Type.TAP_ABOUT /*10*/:
                            this.name = input.readString();
                            continue;
                        default:
                            if (!storeUnknownField(input, tag)) {
                                break;
                            }
                            continue;
                    }
                    return this;
                }
            }

            public static ClientFeature parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
                return (ClientFeature) MessageNano.mergeFrom(new ClientFeature(), data);
            }

            public static ClientFeature parseFrom(CodedInputByteBufferNano input) throws IOException {
                return new ClientFeature().mergeFrom(input);
            }
        }

        public interface FamilyMembership {
            public static final int HAS_FAMILY = 2;
            public static final int NO_FAMILY = 1;
            public static final int UNKNOWN_FAMILY_MEMBERSHIP = 0;
        }

        public static final class MobileExperiment extends ExtendableMessageNano<MobileExperiment> {
            private static volatile MobileExperiment[] _emptyArray;
            public String displayName;
            public String id;

            public static MobileExperiment[] emptyArray() {
                if (_emptyArray == null) {
                    synchronized (InternalNano.LAZY_INIT_LOCK) {
                        if (_emptyArray == null) {
                            _emptyArray = new MobileExperiment[0];
                        }
                    }
                }
                return _emptyArray;
            }

            public MobileExperiment() {
                clear();
            }

            public MobileExperiment clear() {
                this.id = BuildConfig.VERSION_NAME;
                this.displayName = BuildConfig.VERSION_NAME;
                this.unknownFieldData = null;
                this.cachedSize = -1;
                return this;
            }

            public boolean equals(Object o) {
                if (o == this) {
                    return true;
                }
                if (!(o instanceof MobileExperiment)) {
                    return false;
                }
                MobileExperiment other = (MobileExperiment) o;
                if (this.id == null) {
                    if (other.id != null) {
                        return false;
                    }
                } else if (!this.id.equals(other.id)) {
                    return false;
                }
                if (this.displayName == null) {
                    if (other.displayName != null) {
                        return false;
                    }
                } else if (!this.displayName.equals(other.displayName)) {
                    return false;
                }
                if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                    return this.unknownFieldData.equals(other.unknownFieldData);
                }
                if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                    return true;
                }
                return false;
            }

            public int hashCode() {
                int i = 0;
                int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.id == null ? 0 : this.id.hashCode())) * 31) + (this.displayName == null ? 0 : this.displayName.hashCode())) * 31;
                if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                    i = this.unknownFieldData.hashCode();
                }
                return hashCode + i;
            }

            public void writeTo(CodedOutputByteBufferNano output) throws IOException {
                if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                    output.writeString(1, this.id);
                }
                if (!this.displayName.equals(BuildConfig.VERSION_NAME)) {
                    output.writeString(2, this.displayName);
                }
                super.writeTo(output);
            }

            protected int computeSerializedSize() {
                int size = super.computeSerializedSize();
                if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                    size += CodedOutputByteBufferNano.computeStringSize(1, this.id);
                }
                if (this.displayName.equals(BuildConfig.VERSION_NAME)) {
                    return size;
                }
                return size + CodedOutputByteBufferNano.computeStringSize(2, this.displayName);
            }

            public MobileExperiment mergeFrom(CodedInputByteBufferNano input) throws IOException {
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case Action.UNKNOWN /*0*/:
                            break;
                        case Type.TAP_ABOUT /*10*/:
                            this.id = input.readString();
                            continue;
                        case LogSource.GOOGLE_ANALYTICS /*18*/:
                            this.displayName = input.readString();
                            continue;
                        default:
                            if (!storeUnknownField(input, tag)) {
                                break;
                            }
                            continue;
                    }
                    return this;
                }
            }

            public static MobileExperiment parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
                return (MobileExperiment) MessageNano.mergeFrom(new MobileExperiment(), data);
            }

            public static MobileExperiment parseFrom(CodedInputByteBufferNano input) throws IOException {
                return new MobileExperiment().mergeFrom(input);
            }
        }

        public static FamilyAppConfig[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new FamilyAppConfig[0];
                    }
                }
            }
            return _emptyArray;
        }

        public FamilyAppConfig() {
            clear();
        }

        public FamilyAppConfig clear() {
            this.mobileExperiments = MobileExperiment.emptyArray();
            this.familyMembership = 0;
            this.role = 0;
            this.upgradeStatus = null;
            this.managementCapabilities = null;
            this.fixitState = null;
            this.maxFamilySize = 0;
            this.viewerUserId = BuildConfig.VERSION_NAME;
            this.invitationSmsPreviewText = BuildConfig.VERSION_NAME;
            this.familyState = 0;
            this.clientFeatures = ClientFeature.emptyArray();
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof FamilyAppConfig)) {
                return false;
            }
            FamilyAppConfig other = (FamilyAppConfig) o;
            if (!InternalNano.equals(this.mobileExperiments, other.mobileExperiments) || this.familyMembership != other.familyMembership || this.role != other.role) {
                return false;
            }
            if (this.upgradeStatus == null) {
                if (other.upgradeStatus != null) {
                    return false;
                }
            } else if (!this.upgradeStatus.equals(other.upgradeStatus)) {
                return false;
            }
            if (this.managementCapabilities == null) {
                if (other.managementCapabilities != null) {
                    return false;
                }
            } else if (!this.managementCapabilities.equals(other.managementCapabilities)) {
                return false;
            }
            if (this.fixitState == null) {
                if (other.fixitState != null) {
                    return false;
                }
            } else if (!this.fixitState.equals(other.fixitState)) {
                return false;
            }
            if (this.maxFamilySize != other.maxFamilySize) {
                return false;
            }
            if (this.viewerUserId == null) {
                if (other.viewerUserId != null) {
                    return false;
                }
            } else if (!this.viewerUserId.equals(other.viewerUserId)) {
                return false;
            }
            if (this.invitationSmsPreviewText == null) {
                if (other.invitationSmsPreviewText != null) {
                    return false;
                }
            } else if (!this.invitationSmsPreviewText.equals(other.invitationSmsPreviewText)) {
                return false;
            }
            if (this.familyState != other.familyState || !InternalNano.equals(this.clientFeatures, other.clientFeatures)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((((((((((((((((getClass().getName().hashCode() + 527) * 31) + InternalNano.hashCode(this.mobileExperiments)) * 31) + this.familyMembership) * 31) + this.role) * 31) + (this.upgradeStatus == null ? 0 : this.upgradeStatus.hashCode())) * 31) + (this.managementCapabilities == null ? 0 : this.managementCapabilities.hashCode())) * 31) + (this.fixitState == null ? 0 : this.fixitState.hashCode())) * 31) + this.maxFamilySize) * 31) + (this.viewerUserId == null ? 0 : this.viewerUserId.hashCode())) * 31) + (this.invitationSmsPreviewText == null ? 0 : this.invitationSmsPreviewText.hashCode())) * 31) + this.familyState) * 31) + InternalNano.hashCode(this.clientFeatures)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.mobileExperiments != null && this.mobileExperiments.length > 0) {
                for (MobileExperiment element : this.mobileExperiments) {
                    if (element != null) {
                        output.writeMessage(1, element);
                    }
                }
            }
            if (this.familyMembership != 0) {
                output.writeInt32(2, this.familyMembership);
            }
            if (this.role != 0) {
                output.writeInt32(3, this.role);
            }
            if (this.upgradeStatus != null) {
                output.writeMessage(4, this.upgradeStatus);
            }
            if (this.managementCapabilities != null) {
                output.writeMessage(5, this.managementCapabilities);
            }
            if (this.fixitState != null) {
                output.writeMessage(6, this.fixitState);
            }
            if (this.maxFamilySize != 0) {
                output.writeInt32(7, this.maxFamilySize);
            }
            if (!this.viewerUserId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(8, this.viewerUserId);
            }
            if (!this.invitationSmsPreviewText.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(9, this.invitationSmsPreviewText);
            }
            if (this.familyState != 0) {
                output.writeInt32(10, this.familyState);
            }
            if (this.clientFeatures != null && this.clientFeatures.length > 0) {
                for (ClientFeature element2 : this.clientFeatures) {
                    if (element2 != null) {
                        output.writeMessage(11, element2);
                    }
                }
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.mobileExperiments != null && this.mobileExperiments.length > 0) {
                for (MobileExperiment element : this.mobileExperiments) {
                    if (element != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(1, element);
                    }
                }
            }
            if (this.familyMembership != 0) {
                size += CodedOutputByteBufferNano.computeInt32Size(2, this.familyMembership);
            }
            if (this.role != 0) {
                size += CodedOutputByteBufferNano.computeInt32Size(3, this.role);
            }
            if (this.upgradeStatus != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(4, this.upgradeStatus);
            }
            if (this.managementCapabilities != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(5, this.managementCapabilities);
            }
            if (this.fixitState != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(6, this.fixitState);
            }
            if (this.maxFamilySize != 0) {
                size += CodedOutputByteBufferNano.computeInt32Size(7, this.maxFamilySize);
            }
            if (!this.viewerUserId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(8, this.viewerUserId);
            }
            if (!this.invitationSmsPreviewText.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(9, this.invitationSmsPreviewText);
            }
            if (this.familyState != 0) {
                size += CodedOutputByteBufferNano.computeInt32Size(10, this.familyState);
            }
            if (this.clientFeatures != null && this.clientFeatures.length > 0) {
                for (ClientFeature element2 : this.clientFeatures) {
                    if (element2 != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(11, element2);
                    }
                }
            }
            return size;
        }

        public FamilyAppConfig mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                int arrayLength;
                int i;
                int value;
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 10);
                        if (this.mobileExperiments == null) {
                            i = 0;
                        } else {
                            i = this.mobileExperiments.length;
                        }
                        MobileExperiment[] newArray = new MobileExperiment[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.mobileExperiments, 0, newArray, 0, i);
                        }
                        while (i < newArray.length - 1) {
                            newArray[i] = new MobileExperiment();
                            input.readMessage(newArray[i]);
                            input.readTag();
                            i++;
                        }
                        newArray[i] = new MobileExperiment();
                        input.readMessage(newArray[i]);
                        this.mobileExperiments = newArray;
                        continue;
                    case LogSource.GMS_CORE_PEOPLE /*16*/:
                        value = input.readInt32();
                        switch (value) {
                            case Action.UNKNOWN /*0*/:
                            case TimeSelection.Type.TEMPORARY /*1*/:
                            case TimeSelection.Type.INDEFINITELY /*2*/:
                                this.familyMembership = value;
                                break;
                            default:
                                continue;
                        }
                    case LogSource.LB_C /*24*/:
                        value = input.readInt32();
                        switch (value) {
                            case Action.UNKNOWN /*0*/:
                            case TimeSelection.Type.TEMPORARY /*1*/:
                            case TimeSelection.Type.INDEFINITELY /*2*/:
                            case TimeSelection.Type.CUSTOM /*3*/:
                            case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                this.role = value;
                                break;
                            default:
                                continue;
                        }
                    case LogSource.NOVA /*34*/:
                        if (this.upgradeStatus == null) {
                            this.upgradeStatus = new AppUpgradeStatus();
                        }
                        input.readMessage(this.upgradeStatus);
                        continue;
                    case LogSource.PHOTOS /*42*/:
                        if (this.managementCapabilities == null) {
                            this.managementCapabilities = new ManagementCapabilities();
                        }
                        input.readMessage(this.managementCapabilities);
                        continue;
                    case LogSource.HANGOUT_LOG_REQUEST /*50*/:
                        if (this.fixitState == null) {
                            this.fixitState = new FixitState();
                        }
                        input.readMessage(this.fixitState);
                        continue;
                    case LogSource.DOCS /*56*/:
                        this.maxFamilySize = input.readInt32();
                        continue;
                    case LogSource.WIFI_ASSISTANT /*66*/:
                        this.viewerUserId = input.readString();
                        continue;
                    case LogSource.MOVIES /*74*/:
                        this.invitationSmsPreviewText = input.readString();
                        continue;
                    case LogSource.CRONET_ANDROID_GSA /*80*/:
                        value = input.readInt32();
                        switch (value) {
                            case Action.UNKNOWN /*0*/:
                            case TimeSelection.Type.TEMPORARY /*1*/:
                            case TimeSelection.Type.INDEFINITELY /*2*/:
                                this.familyState = value;
                                break;
                            default:
                                continue;
                        }
                    case LogSource.TRON_COUNTERS /*90*/:
                        arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 90);
                        if (this.clientFeatures == null) {
                            i = 0;
                        } else {
                            i = this.clientFeatures.length;
                        }
                        ClientFeature[] newArray2 = new ClientFeature[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.clientFeatures, 0, newArray2, 0, i);
                        }
                        while (i < newArray2.length - 1) {
                            newArray2[i] = new ClientFeature();
                            input.readMessage(newArray2[i]);
                            input.readTag();
                            i++;
                        }
                        newArray2[i] = new ClientFeature();
                        input.readMessage(newArray2[i]);
                        this.clientFeatures = newArray2;
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static FamilyAppConfig parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (FamilyAppConfig) MessageNano.mergeFrom(new FamilyAppConfig(), data);
        }

        public static FamilyAppConfig parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new FamilyAppConfig().mergeFrom(input);
        }
    }

    public static final class GcmRegistrationInfo extends ExtendableMessageNano<GcmRegistrationInfo> {
        private static volatile GcmRegistrationInfo[] _emptyArray;
        public String gcmProjectId;
        public String registrationId;

        public static GcmRegistrationInfo[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GcmRegistrationInfo[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GcmRegistrationInfo() {
            clear();
        }

        public GcmRegistrationInfo clear() {
            this.registrationId = BuildConfig.VERSION_NAME;
            this.gcmProjectId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GcmRegistrationInfo)) {
                return false;
            }
            GcmRegistrationInfo other = (GcmRegistrationInfo) o;
            if (this.registrationId == null) {
                if (other.registrationId != null) {
                    return false;
                }
            } else if (!this.registrationId.equals(other.registrationId)) {
                return false;
            }
            if (this.gcmProjectId == null) {
                if (other.gcmProjectId != null) {
                    return false;
                }
            } else if (!this.gcmProjectId.equals(other.gcmProjectId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.registrationId == null ? 0 : this.registrationId.hashCode())) * 31) + (this.gcmProjectId == null ? 0 : this.gcmProjectId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (!this.registrationId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(1, this.registrationId);
            }
            if (!this.gcmProjectId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.gcmProjectId);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (!this.registrationId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(1, this.registrationId);
            }
            if (this.gcmProjectId.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(2, this.gcmProjectId);
        }

        public GcmRegistrationInfo mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        this.registrationId = input.readString();
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.gcmProjectId = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GcmRegistrationInfo parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GcmRegistrationInfo) MessageNano.mergeFrom(new GcmRegistrationInfo(), data);
        }

        public static GcmRegistrationInfo parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GcmRegistrationInfo().mergeFrom(input);
        }
    }

    public static final class GetAccessTokenForChildRequest extends ExtendableMessageNano<GetAccessTokenForChildRequest> {
        private static volatile GetAccessTokenForChildRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String parentAccessToken;
        public String personId;

        public static GetAccessTokenForChildRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetAccessTokenForChildRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetAccessTokenForChildRequest() {
            clear();
        }

        public GetAccessTokenForChildRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.parentAccessToken = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetAccessTokenForChildRequest)) {
                return false;
            }
            GetAccessTokenForChildRequest other = (GetAccessTokenForChildRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.parentAccessToken == null) {
                if (other.parentAccessToken != null) {
                    return false;
                }
            } else if (!this.parentAccessToken.equals(other.parentAccessToken)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.parentAccessToken == null ? 0 : this.parentAccessToken.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (!this.parentAccessToken.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.parentAccessToken);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (this.parentAccessToken.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(3, this.parentAccessToken);
        }

        public GetAccessTokenForChildRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.parentAccessToken = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetAccessTokenForChildRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetAccessTokenForChildRequest) MessageNano.mergeFrom(new GetAccessTokenForChildRequest(), data);
        }

        public static GetAccessTokenForChildRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetAccessTokenForChildRequest().mergeFrom(input);
        }
    }

    public static final class GetAccessTokenForChildResponse extends ExtendableMessageNano<GetAccessTokenForChildResponse> {
        private static volatile GetAccessTokenForChildResponse[] _emptyArray;
        public String accessToken;
        public ApiResponseHeader apiHeader;

        public static GetAccessTokenForChildResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetAccessTokenForChildResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetAccessTokenForChildResponse() {
            clear();
        }

        public GetAccessTokenForChildResponse clear() {
            this.apiHeader = null;
            this.accessToken = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetAccessTokenForChildResponse)) {
                return false;
            }
            GetAccessTokenForChildResponse other = (GetAccessTokenForChildResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.accessToken == null) {
                if (other.accessToken != null) {
                    return false;
                }
            } else if (!this.accessToken.equals(other.accessToken)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.accessToken == null ? 0 : this.accessToken.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.accessToken.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.accessToken);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.accessToken.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(2, this.accessToken);
        }

        public GetAccessTokenForChildResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.accessToken = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetAccessTokenForChildResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetAccessTokenForChildResponse) MessageNano.mergeFrom(new GetAccessTokenForChildResponse(), data);
        }

        public static GetAccessTokenForChildResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetAccessTokenForChildResponse().mergeFrom(input);
        }
    }

    public static final class GetAppsInfoRequest extends ExtendableMessageNano<GetAppsInfoRequest> {
        private static volatile GetAppsInfoRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String[] packageNames;
        public String personId;

        public static GetAppsInfoRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetAppsInfoRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetAppsInfoRequest() {
            clear();
        }

        public GetAppsInfoRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.packageNames = WireFormatNano.EMPTY_STRING_ARRAY;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetAppsInfoRequest)) {
                return false;
            }
            GetAppsInfoRequest other = (GetAppsInfoRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (!InternalNano.equals(this.packageNames, other.packageNames)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + InternalNano.hashCode(this.packageNames)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (this.packageNames != null && this.packageNames.length > 0) {
                for (String element : this.packageNames) {
                    if (element != null) {
                        output.writeString(3, element);
                    }
                }
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (this.packageNames == null || this.packageNames.length <= 0) {
                return size;
            }
            int dataCount = 0;
            int dataSize = 0;
            for (String element : this.packageNames) {
                if (element != null) {
                    dataCount++;
                    dataSize += CodedOutputByteBufferNano.computeStringSizeNoTag(element);
                }
            }
            return (size + dataSize) + (dataCount * 1);
        }

        public GetAppsInfoRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        int arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 26);
                        int i = this.packageNames == null ? 0 : this.packageNames.length;
                        String[] newArray = new String[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.packageNames, 0, newArray, 0, i);
                        }
                        while (i < newArray.length - 1) {
                            newArray[i] = input.readString();
                            input.readTag();
                            i++;
                        }
                        newArray[i] = input.readString();
                        this.packageNames = newArray;
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetAppsInfoRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetAppsInfoRequest) MessageNano.mergeFrom(new GetAppsInfoRequest(), data);
        }

        public static GetAppsInfoRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetAppsInfoRequest().mergeFrom(input);
        }
    }

    public static final class GetAppsInfoResponse extends ExtendableMessageNano<GetAppsInfoResponse> {
        private static volatile GetAppsInfoResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public App[] apps;

        public static GetAppsInfoResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetAppsInfoResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetAppsInfoResponse() {
            clear();
        }

        public GetAppsInfoResponse clear() {
            this.apiHeader = null;
            this.apps = App.emptyArray();
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetAppsInfoResponse)) {
                return false;
            }
            GetAppsInfoResponse other = (GetAppsInfoResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (!InternalNano.equals(this.apps, other.apps)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + InternalNano.hashCode(this.apps)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.apps != null && this.apps.length > 0) {
                for (App element : this.apps) {
                    if (element != null) {
                        output.writeMessage(2, element);
                    }
                }
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.apps != null && this.apps.length > 0) {
                for (App element : this.apps) {
                    if (element != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(2, element);
                    }
                }
            }
            return size;
        }

        public GetAppsInfoResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        int i;
                        int arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 18);
                        if (this.apps == null) {
                            i = 0;
                        } else {
                            i = this.apps.length;
                        }
                        App[] newArray = new App[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.apps, 0, newArray, 0, i);
                        }
                        while (i < newArray.length - 1) {
                            newArray[i] = new App();
                            input.readMessage(newArray[i]);
                            input.readTag();
                            i++;
                        }
                        newArray[i] = new App();
                        input.readMessage(newArray[i]);
                        this.apps = newArray;
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetAppsInfoResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetAppsInfoResponse) MessageNano.mergeFrom(new GetAppsInfoResponse(), data);
        }

        public static GetAppsInfoResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetAppsInfoResponse().mergeFrom(input);
        }
    }

    public static final class GetBillingSignupDataRequest extends ExtendableMessageNano<GetBillingSignupDataRequest> {
        private static volatile GetBillingSignupDataRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String familyId;
        public int familyProductCorrelationIdType;

        public static GetBillingSignupDataRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetBillingSignupDataRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetBillingSignupDataRequest() {
            clear();
        }

        public GetBillingSignupDataRequest clear() {
            this.apiHeader = null;
            this.familyId = BuildConfig.VERSION_NAME;
            this.familyProductCorrelationIdType = 0;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetBillingSignupDataRequest)) {
                return false;
            }
            GetBillingSignupDataRequest other = (GetBillingSignupDataRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.familyId == null) {
                if (other.familyId != null) {
                    return false;
                }
            } else if (!this.familyId.equals(other.familyId)) {
                return false;
            }
            if (this.familyProductCorrelationIdType != other.familyProductCorrelationIdType) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.familyId == null ? 0 : this.familyId.hashCode())) * 31) + this.familyProductCorrelationIdType) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.familyId);
            }
            if (this.familyProductCorrelationIdType != 0) {
                output.writeInt32(4, this.familyProductCorrelationIdType);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.familyId);
            }
            if (this.familyProductCorrelationIdType != 0) {
                return size + CodedOutputByteBufferNano.computeInt32Size(4, this.familyProductCorrelationIdType);
            }
            return size;
        }

        public GetBillingSignupDataRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.familyId = input.readString();
                        continue;
                    case LogSource.SOCIAL /*32*/:
                        this.familyProductCorrelationIdType = input.readInt32();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetBillingSignupDataRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetBillingSignupDataRequest) MessageNano.mergeFrom(new GetBillingSignupDataRequest(), data);
        }

        public static GetBillingSignupDataRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetBillingSignupDataRequest().mergeFrom(input);
        }
    }

    public static final class GetBillingSignupDataResponse extends ExtendableMessageNano<GetBillingSignupDataResponse> {
        private static volatile GetBillingSignupDataResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public String signupParams;

        public static GetBillingSignupDataResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetBillingSignupDataResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetBillingSignupDataResponse() {
            clear();
        }

        public GetBillingSignupDataResponse clear() {
            this.apiHeader = null;
            this.signupParams = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetBillingSignupDataResponse)) {
                return false;
            }
            GetBillingSignupDataResponse other = (GetBillingSignupDataResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.signupParams == null) {
                if (other.signupParams != null) {
                    return false;
                }
            } else if (!this.signupParams.equals(other.signupParams)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.signupParams == null ? 0 : this.signupParams.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.signupParams.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.signupParams);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.signupParams.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(2, this.signupParams);
        }

        public GetBillingSignupDataResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.signupParams = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetBillingSignupDataResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetBillingSignupDataResponse) MessageNano.mergeFrom(new GetBillingSignupDataResponse(), data);
        }

        public static GetBillingSignupDataResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetBillingSignupDataResponse().mergeFrom(input);
        }
    }

    public static final class GetFamilyAppConfigRequest extends ExtendableMessageNano<GetFamilyAppConfigRequest> {
        private static volatile GetFamilyAppConfigRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public ClientInfo clientInfo;
        public String clientVersion;
        public boolean getFixitState;
        public boolean getManagementCapabilities;
        public String id;
        public String personId;

        public static GetFamilyAppConfigRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetFamilyAppConfigRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetFamilyAppConfigRequest() {
            clear();
        }

        public GetFamilyAppConfigRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.id = BuildConfig.VERSION_NAME;
            this.clientVersion = BuildConfig.VERSION_NAME;
            this.clientInfo = null;
            this.getManagementCapabilities = false;
            this.getFixitState = false;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetFamilyAppConfigRequest)) {
                return false;
            }
            GetFamilyAppConfigRequest other = (GetFamilyAppConfigRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.id == null) {
                if (other.id != null) {
                    return false;
                }
            } else if (!this.id.equals(other.id)) {
                return false;
            }
            if (this.clientVersion == null) {
                if (other.clientVersion != null) {
                    return false;
                }
            } else if (!this.clientVersion.equals(other.clientVersion)) {
                return false;
            }
            if (this.clientInfo == null) {
                if (other.clientInfo != null) {
                    return false;
                }
            } else if (!this.clientInfo.equals(other.clientInfo)) {
                return false;
            }
            if (this.getManagementCapabilities != other.getManagementCapabilities || this.getFixitState != other.getFixitState) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i;
            int i2 = 1231;
            int i3 = 0;
            int hashCode = (((((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.id == null ? 0 : this.id.hashCode())) * 31) + (this.clientVersion == null ? 0 : this.clientVersion.hashCode())) * 31) + (this.clientInfo == null ? 0 : this.clientInfo.hashCode())) * 31;
            if (this.getManagementCapabilities) {
                i = 1231;
            } else {
                i = 1237;
            }
            i = (hashCode + i) * 31;
            if (!this.getFixitState) {
                i2 = 1237;
            }
            i = (i + i2) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i3 = this.unknownFieldData.hashCode();
            }
            return i + i3;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.id);
            }
            if (!this.clientVersion.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(4, this.clientVersion);
            }
            if (this.clientInfo != null) {
                output.writeMessage(5, this.clientInfo);
            }
            if (this.getManagementCapabilities) {
                output.writeBool(6, this.getManagementCapabilities);
            }
            if (this.getFixitState) {
                output.writeBool(7, this.getFixitState);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(3, this.id);
            }
            if (!this.clientVersion.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(4, this.clientVersion);
            }
            if (this.clientInfo != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(5, this.clientInfo);
            }
            if (this.getManagementCapabilities) {
                size += CodedOutputByteBufferNano.computeBoolSize(6, this.getManagementCapabilities);
            }
            if (this.getFixitState) {
                return size + CodedOutputByteBufferNano.computeBoolSize(7, this.getFixitState);
            }
            return size;
        }

        public GetFamilyAppConfigRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.id = input.readString();
                        continue;
                    case LogSource.NOVA /*34*/:
                        this.clientVersion = input.readString();
                        continue;
                    case LogSource.PHOTOS /*42*/:
                        if (this.clientInfo == null) {
                            this.clientInfo = new ClientInfo();
                        }
                        input.readMessage(this.clientInfo);
                        continue;
                    case LogSource.BACKDROP /*48*/:
                        this.getManagementCapabilities = input.readBool();
                        continue;
                    case LogSource.DOCS /*56*/:
                        this.getFixitState = input.readBool();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetFamilyAppConfigRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetFamilyAppConfigRequest) MessageNano.mergeFrom(new GetFamilyAppConfigRequest(), data);
        }

        public static GetFamilyAppConfigRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetFamilyAppConfigRequest().mergeFrom(input);
        }
    }

    public static final class GetFamilyAppConfigResponse extends ExtendableMessageNano<GetFamilyAppConfigResponse> {
        private static volatile GetFamilyAppConfigResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public FamilyAppConfig appConfig;

        public static GetFamilyAppConfigResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetFamilyAppConfigResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetFamilyAppConfigResponse() {
            clear();
        }

        public GetFamilyAppConfigResponse clear() {
            this.apiHeader = null;
            this.appConfig = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetFamilyAppConfigResponse)) {
                return false;
            }
            GetFamilyAppConfigResponse other = (GetFamilyAppConfigResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.appConfig == null) {
                if (other.appConfig != null) {
                    return false;
                }
            } else if (!this.appConfig.equals(other.appConfig)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.appConfig == null ? 0 : this.appConfig.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.appConfig != null) {
                output.writeMessage(2, this.appConfig);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.appConfig != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.appConfig);
            }
            return size;
        }

        public GetFamilyAppConfigResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.appConfig == null) {
                            this.appConfig = new FamilyAppConfig();
                        }
                        input.readMessage(this.appConfig);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetFamilyAppConfigResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetFamilyAppConfigResponse) MessageNano.mergeFrom(new GetFamilyAppConfigResponse(), data);
        }

        public static GetFamilyAppConfigResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetFamilyAppConfigResponse().mergeFrom(input);
        }
    }

    public static final class GetFamilyProductCorrelationIdStateRequest extends ExtendableMessageNano<GetFamilyProductCorrelationIdStateRequest> {
        private static volatile GetFamilyProductCorrelationIdStateRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String familyId;
        public int familyProductCorrelationIdType;
        public String stateId;

        public static GetFamilyProductCorrelationIdStateRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetFamilyProductCorrelationIdStateRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetFamilyProductCorrelationIdStateRequest() {
            clear();
        }

        public GetFamilyProductCorrelationIdStateRequest clear() {
            this.apiHeader = null;
            this.familyId = BuildConfig.VERSION_NAME;
            this.familyProductCorrelationIdType = 0;
            this.stateId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetFamilyProductCorrelationIdStateRequest)) {
                return false;
            }
            GetFamilyProductCorrelationIdStateRequest other = (GetFamilyProductCorrelationIdStateRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.familyId == null) {
                if (other.familyId != null) {
                    return false;
                }
            } else if (!this.familyId.equals(other.familyId)) {
                return false;
            }
            if (this.familyProductCorrelationIdType != other.familyProductCorrelationIdType) {
                return false;
            }
            if (this.stateId == null) {
                if (other.stateId != null) {
                    return false;
                }
            } else if (!this.stateId.equals(other.stateId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.familyId == null ? 0 : this.familyId.hashCode())) * 31) + this.familyProductCorrelationIdType) * 31) + (this.stateId == null ? 0 : this.stateId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.familyId);
            }
            if (!this.stateId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(4, this.stateId);
            }
            if (this.familyProductCorrelationIdType != 0) {
                output.writeInt32(5, this.familyProductCorrelationIdType);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.familyId);
            }
            if (!this.stateId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(4, this.stateId);
            }
            if (this.familyProductCorrelationIdType != 0) {
                return size + CodedOutputByteBufferNano.computeInt32Size(5, this.familyProductCorrelationIdType);
            }
            return size;
        }

        public GetFamilyProductCorrelationIdStateRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.familyId = input.readString();
                        continue;
                    case LogSource.NOVA /*34*/:
                        this.stateId = input.readString();
                        continue;
                    case LogSource.COPRESENCE /*40*/:
                        this.familyProductCorrelationIdType = input.readInt32();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetFamilyProductCorrelationIdStateRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetFamilyProductCorrelationIdStateRequest) MessageNano.mergeFrom(new GetFamilyProductCorrelationIdStateRequest(), data);
        }

        public static GetFamilyProductCorrelationIdStateRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetFamilyProductCorrelationIdStateRequest().mergeFrom(input);
        }
    }

    public static final class GetFamilyProductCorrelationIdStateResponse extends ExtendableMessageNano<GetFamilyProductCorrelationIdStateResponse> {
        private static volatile GetFamilyProductCorrelationIdStateResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public int state;

        public static GetFamilyProductCorrelationIdStateResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetFamilyProductCorrelationIdStateResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetFamilyProductCorrelationIdStateResponse() {
            clear();
        }

        public GetFamilyProductCorrelationIdStateResponse clear() {
            this.apiHeader = null;
            this.state = 0;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetFamilyProductCorrelationIdStateResponse)) {
                return false;
            }
            GetFamilyProductCorrelationIdStateResponse other = (GetFamilyProductCorrelationIdStateResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.state != other.state) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + this.state) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.state != 0) {
                output.writeInt32(2, this.state);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.state != 0) {
                return size + CodedOutputByteBufferNano.computeInt32Size(2, this.state);
            }
            return size;
        }

        public GetFamilyProductCorrelationIdStateResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GMS_CORE_PEOPLE /*16*/:
                        int value = input.readInt32();
                        switch (value) {
                            case Action.UNKNOWN /*0*/:
                            case TimeSelection.Type.TEMPORARY /*1*/:
                            case TimeSelection.Type.INDEFINITELY /*2*/:
                            case TimeSelection.Type.CUSTOM /*3*/:
                            case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                this.state = value;
                                break;
                            default:
                                continue;
                        }
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetFamilyProductCorrelationIdStateResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetFamilyProductCorrelationIdStateResponse) MessageNano.mergeFrom(new GetFamilyProductCorrelationIdStateResponse(), data);
        }

        public static GetFamilyProductCorrelationIdStateResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetFamilyProductCorrelationIdStateResponse().mergeFrom(input);
        }
    }

    public static final class GetFamilyRequest extends ExtendableMessageNano<GetFamilyRequest> {
        private static volatile GetFamilyRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String id;

        public static GetFamilyRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetFamilyRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetFamilyRequest() {
            clear();
        }

        public GetFamilyRequest clear() {
            this.apiHeader = null;
            this.id = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetFamilyRequest)) {
                return false;
            }
            GetFamilyRequest other = (GetFamilyRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.id == null) {
                if (other.id != null) {
                    return false;
                }
            } else if (!this.id.equals(other.id)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.id == null ? 0 : this.id.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(1, this.id);
            }
            if (this.apiHeader != null) {
                output.writeMessage(2, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(1, this.id);
            }
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.apiHeader);
            }
            return size;
        }

        public GetFamilyRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        this.id = input.readString();
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetFamilyRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetFamilyRequest) MessageNano.mergeFrom(new GetFamilyRequest(), data);
        }

        public static GetFamilyRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetFamilyRequest().mergeFrom(input);
        }
    }

    public static final class GetFamilyResponse extends ExtendableMessageNano<GetFamilyResponse> {
        private static volatile GetFamilyResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public Family family;

        public static GetFamilyResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetFamilyResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetFamilyResponse() {
            clear();
        }

        public GetFamilyResponse clear() {
            this.apiHeader = null;
            this.family = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetFamilyResponse)) {
                return false;
            }
            GetFamilyResponse other = (GetFamilyResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.family == null) {
                if (other.family != null) {
                    return false;
                }
            } else if (!this.family.equals(other.family)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.family == null ? 0 : this.family.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.family != null) {
                output.writeMessage(2, this.family);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.family != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.family);
            }
            return size;
        }

        public GetFamilyResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.family == null) {
                            this.family = new Family();
                        }
                        input.readMessage(this.family);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetFamilyResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetFamilyResponse) MessageNano.mergeFrom(new GetFamilyResponse(), data);
        }

        public static GetFamilyResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetFamilyResponse().mergeFrom(input);
        }
    }

    public static final class GetGoogleServiceSettingsRequest extends ExtendableMessageNano<GetGoogleServiceSettingsRequest> {
        private static volatile GetGoogleServiceSettingsRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String personId;

        public static GetGoogleServiceSettingsRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetGoogleServiceSettingsRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetGoogleServiceSettingsRequest() {
            clear();
        }

        public GetGoogleServiceSettingsRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetGoogleServiceSettingsRequest)) {
                return false;
            }
            GetGoogleServiceSettingsRequest other = (GetGoogleServiceSettingsRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.personId.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(2, this.personId);
        }

        public GetGoogleServiceSettingsRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetGoogleServiceSettingsRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetGoogleServiceSettingsRequest) MessageNano.mergeFrom(new GetGoogleServiceSettingsRequest(), data);
        }

        public static GetGoogleServiceSettingsRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetGoogleServiceSettingsRequest().mergeFrom(input);
        }
    }

    public static final class GetGoogleServiceSettingsResponse extends ExtendableMessageNano<GetGoogleServiceSettingsResponse> {
        private static volatile GetGoogleServiceSettingsResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public ChromeSettings chromeSettings;
        public SearchSettings searchSettings;

        public static GetGoogleServiceSettingsResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetGoogleServiceSettingsResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetGoogleServiceSettingsResponse() {
            clear();
        }

        public GetGoogleServiceSettingsResponse clear() {
            this.apiHeader = null;
            this.searchSettings = null;
            this.chromeSettings = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetGoogleServiceSettingsResponse)) {
                return false;
            }
            GetGoogleServiceSettingsResponse other = (GetGoogleServiceSettingsResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.searchSettings == null) {
                if (other.searchSettings != null) {
                    return false;
                }
            } else if (!this.searchSettings.equals(other.searchSettings)) {
                return false;
            }
            if (this.chromeSettings == null) {
                if (other.chromeSettings != null) {
                    return false;
                }
            } else if (!this.chromeSettings.equals(other.chromeSettings)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.searchSettings == null ? 0 : this.searchSettings.hashCode())) * 31) + (this.chromeSettings == null ? 0 : this.chromeSettings.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.searchSettings != null) {
                output.writeMessage(2, this.searchSettings);
            }
            if (this.chromeSettings != null) {
                output.writeMessage(3, this.chromeSettings);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.searchSettings != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(2, this.searchSettings);
            }
            if (this.chromeSettings != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(3, this.chromeSettings);
            }
            return size;
        }

        public GetGoogleServiceSettingsResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.searchSettings == null) {
                            this.searchSettings = new SearchSettings();
                        }
                        input.readMessage(this.searchSettings);
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        if (this.chromeSettings == null) {
                            this.chromeSettings = new ChromeSettings();
                        }
                        input.readMessage(this.chromeSettings);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetGoogleServiceSettingsResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetGoogleServiceSettingsResponse) MessageNano.mergeFrom(new GetGoogleServiceSettingsResponse(), data);
        }

        public static GetGoogleServiceSettingsResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetGoogleServiceSettingsResponse().mergeFrom(input);
        }
    }

    public static final class GetInboxItemRequest extends ExtendableMessageNano<GetInboxItemRequest> {
        private static volatile GetInboxItemRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String id;
        public String personId;
        public ViewParameters viewParameters;

        public static GetInboxItemRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetInboxItemRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetInboxItemRequest() {
            clear();
        }

        public GetInboxItemRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.id = BuildConfig.VERSION_NAME;
            this.viewParameters = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetInboxItemRequest)) {
                return false;
            }
            GetInboxItemRequest other = (GetInboxItemRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.id == null) {
                if (other.id != null) {
                    return false;
                }
            } else if (!this.id.equals(other.id)) {
                return false;
            }
            if (this.viewParameters == null) {
                if (other.viewParameters != null) {
                    return false;
                }
            } else if (!this.viewParameters.equals(other.viewParameters)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.id == null ? 0 : this.id.hashCode())) * 31) + (this.viewParameters == null ? 0 : this.viewParameters.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.id);
            }
            if (this.viewParameters != null) {
                output.writeMessage(4, this.viewParameters);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(3, this.id);
            }
            if (this.viewParameters != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(4, this.viewParameters);
            }
            return size;
        }

        public GetInboxItemRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.id = input.readString();
                        continue;
                    case LogSource.NOVA /*34*/:
                        if (this.viewParameters == null) {
                            this.viewParameters = new ViewParameters();
                        }
                        input.readMessage(this.viewParameters);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetInboxItemRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetInboxItemRequest) MessageNano.mergeFrom(new GetInboxItemRequest(), data);
        }

        public static GetInboxItemRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetInboxItemRequest().mergeFrom(input);
        }
    }

    public static final class GetInboxItemResponse extends ExtendableMessageNano<GetInboxItemResponse> {
        private static volatile GetInboxItemResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public InboxItem item;

        public static GetInboxItemResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetInboxItemResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetInboxItemResponse() {
            clear();
        }

        public GetInboxItemResponse clear() {
            this.apiHeader = null;
            this.item = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetInboxItemResponse)) {
                return false;
            }
            GetInboxItemResponse other = (GetInboxItemResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.item == null) {
                if (other.item != null) {
                    return false;
                }
            } else if (!this.item.equals(other.item)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.item == null ? 0 : this.item.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.item != null) {
                output.writeMessage(2, this.item);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.item != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.item);
            }
            return size;
        }

        public GetInboxItemResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.item == null) {
                            this.item = new InboxItem();
                        }
                        input.readMessage(this.item);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetInboxItemResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetInboxItemResponse) MessageNano.mergeFrom(new GetInboxItemResponse(), data);
        }

        public static GetInboxItemResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetInboxItemResponse().mergeFrom(input);
        }
    }

    public static final class GetInvitationRequest extends ExtendableMessageNano<GetInvitationRequest> {
        private static volatile GetInvitationRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String familyId;
        public String invitationId;

        public static GetInvitationRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetInvitationRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetInvitationRequest() {
            clear();
        }

        public GetInvitationRequest clear() {
            this.apiHeader = null;
            this.familyId = BuildConfig.VERSION_NAME;
            this.invitationId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetInvitationRequest)) {
                return false;
            }
            GetInvitationRequest other = (GetInvitationRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.familyId == null) {
                if (other.familyId != null) {
                    return false;
                }
            } else if (!this.familyId.equals(other.familyId)) {
                return false;
            }
            if (this.invitationId == null) {
                if (other.invitationId != null) {
                    return false;
                }
            } else if (!this.invitationId.equals(other.invitationId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.familyId == null ? 0 : this.familyId.hashCode())) * 31) + (this.invitationId == null ? 0 : this.invitationId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (!this.invitationId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(1, this.invitationId);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.familyId);
            }
            if (this.apiHeader != null) {
                output.writeMessage(3, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (!this.invitationId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(1, this.invitationId);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.familyId);
            }
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(3, this.apiHeader);
            }
            return size;
        }

        public GetInvitationRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        this.invitationId = input.readString();
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.familyId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetInvitationRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetInvitationRequest) MessageNano.mergeFrom(new GetInvitationRequest(), data);
        }

        public static GetInvitationRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetInvitationRequest().mergeFrom(input);
        }
    }

    public static final class GetInvitationResponse extends ExtendableMessageNano<GetInvitationResponse> {
        private static volatile GetInvitationResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public Invitation invitation;

        public static GetInvitationResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetInvitationResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetInvitationResponse() {
            clear();
        }

        public GetInvitationResponse clear() {
            this.apiHeader = null;
            this.invitation = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetInvitationResponse)) {
                return false;
            }
            GetInvitationResponse other = (GetInvitationResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.invitation == null) {
                if (other.invitation != null) {
                    return false;
                }
            } else if (!this.invitation.equals(other.invitation)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.invitation == null ? 0 : this.invitation.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.invitation != null) {
                output.writeMessage(2, this.invitation);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.invitation != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.invitation);
            }
            return size;
        }

        public GetInvitationResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.invitation == null) {
                            this.invitation = new Invitation();
                        }
                        input.readMessage(this.invitation);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetInvitationResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetInvitationResponse) MessageNano.mergeFrom(new GetInvitationResponse(), data);
        }

        public static GetInvitationResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetInvitationResponse().mergeFrom(input);
        }
    }

    public static final class GetLocationSharingAclRequest extends ExtendableMessageNano<GetLocationSharingAclRequest> {
        private static volatile GetLocationSharingAclRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String id;
        public String personId;

        public static GetLocationSharingAclRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetLocationSharingAclRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetLocationSharingAclRequest() {
            clear();
        }

        public GetLocationSharingAclRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.id = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetLocationSharingAclRequest)) {
                return false;
            }
            GetLocationSharingAclRequest other = (GetLocationSharingAclRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.id == null) {
                if (other.id != null) {
                    return false;
                }
            } else if (!this.id.equals(other.id)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.id == null ? 0 : this.id.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.id);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (this.id.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(3, this.id);
        }

        public GetLocationSharingAclRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.id = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetLocationSharingAclRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetLocationSharingAclRequest) MessageNano.mergeFrom(new GetLocationSharingAclRequest(), data);
        }

        public static GetLocationSharingAclRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetLocationSharingAclRequest().mergeFrom(input);
        }
    }

    public static final class GetLocationSharingAclResponse extends ExtendableMessageNano<GetLocationSharingAclResponse> {
        private static volatile GetLocationSharingAclResponse[] _emptyArray;
        public LocationSharingAcl acl;
        public ApiResponseHeader apiHeader;

        public static GetLocationSharingAclResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetLocationSharingAclResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetLocationSharingAclResponse() {
            clear();
        }

        public GetLocationSharingAclResponse clear() {
            this.apiHeader = null;
            this.acl = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetLocationSharingAclResponse)) {
                return false;
            }
            GetLocationSharingAclResponse other = (GetLocationSharingAclResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.acl == null) {
                if (other.acl != null) {
                    return false;
                }
            } else if (!this.acl.equals(other.acl)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.acl == null ? 0 : this.acl.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.acl != null) {
                output.writeMessage(2, this.acl);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.acl != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.acl);
            }
            return size;
        }

        public GetLocationSharingAclResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.acl == null) {
                            this.acl = new LocationSharingAcl();
                        }
                        input.readMessage(this.acl);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetLocationSharingAclResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetLocationSharingAclResponse) MessageNano.mergeFrom(new GetLocationSharingAclResponse(), data);
        }

        public static GetLocationSharingAclResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetLocationSharingAclResponse().mergeFrom(input);
        }
    }

    public static final class GetMemberRequest extends ExtendableMessageNano<GetMemberRequest> {
        private static volatile GetMemberRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String familyId;
        public String userId;

        public static GetMemberRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetMemberRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetMemberRequest() {
            clear();
        }

        public GetMemberRequest clear() {
            this.apiHeader = null;
            this.familyId = BuildConfig.VERSION_NAME;
            this.userId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetMemberRequest)) {
                return false;
            }
            GetMemberRequest other = (GetMemberRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.familyId == null) {
                if (other.familyId != null) {
                    return false;
                }
            } else if (!this.familyId.equals(other.familyId)) {
                return false;
            }
            if (this.userId == null) {
                if (other.userId != null) {
                    return false;
                }
            } else if (!this.userId.equals(other.userId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.familyId == null ? 0 : this.familyId.hashCode())) * 31) + (this.userId == null ? 0 : this.userId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (!this.userId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(1, this.userId);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.familyId);
            }
            if (this.apiHeader != null) {
                output.writeMessage(3, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (!this.userId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(1, this.userId);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.familyId);
            }
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(3, this.apiHeader);
            }
            return size;
        }

        public GetMemberRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        this.userId = input.readString();
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.familyId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetMemberRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetMemberRequest) MessageNano.mergeFrom(new GetMemberRequest(), data);
        }

        public static GetMemberRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetMemberRequest().mergeFrom(input);
        }
    }

    public static final class GetMemberResponse extends ExtendableMessageNano<GetMemberResponse> {
        private static volatile GetMemberResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public FamilyMember member;

        public static GetMemberResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetMemberResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetMemberResponse() {
            clear();
        }

        public GetMemberResponse clear() {
            this.apiHeader = null;
            this.member = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetMemberResponse)) {
                return false;
            }
            GetMemberResponse other = (GetMemberResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.member == null) {
                if (other.member != null) {
                    return false;
                }
            } else if (!this.member.equals(other.member)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.member == null ? 0 : this.member.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.member != null) {
                output.writeMessage(2, this.member);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.member != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.member);
            }
            return size;
        }

        public GetMemberResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.member == null) {
                            this.member = new FamilyMember();
                        }
                        input.readMessage(this.member);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetMemberResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetMemberResponse) MessageNano.mergeFrom(new GetMemberResponse(), data);
        }

        public static GetMemberResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetMemberResponse().mergeFrom(input);
        }
    }

    public static final class GetParentAppConfigRequest extends ExtendableMessageNano<GetParentAppConfigRequest> {
        private static volatile GetParentAppConfigRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public ClientInfo clientInfo;
        public String clientVersion;
        public String id;
        public String personId;

        public static GetParentAppConfigRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetParentAppConfigRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetParentAppConfigRequest() {
            clear();
        }

        public GetParentAppConfigRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.id = BuildConfig.VERSION_NAME;
            this.clientVersion = BuildConfig.VERSION_NAME;
            this.clientInfo = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetParentAppConfigRequest)) {
                return false;
            }
            GetParentAppConfigRequest other = (GetParentAppConfigRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.id == null) {
                if (other.id != null) {
                    return false;
                }
            } else if (!this.id.equals(other.id)) {
                return false;
            }
            if (this.clientVersion == null) {
                if (other.clientVersion != null) {
                    return false;
                }
            } else if (!this.clientVersion.equals(other.clientVersion)) {
                return false;
            }
            if (this.clientInfo == null) {
                if (other.clientInfo != null) {
                    return false;
                }
            } else if (!this.clientInfo.equals(other.clientInfo)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.id == null ? 0 : this.id.hashCode())) * 31) + (this.clientVersion == null ? 0 : this.clientVersion.hashCode())) * 31) + (this.clientInfo == null ? 0 : this.clientInfo.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.id);
            }
            if (!this.clientVersion.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(4, this.clientVersion);
            }
            if (this.clientInfo != null) {
                output.writeMessage(5, this.clientInfo);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(3, this.id);
            }
            if (!this.clientVersion.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(4, this.clientVersion);
            }
            if (this.clientInfo != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(5, this.clientInfo);
            }
            return size;
        }

        public GetParentAppConfigRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.id = input.readString();
                        continue;
                    case LogSource.NOVA /*34*/:
                        this.clientVersion = input.readString();
                        continue;
                    case LogSource.PHOTOS /*42*/:
                        if (this.clientInfo == null) {
                            this.clientInfo = new ClientInfo();
                        }
                        input.readMessage(this.clientInfo);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetParentAppConfigRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetParentAppConfigRequest) MessageNano.mergeFrom(new GetParentAppConfigRequest(), data);
        }

        public static GetParentAppConfigRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetParentAppConfigRequest().mergeFrom(input);
        }
    }

    public static final class GetParentAppConfigResponse extends ExtendableMessageNano<GetParentAppConfigResponse> {
        private static volatile GetParentAppConfigResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public ParentAppConfig parentAppConfig;

        public static GetParentAppConfigResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetParentAppConfigResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetParentAppConfigResponse() {
            clear();
        }

        public GetParentAppConfigResponse clear() {
            this.apiHeader = null;
            this.parentAppConfig = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetParentAppConfigResponse)) {
                return false;
            }
            GetParentAppConfigResponse other = (GetParentAppConfigResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.parentAppConfig == null) {
                if (other.parentAppConfig != null) {
                    return false;
                }
            } else if (!this.parentAppConfig.equals(other.parentAppConfig)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.parentAppConfig == null ? 0 : this.parentAppConfig.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.parentAppConfig != null) {
                output.writeMessage(2, this.parentAppConfig);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.parentAppConfig != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.parentAppConfig);
            }
            return size;
        }

        public GetParentAppConfigResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.parentAppConfig == null) {
                            this.parentAppConfig = new ParentAppConfig();
                        }
                        input.readMessage(this.parentAppConfig);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetParentAppConfigResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetParentAppConfigResponse) MessageNano.mergeFrom(new GetParentAppConfigResponse(), data);
        }

        public static GetParentAppConfigResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetParentAppConfigResponse().mergeFrom(input);
        }
    }

    public static final class GetPermissionRequestRequest extends ExtendableMessageNano<GetPermissionRequestRequest> {
        private static volatile GetPermissionRequestRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String id;
        public String personId;

        public static GetPermissionRequestRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetPermissionRequestRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetPermissionRequestRequest() {
            clear();
        }

        public GetPermissionRequestRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.id = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetPermissionRequestRequest)) {
                return false;
            }
            GetPermissionRequestRequest other = (GetPermissionRequestRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.id == null) {
                if (other.id != null) {
                    return false;
                }
            } else if (!this.id.equals(other.id)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.id == null ? 0 : this.id.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(1, this.id);
            }
            if (this.apiHeader != null) {
                output.writeMessage(2, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.personId);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(1, this.id);
            }
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(2, this.apiHeader);
            }
            if (this.personId.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(3, this.personId);
        }

        public GetPermissionRequestRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        this.id = input.readString();
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.personId = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetPermissionRequestRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetPermissionRequestRequest) MessageNano.mergeFrom(new GetPermissionRequestRequest(), data);
        }

        public static GetPermissionRequestRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetPermissionRequestRequest().mergeFrom(input);
        }
    }

    public static final class GetProfileOwnerStatusRequest extends ExtendableMessageNano<GetProfileOwnerStatusRequest> {
        private static volatile GetProfileOwnerStatusRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String gmsCoreVersion;
        public String id;
        public String personId;

        public static GetProfileOwnerStatusRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetProfileOwnerStatusRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetProfileOwnerStatusRequest() {
            clear();
        }

        public GetProfileOwnerStatusRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.id = BuildConfig.VERSION_NAME;
            this.gmsCoreVersion = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetProfileOwnerStatusRequest)) {
                return false;
            }
            GetProfileOwnerStatusRequest other = (GetProfileOwnerStatusRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.id == null) {
                if (other.id != null) {
                    return false;
                }
            } else if (!this.id.equals(other.id)) {
                return false;
            }
            if (this.gmsCoreVersion == null) {
                if (other.gmsCoreVersion != null) {
                    return false;
                }
            } else if (!this.gmsCoreVersion.equals(other.gmsCoreVersion)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.id == null ? 0 : this.id.hashCode())) * 31) + (this.gmsCoreVersion == null ? 0 : this.gmsCoreVersion.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.id);
            }
            if (!this.gmsCoreVersion.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(4, this.gmsCoreVersion);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(3, this.id);
            }
            if (this.gmsCoreVersion.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(4, this.gmsCoreVersion);
        }

        public GetProfileOwnerStatusRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.id = input.readString();
                        continue;
                    case LogSource.NOVA /*34*/:
                        this.gmsCoreVersion = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetProfileOwnerStatusRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetProfileOwnerStatusRequest) MessageNano.mergeFrom(new GetProfileOwnerStatusRequest(), data);
        }

        public static GetProfileOwnerStatusRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetProfileOwnerStatusRequest().mergeFrom(input);
        }
    }

    public static final class GetProfileOwnerStatusResponse extends ExtendableMessageNano<GetProfileOwnerStatusResponse> {
        private static volatile GetProfileOwnerStatusResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public boolean userIsChild;

        public static GetProfileOwnerStatusResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetProfileOwnerStatusResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetProfileOwnerStatusResponse() {
            clear();
        }

        public GetProfileOwnerStatusResponse clear() {
            this.apiHeader = null;
            this.userIsChild = false;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetProfileOwnerStatusResponse)) {
                return false;
            }
            GetProfileOwnerStatusResponse other = (GetProfileOwnerStatusResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.userIsChild != other.userIsChild) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.userIsChild ? 1231 : 1237)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.userIsChild) {
                output.writeBool(2, this.userIsChild);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.userIsChild) {
                return size + CodedOutputByteBufferNano.computeBoolSize(2, this.userIsChild);
            }
            return size;
        }

        public GetProfileOwnerStatusResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GMS_CORE_PEOPLE /*16*/:
                        this.userIsChild = input.readBool();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetProfileOwnerStatusResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetProfileOwnerStatusResponse) MessageNano.mergeFrom(new GetProfileOwnerStatusResponse(), data);
        }

        public static GetProfileOwnerStatusResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetProfileOwnerStatusResponse().mergeFrom(input);
        }
    }

    public static final class GetSignInTokenRequest extends ExtendableMessageNano<GetSignInTokenRequest> {
        private static volatile GetSignInTokenRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String id;
        public String personId;

        public static GetSignInTokenRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetSignInTokenRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetSignInTokenRequest() {
            clear();
        }

        public GetSignInTokenRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.id = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetSignInTokenRequest)) {
                return false;
            }
            GetSignInTokenRequest other = (GetSignInTokenRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.id == null) {
                if (other.id != null) {
                    return false;
                }
            } else if (!this.id.equals(other.id)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.id == null ? 0 : this.id.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.id);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (this.id.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(3, this.id);
        }

        public GetSignInTokenRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.id = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetSignInTokenRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetSignInTokenRequest) MessageNano.mergeFrom(new GetSignInTokenRequest(), data);
        }

        public static GetSignInTokenRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetSignInTokenRequest().mergeFrom(input);
        }
    }

    public static final class GetSignInTokenResponse extends ExtendableMessageNano<GetSignInTokenResponse> {
        private static volatile GetSignInTokenResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public SignInToken signInToken;

        public static GetSignInTokenResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new GetSignInTokenResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public GetSignInTokenResponse() {
            clear();
        }

        public GetSignInTokenResponse clear() {
            this.apiHeader = null;
            this.signInToken = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof GetSignInTokenResponse)) {
                return false;
            }
            GetSignInTokenResponse other = (GetSignInTokenResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.signInToken == null) {
                if (other.signInToken != null) {
                    return false;
                }
            } else if (!this.signInToken.equals(other.signInToken)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.signInToken == null ? 0 : this.signInToken.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.signInToken != null) {
                output.writeMessage(2, this.signInToken);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.signInToken != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.signInToken);
            }
            return size;
        }

        public GetSignInTokenResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.signInToken == null) {
                            this.signInToken = new SignInToken();
                        }
                        input.readMessage(this.signInToken);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static GetSignInTokenResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (GetSignInTokenResponse) MessageNano.mergeFrom(new GetSignInTokenResponse(), data);
        }

        public static GetSignInTokenResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new GetSignInTokenResponse().mergeFrom(input);
        }
    }

    public static final class InboxItem extends ExtendableMessageNano<InboxItem> {
        private static volatile InboxItem[] _emptyArray;
        public InboxItemCollapsedView collapsedView;
        public String eventTypeId;
        public boolean expandable;
        public InboxItemExpandedView expandedView;
        public String id;
        public int interactionMode;
        public long lastUpdateTimestampMillis;
        public String sourceUserId;
        public int state;

        public static InboxItem[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new InboxItem[0];
                    }
                }
            }
            return _emptyArray;
        }

        public InboxItem() {
            clear();
        }

        public InboxItem clear() {
            this.id = BuildConfig.VERSION_NAME;
            this.sourceUserId = BuildConfig.VERSION_NAME;
            this.interactionMode = 0;
            this.state = 0;
            this.eventTypeId = BuildConfig.VERSION_NAME;
            this.lastUpdateTimestampMillis = 0;
            this.collapsedView = null;
            this.expandable = false;
            this.expandedView = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof InboxItem)) {
                return false;
            }
            InboxItem other = (InboxItem) o;
            if (this.id == null) {
                if (other.id != null) {
                    return false;
                }
            } else if (!this.id.equals(other.id)) {
                return false;
            }
            if (this.sourceUserId == null) {
                if (other.sourceUserId != null) {
                    return false;
                }
            } else if (!this.sourceUserId.equals(other.sourceUserId)) {
                return false;
            }
            if (this.interactionMode != other.interactionMode || this.state != other.state) {
                return false;
            }
            if (this.eventTypeId == null) {
                if (other.eventTypeId != null) {
                    return false;
                }
            } else if (!this.eventTypeId.equals(other.eventTypeId)) {
                return false;
            }
            if (this.lastUpdateTimestampMillis != other.lastUpdateTimestampMillis) {
                return false;
            }
            if (this.collapsedView == null) {
                if (other.collapsedView != null) {
                    return false;
                }
            } else if (!this.collapsedView.equals(other.collapsedView)) {
                return false;
            }
            if (this.expandable != other.expandable) {
                return false;
            }
            if (this.expandedView == null) {
                if (other.expandedView != null) {
                    return false;
                }
            } else if (!this.expandedView.equals(other.expandedView)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((((((((((((getClass().getName().hashCode() + 527) * 31) + (this.id == null ? 0 : this.id.hashCode())) * 31) + (this.sourceUserId == null ? 0 : this.sourceUserId.hashCode())) * 31) + this.interactionMode) * 31) + this.state) * 31) + (this.eventTypeId == null ? 0 : this.eventTypeId.hashCode())) * 31) + ((int) (this.lastUpdateTimestampMillis ^ (this.lastUpdateTimestampMillis >>> 32)))) * 31) + (this.collapsedView == null ? 0 : this.collapsedView.hashCode())) * 31) + (this.expandable ? 1231 : 1237)) * 31) + (this.expandedView == null ? 0 : this.expandedView.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(1, this.id);
            }
            if (!this.sourceUserId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.sourceUserId);
            }
            if (this.interactionMode != 0) {
                output.writeInt32(3, this.interactionMode);
            }
            if (this.state != 0) {
                output.writeInt32(4, this.state);
            }
            if (this.lastUpdateTimestampMillis != 0) {
                output.writeInt64(5, this.lastUpdateTimestampMillis);
            }
            if (this.collapsedView != null) {
                output.writeMessage(6, this.collapsedView);
            }
            if (this.expandable) {
                output.writeBool(7, this.expandable);
            }
            if (this.expandedView != null) {
                output.writeMessage(8, this.expandedView);
            }
            if (!this.eventTypeId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(9, this.eventTypeId);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(1, this.id);
            }
            if (!this.sourceUserId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.sourceUserId);
            }
            if (this.interactionMode != 0) {
                size += CodedOutputByteBufferNano.computeInt32Size(3, this.interactionMode);
            }
            if (this.state != 0) {
                size += CodedOutputByteBufferNano.computeInt32Size(4, this.state);
            }
            if (this.lastUpdateTimestampMillis != 0) {
                size += CodedOutputByteBufferNano.computeInt64Size(5, this.lastUpdateTimestampMillis);
            }
            if (this.collapsedView != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(6, this.collapsedView);
            }
            if (this.expandable) {
                size += CodedOutputByteBufferNano.computeBoolSize(7, this.expandable);
            }
            if (this.expandedView != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(8, this.expandedView);
            }
            if (this.eventTypeId.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(9, this.eventTypeId);
        }

        public InboxItem mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                int value;
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        this.id = input.readString();
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.sourceUserId = input.readString();
                        continue;
                    case LogSource.LB_C /*24*/:
                        value = input.readInt32();
                        switch (value) {
                            case Action.UNKNOWN /*0*/:
                            case TimeSelection.Type.TEMPORARY /*1*/:
                            case TimeSelection.Type.INDEFINITELY /*2*/:
                                this.interactionMode = value;
                                break;
                            default:
                                continue;
                        }
                    case LogSource.SOCIAL /*32*/:
                        value = input.readInt32();
                        switch (value) {
                            case Action.UNKNOWN /*0*/:
                            case TimeSelection.Type.TEMPORARY /*1*/:
                            case TimeSelection.Type.INDEFINITELY /*2*/:
                            case TimeSelection.Type.CUSTOM /*3*/:
                            case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                this.state = value;
                                break;
                            default:
                                continue;
                        }
                    case LogSource.COPRESENCE /*40*/:
                        this.lastUpdateTimestampMillis = input.readInt64();
                        continue;
                    case LogSource.HANGOUT_LOG_REQUEST /*50*/:
                        if (this.collapsedView == null) {
                            this.collapsedView = new InboxItemCollapsedView();
                        }
                        input.readMessage(this.collapsedView);
                        continue;
                    case LogSource.DOCS /*56*/:
                        this.expandable = input.readBool();
                        continue;
                    case LogSource.WIFI_ASSISTANT /*66*/:
                        if (this.expandedView == null) {
                            this.expandedView = new InboxItemExpandedView();
                        }
                        input.readMessage(this.expandedView);
                        continue;
                    case LogSource.MOVIES /*74*/:
                        this.eventTypeId = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static InboxItem parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (InboxItem) MessageNano.mergeFrom(new InboxItem(), data);
        }

        public static InboxItem parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new InboxItem().mergeFrom(input);
        }
    }

    public static final class Invitation extends ExtendableMessageNano<Invitation> {
        private static volatile Invitation[] _emptyArray;
        public String clientCorrelationId;
        public String invitationId;
        public String invitationText;
        public int invitedRole;
        public long invitedTimestampMillis;
        public InviteeIdentifier inviteeIdentifier;
        public FamilyMemberProfile inviteeProfile;
        public int notificationMode;
        public String requesterProductId;
        public int state;
        public long validUntilTimestampMillis;

        public interface NotificationMode {
            public static final int RETURN_TEXT_TO_BE_SENT = 2;
            public static final int SEND_INVITATION = 1;
            public static final int UNKNOWN_NOTIFICATION_MODE = 0;
        }

        public interface State {
            public static final int EXPIRED = 4;
            public static final int FAILED = 3;
            public static final int NOT_SENT = 1;
            public static final int SENT = 2;
            public static final int UNKNOWN_STATE = 0;
        }

        public static Invitation[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new Invitation[0];
                    }
                }
            }
            return _emptyArray;
        }

        public Invitation() {
            clear();
        }

        public Invitation clear() {
            this.invitationId = BuildConfig.VERSION_NAME;
            this.inviteeIdentifier = null;
            this.inviteeProfile = null;
            this.invitedRole = 0;
            this.invitedTimestampMillis = 0;
            this.validUntilTimestampMillis = 0;
            this.requesterProductId = BuildConfig.VERSION_NAME;
            this.invitationText = BuildConfig.VERSION_NAME;
            this.state = 0;
            this.notificationMode = 0;
            this.clientCorrelationId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof Invitation)) {
                return false;
            }
            Invitation other = (Invitation) o;
            if (this.invitationId == null) {
                if (other.invitationId != null) {
                    return false;
                }
            } else if (!this.invitationId.equals(other.invitationId)) {
                return false;
            }
            if (this.inviteeIdentifier == null) {
                if (other.inviteeIdentifier != null) {
                    return false;
                }
            } else if (!this.inviteeIdentifier.equals(other.inviteeIdentifier)) {
                return false;
            }
            if (this.inviteeProfile == null) {
                if (other.inviteeProfile != null) {
                    return false;
                }
            } else if (!this.inviteeProfile.equals(other.inviteeProfile)) {
                return false;
            }
            if (this.invitedRole != other.invitedRole || this.invitedTimestampMillis != other.invitedTimestampMillis || this.validUntilTimestampMillis != other.validUntilTimestampMillis) {
                return false;
            }
            if (this.requesterProductId == null) {
                if (other.requesterProductId != null) {
                    return false;
                }
            } else if (!this.requesterProductId.equals(other.requesterProductId)) {
                return false;
            }
            if (this.invitationText == null) {
                if (other.invitationText != null) {
                    return false;
                }
            } else if (!this.invitationText.equals(other.invitationText)) {
                return false;
            }
            if (this.state != other.state || this.notificationMode != other.notificationMode) {
                return false;
            }
            if (this.clientCorrelationId == null) {
                if (other.clientCorrelationId != null) {
                    return false;
                }
            } else if (!this.clientCorrelationId.equals(other.clientCorrelationId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((((((((((((((((getClass().getName().hashCode() + 527) * 31) + (this.invitationId == null ? 0 : this.invitationId.hashCode())) * 31) + (this.inviteeIdentifier == null ? 0 : this.inviteeIdentifier.hashCode())) * 31) + (this.inviteeProfile == null ? 0 : this.inviteeProfile.hashCode())) * 31) + this.invitedRole) * 31) + ((int) (this.invitedTimestampMillis ^ (this.invitedTimestampMillis >>> 32)))) * 31) + ((int) (this.validUntilTimestampMillis ^ (this.validUntilTimestampMillis >>> 32)))) * 31) + (this.requesterProductId == null ? 0 : this.requesterProductId.hashCode())) * 31) + (this.invitationText == null ? 0 : this.invitationText.hashCode())) * 31) + this.state) * 31) + this.notificationMode) * 31) + (this.clientCorrelationId == null ? 0 : this.clientCorrelationId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (!this.invitationId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(1, this.invitationId);
            }
            if (this.inviteeIdentifier != null) {
                output.writeMessage(2, this.inviteeIdentifier);
            }
            if (this.invitedRole != 0) {
                output.writeInt32(3, this.invitedRole);
            }
            if (this.invitedTimestampMillis != 0) {
                output.writeInt64(4, this.invitedTimestampMillis);
            }
            if (this.validUntilTimestampMillis != 0) {
                output.writeInt64(5, this.validUntilTimestampMillis);
            }
            if (this.inviteeProfile != null) {
                output.writeMessage(6, this.inviteeProfile);
            }
            if (!this.requesterProductId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(7, this.requesterProductId);
            }
            if (!this.invitationText.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(8, this.invitationText);
            }
            if (this.state != 0) {
                output.writeInt32(9, this.state);
            }
            if (this.notificationMode != 0) {
                output.writeInt32(10, this.notificationMode);
            }
            if (!this.clientCorrelationId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(11, this.clientCorrelationId);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (!this.invitationId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(1, this.invitationId);
            }
            if (this.inviteeIdentifier != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(2, this.inviteeIdentifier);
            }
            if (this.invitedRole != 0) {
                size += CodedOutputByteBufferNano.computeInt32Size(3, this.invitedRole);
            }
            if (this.invitedTimestampMillis != 0) {
                size += CodedOutputByteBufferNano.computeInt64Size(4, this.invitedTimestampMillis);
            }
            if (this.validUntilTimestampMillis != 0) {
                size += CodedOutputByteBufferNano.computeInt64Size(5, this.validUntilTimestampMillis);
            }
            if (this.inviteeProfile != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(6, this.inviteeProfile);
            }
            if (!this.requesterProductId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(7, this.requesterProductId);
            }
            if (!this.invitationText.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(8, this.invitationText);
            }
            if (this.state != 0) {
                size += CodedOutputByteBufferNano.computeInt32Size(9, this.state);
            }
            if (this.notificationMode != 0) {
                size += CodedOutputByteBufferNano.computeInt32Size(10, this.notificationMode);
            }
            if (this.clientCorrelationId.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(11, this.clientCorrelationId);
        }

        public Invitation mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                int value;
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        this.invitationId = input.readString();
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.inviteeIdentifier == null) {
                            this.inviteeIdentifier = new InviteeIdentifier();
                        }
                        input.readMessage(this.inviteeIdentifier);
                        continue;
                    case LogSource.LB_C /*24*/:
                        value = input.readInt32();
                        switch (value) {
                            case Action.UNKNOWN /*0*/:
                            case TimeSelection.Type.TEMPORARY /*1*/:
                            case TimeSelection.Type.INDEFINITELY /*2*/:
                            case TimeSelection.Type.CUSTOM /*3*/:
                            case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                this.invitedRole = value;
                                break;
                            default:
                                continue;
                        }
                    case LogSource.SOCIAL /*32*/:
                        this.invitedTimestampMillis = input.readInt64();
                        continue;
                    case LogSource.COPRESENCE /*40*/:
                        this.validUntilTimestampMillis = input.readInt64();
                        continue;
                    case LogSource.HANGOUT_LOG_REQUEST /*50*/:
                        if (this.inviteeProfile == null) {
                            this.inviteeProfile = new FamilyMemberProfile();
                        }
                        input.readMessage(this.inviteeProfile);
                        continue;
                    case LogSource.SLIDES /*58*/:
                        this.requesterProductId = input.readString();
                        continue;
                    case LogSource.WIFI_ASSISTANT /*66*/:
                        this.invitationText = input.readString();
                        continue;
                    case LogSource.JUSTSPEAK /*72*/:
                        value = input.readInt32();
                        switch (value) {
                            case Action.UNKNOWN /*0*/:
                            case TimeSelection.Type.TEMPORARY /*1*/:
                            case TimeSelection.Type.INDEFINITELY /*2*/:
                            case TimeSelection.Type.CUSTOM /*3*/:
                            case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                this.state = value;
                                break;
                            default:
                                continue;
                        }
                    case LogSource.CRONET_ANDROID_GSA /*80*/:
                        value = input.readInt32();
                        switch (value) {
                            case Action.UNKNOWN /*0*/:
                            case TimeSelection.Type.TEMPORARY /*1*/:
                            case TimeSelection.Type.INDEFINITELY /*2*/:
                                this.notificationMode = value;
                                break;
                            default:
                                continue;
                        }
                    case LogSource.TRON_COUNTERS /*90*/:
                        this.clientCorrelationId = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static Invitation parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (Invitation) MessageNano.mergeFrom(new Invitation(), data);
        }

        public static Invitation parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new Invitation().mergeFrom(input);
        }
    }

    public static final class InvitationList extends ExtendableMessageNano<InvitationList> {
        private static volatile InvitationList[] _emptyArray;
        public Invitation[] invitations;

        public static InvitationList[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new InvitationList[0];
                    }
                }
            }
            return _emptyArray;
        }

        public InvitationList() {
            clear();
        }

        public InvitationList clear() {
            this.invitations = Invitation.emptyArray();
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof InvitationList)) {
                return false;
            }
            InvitationList other = (InvitationList) o;
            if (!InternalNano.equals(this.invitations, other.invitations)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int hashCode = (((getClass().getName().hashCode() + 527) * 31) + InternalNano.hashCode(this.invitations)) * 31;
            int hashCode2 = (this.unknownFieldData == null || this.unknownFieldData.isEmpty()) ? 0 : this.unknownFieldData.hashCode();
            return hashCode + hashCode2;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.invitations != null && this.invitations.length > 0) {
                for (Invitation element : this.invitations) {
                    if (element != null) {
                        output.writeMessage(1, element);
                    }
                }
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.invitations != null && this.invitations.length > 0) {
                for (Invitation element : this.invitations) {
                    if (element != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(1, element);
                    }
                }
            }
            return size;
        }

        public InvitationList mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        int i;
                        int arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 10);
                        if (this.invitations == null) {
                            i = 0;
                        } else {
                            i = this.invitations.length;
                        }
                        Invitation[] newArray = new Invitation[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.invitations, 0, newArray, 0, i);
                        }
                        while (i < newArray.length - 1) {
                            newArray[i] = new Invitation();
                            input.readMessage(newArray[i]);
                            input.readTag();
                            i++;
                        }
                        newArray[i] = new Invitation();
                        input.readMessage(newArray[i]);
                        this.invitations = newArray;
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static InvitationList parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (InvitationList) MessageNano.mergeFrom(new InvitationList(), data);
        }

        public static InvitationList parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new InvitationList().mergeFrom(input);
        }
    }

    public static final class InviteeIdentifier extends ExtendableMessageNano<InviteeIdentifier> {
        private static volatile InviteeIdentifier[] _emptyArray;
        public String email;
        public String phoneNumber;

        public static InviteeIdentifier[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new InviteeIdentifier[0];
                    }
                }
            }
            return _emptyArray;
        }

        public InviteeIdentifier() {
            clear();
        }

        public InviteeIdentifier clear() {
            this.email = BuildConfig.VERSION_NAME;
            this.phoneNumber = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof InviteeIdentifier)) {
                return false;
            }
            InviteeIdentifier other = (InviteeIdentifier) o;
            if (this.email == null) {
                if (other.email != null) {
                    return false;
                }
            } else if (!this.email.equals(other.email)) {
                return false;
            }
            if (this.phoneNumber == null) {
                if (other.phoneNumber != null) {
                    return false;
                }
            } else if (!this.phoneNumber.equals(other.phoneNumber)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.email == null ? 0 : this.email.hashCode())) * 31) + (this.phoneNumber == null ? 0 : this.phoneNumber.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (!this.email.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(1, this.email);
            }
            if (!this.phoneNumber.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.phoneNumber);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (!this.email.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(1, this.email);
            }
            if (this.phoneNumber.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(2, this.phoneNumber);
        }

        public InviteeIdentifier mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        this.email = input.readString();
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.phoneNumber = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static InviteeIdentifier parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (InviteeIdentifier) MessageNano.mergeFrom(new InviteeIdentifier(), data);
        }

        public static InviteeIdentifier parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new InviteeIdentifier().mergeFrom(input);
        }
    }

    public static final class ListAppActivityRequest extends ExtendableMessageNano<ListAppActivityRequest> {
        private static volatile ListAppActivityRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public long maxTimestampMillis;
        public long minTimestampMillis;
        public int pageSize;
        public String pageToken;
        public String personId;

        public static ListAppActivityRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListAppActivityRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListAppActivityRequest() {
            clear();
        }

        public ListAppActivityRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.minTimestampMillis = 0;
            this.maxTimestampMillis = 0;
            this.pageSize = 0;
            this.pageToken = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListAppActivityRequest)) {
                return false;
            }
            ListAppActivityRequest other = (ListAppActivityRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.minTimestampMillis != other.minTimestampMillis || this.maxTimestampMillis != other.maxTimestampMillis || this.pageSize != other.pageSize) {
                return false;
            }
            if (this.pageToken == null) {
                if (other.pageToken != null) {
                    return false;
                }
            } else if (!this.pageToken.equals(other.pageToken)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + ((int) (this.minTimestampMillis ^ (this.minTimestampMillis >>> 32)))) * 31) + ((int) (this.maxTimestampMillis ^ (this.maxTimestampMillis >>> 32)))) * 31) + this.pageSize) * 31) + (this.pageToken == null ? 0 : this.pageToken.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (this.minTimestampMillis != 0) {
                output.writeInt64(3, this.minTimestampMillis);
            }
            if (this.maxTimestampMillis != 0) {
                output.writeInt64(4, this.maxTimestampMillis);
            }
            if (this.pageSize != 0) {
                output.writeInt32(5, this.pageSize);
            }
            if (!this.pageToken.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(6, this.pageToken);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (this.minTimestampMillis != 0) {
                size += CodedOutputByteBufferNano.computeInt64Size(3, this.minTimestampMillis);
            }
            if (this.maxTimestampMillis != 0) {
                size += CodedOutputByteBufferNano.computeInt64Size(4, this.maxTimestampMillis);
            }
            if (this.pageSize != 0) {
                size += CodedOutputByteBufferNano.computeInt32Size(5, this.pageSize);
            }
            if (this.pageToken.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(6, this.pageToken);
        }

        public ListAppActivityRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.LB_C /*24*/:
                        this.minTimestampMillis = input.readInt64();
                        continue;
                    case LogSource.SOCIAL /*32*/:
                        this.maxTimestampMillis = input.readInt64();
                        continue;
                    case LogSource.COPRESENCE /*40*/:
                        this.pageSize = input.readInt32();
                        continue;
                    case LogSource.HANGOUT_LOG_REQUEST /*50*/:
                        this.pageToken = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListAppActivityRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListAppActivityRequest) MessageNano.mergeFrom(new ListAppActivityRequest(), data);
        }

        public static ListAppActivityRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListAppActivityRequest().mergeFrom(input);
        }
    }

    public static final class ListAppActivityResponse extends ExtendableMessageNano<ListAppActivityResponse> {
        private static volatile ListAppActivityResponse[] _emptyArray;
        public AppActivity[] activities;
        public ApiResponseHeader apiHeader;
        public String nextPageToken;

        public static ListAppActivityResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListAppActivityResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListAppActivityResponse() {
            clear();
        }

        public ListAppActivityResponse clear() {
            this.apiHeader = null;
            this.activities = AppActivity.emptyArray();
            this.nextPageToken = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListAppActivityResponse)) {
                return false;
            }
            ListAppActivityResponse other = (ListAppActivityResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (!InternalNano.equals(this.activities, other.activities)) {
                return false;
            }
            if (this.nextPageToken == null) {
                if (other.nextPageToken != null) {
                    return false;
                }
            } else if (!this.nextPageToken.equals(other.nextPageToken)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + InternalNano.hashCode(this.activities)) * 31) + (this.nextPageToken == null ? 0 : this.nextPageToken.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.activities != null && this.activities.length > 0) {
                for (AppActivity element : this.activities) {
                    if (element != null) {
                        output.writeMessage(2, element);
                    }
                }
            }
            if (!this.nextPageToken.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.nextPageToken);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.activities != null && this.activities.length > 0) {
                for (AppActivity element : this.activities) {
                    if (element != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(2, element);
                    }
                }
            }
            if (this.nextPageToken.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(3, this.nextPageToken);
        }

        public ListAppActivityResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        int i;
                        int arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 18);
                        if (this.activities == null) {
                            i = 0;
                        } else {
                            i = this.activities.length;
                        }
                        AppActivity[] newArray = new AppActivity[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.activities, 0, newArray, 0, i);
                        }
                        while (i < newArray.length - 1) {
                            newArray[i] = new AppActivity();
                            input.readMessage(newArray[i]);
                            input.readTag();
                            i++;
                        }
                        newArray[i] = new AppActivity();
                        input.readMessage(newArray[i]);
                        this.activities = newArray;
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.nextPageToken = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListAppActivityResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListAppActivityResponse) MessageNano.mergeFrom(new ListAppActivityResponse(), data);
        }

        public static ListAppActivityResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListAppActivityResponse().mergeFrom(input);
        }
    }

    public static final class ListAppRestrictionsRequest extends ExtendableMessageNano<ListAppRestrictionsRequest> {
        private static volatile ListAppRestrictionsRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String packageName;
        public String personId;

        public static ListAppRestrictionsRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListAppRestrictionsRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListAppRestrictionsRequest() {
            clear();
        }

        public ListAppRestrictionsRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.packageName = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListAppRestrictionsRequest)) {
                return false;
            }
            ListAppRestrictionsRequest other = (ListAppRestrictionsRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.packageName == null) {
                if (other.packageName != null) {
                    return false;
                }
            } else if (!this.packageName.equals(other.packageName)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.packageName == null ? 0 : this.packageName.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (!this.packageName.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.packageName);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (this.packageName.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(3, this.packageName);
        }

        public ListAppRestrictionsRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.packageName = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListAppRestrictionsRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListAppRestrictionsRequest) MessageNano.mergeFrom(new ListAppRestrictionsRequest(), data);
        }

        public static ListAppRestrictionsRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListAppRestrictionsRequest().mergeFrom(input);
        }
    }

    public static final class ListAppRestrictionsResponse extends ExtendableMessageNano<ListAppRestrictionsResponse> {
        private static volatile ListAppRestrictionsResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public Restriction[] restrictions;

        public static ListAppRestrictionsResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListAppRestrictionsResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListAppRestrictionsResponse() {
            clear();
        }

        public ListAppRestrictionsResponse clear() {
            this.apiHeader = null;
            this.restrictions = Restriction.emptyArray();
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListAppRestrictionsResponse)) {
                return false;
            }
            ListAppRestrictionsResponse other = (ListAppRestrictionsResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (!InternalNano.equals(this.restrictions, other.restrictions)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + InternalNano.hashCode(this.restrictions)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.restrictions != null && this.restrictions.length > 0) {
                for (Restriction element : this.restrictions) {
                    if (element != null) {
                        output.writeMessage(2, element);
                    }
                }
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.restrictions != null && this.restrictions.length > 0) {
                for (Restriction element : this.restrictions) {
                    if (element != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(2, element);
                    }
                }
            }
            return size;
        }

        public ListAppRestrictionsResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        int i;
                        int arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 18);
                        if (this.restrictions == null) {
                            i = 0;
                        } else {
                            i = this.restrictions.length;
                        }
                        Restriction[] newArray = new Restriction[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.restrictions, 0, newArray, 0, i);
                        }
                        while (i < newArray.length - 1) {
                            newArray[i] = new Restriction();
                            input.readMessage(newArray[i]);
                            input.readTag();
                            i++;
                        }
                        newArray[i] = new Restriction();
                        input.readMessage(newArray[i]);
                        this.restrictions = newArray;
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListAppRestrictionsResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListAppRestrictionsResponse) MessageNano.mergeFrom(new ListAppRestrictionsResponse(), data);
        }

        public static ListAppRestrictionsResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListAppRestrictionsResponse().mergeFrom(input);
        }
    }

    public static final class ListAppsRequest extends ExtendableMessageNano<ListAppsRequest> {
        private static volatile ListAppsRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public AppFilter filter;
        public int pageSize;
        public String pageToken;
        public String personId;

        public static ListAppsRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListAppsRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListAppsRequest() {
            clear();
        }

        public ListAppsRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.pageToken = BuildConfig.VERSION_NAME;
            this.pageSize = 0;
            this.filter = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListAppsRequest)) {
                return false;
            }
            ListAppsRequest other = (ListAppsRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.pageToken == null) {
                if (other.pageToken != null) {
                    return false;
                }
            } else if (!this.pageToken.equals(other.pageToken)) {
                return false;
            }
            if (this.pageSize != other.pageSize) {
                return false;
            }
            if (this.filter == null) {
                if (other.filter != null) {
                    return false;
                }
            } else if (!this.filter.equals(other.filter)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.pageToken == null ? 0 : this.pageToken.hashCode())) * 31) + this.pageSize) * 31) + (this.filter == null ? 0 : this.filter.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (!this.pageToken.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.pageToken);
            }
            if (this.pageSize != 0) {
                output.writeInt32(4, this.pageSize);
            }
            if (this.filter != null) {
                output.writeMessage(5, this.filter);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (!this.pageToken.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(3, this.pageToken);
            }
            if (this.pageSize != 0) {
                size += CodedOutputByteBufferNano.computeInt32Size(4, this.pageSize);
            }
            if (this.filter != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(5, this.filter);
            }
            return size;
        }

        public ListAppsRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.pageToken = input.readString();
                        continue;
                    case LogSource.SOCIAL /*32*/:
                        this.pageSize = input.readInt32();
                        continue;
                    case LogSource.PHOTOS /*42*/:
                        if (this.filter == null) {
                            this.filter = new AppFilter();
                        }
                        input.readMessage(this.filter);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListAppsRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListAppsRequest) MessageNano.mergeFrom(new ListAppsRequest(), data);
        }

        public static ListAppsRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListAppsRequest().mergeFrom(input);
        }
    }

    public static final class ListAppsResponse extends ExtendableMessageNano<ListAppsResponse> {
        private static volatile ListAppsResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public App[] apps;
        public String nextPageToken;

        public static ListAppsResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListAppsResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListAppsResponse() {
            clear();
        }

        public ListAppsResponse clear() {
            this.apiHeader = null;
            this.apps = App.emptyArray();
            this.nextPageToken = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListAppsResponse)) {
                return false;
            }
            ListAppsResponse other = (ListAppsResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (!InternalNano.equals(this.apps, other.apps)) {
                return false;
            }
            if (this.nextPageToken == null) {
                if (other.nextPageToken != null) {
                    return false;
                }
            } else if (!this.nextPageToken.equals(other.nextPageToken)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + InternalNano.hashCode(this.apps)) * 31) + (this.nextPageToken == null ? 0 : this.nextPageToken.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.apps != null && this.apps.length > 0) {
                for (App element : this.apps) {
                    if (element != null) {
                        output.writeMessage(2, element);
                    }
                }
            }
            if (!this.nextPageToken.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.nextPageToken);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.apps != null && this.apps.length > 0) {
                for (App element : this.apps) {
                    if (element != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(2, element);
                    }
                }
            }
            if (this.nextPageToken.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(3, this.nextPageToken);
        }

        public ListAppsResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        int i;
                        int arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 18);
                        if (this.apps == null) {
                            i = 0;
                        } else {
                            i = this.apps.length;
                        }
                        App[] newArray = new App[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.apps, 0, newArray, 0, i);
                        }
                        while (i < newArray.length - 1) {
                            newArray[i] = new App();
                            input.readMessage(newArray[i]);
                            input.readTag();
                            i++;
                        }
                        newArray[i] = new App();
                        input.readMessage(newArray[i]);
                        this.apps = newArray;
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.nextPageToken = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListAppsResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListAppsResponse) MessageNano.mergeFrom(new ListAppsResponse(), data);
        }

        public static ListAppsResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListAppsResponse().mergeFrom(input);
        }
    }

    public static final class ListDashboardCardsRequest extends ExtendableMessageNano<ListDashboardCardsRequest> {
        private static volatile ListDashboardCardsRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public ClientInfo clientInfo;
        public String personId;
        public int[] supportedTypes;

        public static ListDashboardCardsRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListDashboardCardsRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListDashboardCardsRequest() {
            clear();
        }

        public ListDashboardCardsRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.supportedTypes = WireFormatNano.EMPTY_INT_ARRAY;
            this.clientInfo = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListDashboardCardsRequest)) {
                return false;
            }
            ListDashboardCardsRequest other = (ListDashboardCardsRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (!InternalNano.equals(this.supportedTypes, other.supportedTypes)) {
                return false;
            }
            if (this.clientInfo == null) {
                if (other.clientInfo != null) {
                    return false;
                }
            } else if (!this.clientInfo.equals(other.clientInfo)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + InternalNano.hashCode(this.supportedTypes)) * 31) + (this.clientInfo == null ? 0 : this.clientInfo.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (this.supportedTypes != null && this.supportedTypes.length > 0) {
                for (int writeInt32 : this.supportedTypes) {
                    output.writeInt32(3, writeInt32);
                }
            }
            if (this.clientInfo != null) {
                output.writeMessage(4, this.clientInfo);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (this.supportedTypes != null && this.supportedTypes.length > 0) {
                int dataSize = 0;
                for (int element : this.supportedTypes) {
                    dataSize += CodedOutputByteBufferNano.computeInt32SizeNoTag(element);
                }
                size = (size + dataSize) + (this.supportedTypes.length * 1);
            }
            if (this.clientInfo != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(4, this.clientInfo);
            }
            return size;
        }

        public ListDashboardCardsRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                int i;
                int value;
                int[] newArray;
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.LB_C /*24*/:
                        int length = WireFormatNano.getRepeatedFieldArrayLength(input, 24);
                        int[] validValues = new int[length];
                        i = 0;
                        int validCount = 0;
                        while (i < length) {
                            int validCount2;
                            if (i != 0) {
                                input.readTag();
                            }
                            value = input.readInt32();
                            switch (value) {
                                case Action.UNKNOWN /*0*/:
                                case TimeSelection.Type.TEMPORARY /*1*/:
                                case TimeSelection.Type.INDEFINITELY /*2*/:
                                case TimeSelection.Type.CUSTOM /*3*/:
                                case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                case Type.ADD_NEW_SHARES /*5*/:
                                case Type.REMOVE_SHARE /*6*/:
                                case Type.RESET_TIME /*7*/:
                                case Type.TAP_GET_LINK /*8*/:
                                case Type.CREATE_LINK /*9*/:
                                case Type.TAP_ABOUT /*10*/:
                                case Type.TAP_LEARN_MORE /*11*/:
                                case Type.SWITCH_ACCOUNT /*12*/:
                                case Type.DISPLAY_ERROR /*13*/:
                                case Type.LAUNCH_SETTINGS /*14*/:
                                case Type.OVEN_FRESH /*15*/:
                                case LogSource.GMS_CORE_PEOPLE /*16*/:
                                case LogSource.LE /*17*/:
                                case LogSource.GOOGLE_ANALYTICS /*18*/:
                                    validCount2 = validCount + 1;
                                    validValues[validCount] = value;
                                    break;
                                default:
                                    validCount2 = validCount;
                                    break;
                            }
                            i++;
                            validCount = validCount2;
                        }
                        if (validCount != 0) {
                            i = this.supportedTypes == null ? 0 : this.supportedTypes.length;
                            if (i != 0 || validCount != validValues.length) {
                                newArray = new int[(i + validCount)];
                                if (i != 0) {
                                    System.arraycopy(this.supportedTypes, 0, newArray, 0, i);
                                }
                                System.arraycopy(validValues, 0, newArray, i, validCount);
                                this.supportedTypes = newArray;
                                break;
                            }
                            this.supportedTypes = validValues;
                            break;
                        }
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        int limit = input.pushLimit(input.readRawVarint32());
                        int arrayLength = 0;
                        int startPos = input.getPosition();
                        while (input.getBytesUntilLimit() > 0) {
                            switch (input.readInt32()) {
                                case Action.UNKNOWN /*0*/:
                                case TimeSelection.Type.TEMPORARY /*1*/:
                                case TimeSelection.Type.INDEFINITELY /*2*/:
                                case TimeSelection.Type.CUSTOM /*3*/:
                                case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                case Type.ADD_NEW_SHARES /*5*/:
                                case Type.REMOVE_SHARE /*6*/:
                                case Type.RESET_TIME /*7*/:
                                case Type.TAP_GET_LINK /*8*/:
                                case Type.CREATE_LINK /*9*/:
                                case Type.TAP_ABOUT /*10*/:
                                case Type.TAP_LEARN_MORE /*11*/:
                                case Type.SWITCH_ACCOUNT /*12*/:
                                case Type.DISPLAY_ERROR /*13*/:
                                case Type.LAUNCH_SETTINGS /*14*/:
                                case Type.OVEN_FRESH /*15*/:
                                case LogSource.GMS_CORE_PEOPLE /*16*/:
                                case LogSource.LE /*17*/:
                                case LogSource.GOOGLE_ANALYTICS /*18*/:
                                    arrayLength++;
                                    break;
                                default:
                                    break;
                            }
                        }
                        if (arrayLength != 0) {
                            input.rewindToPosition(startPos);
                            if (this.supportedTypes == null) {
                                i = 0;
                            } else {
                                i = this.supportedTypes.length;
                            }
                            newArray = new int[(i + arrayLength)];
                            if (i != 0) {
                                System.arraycopy(this.supportedTypes, 0, newArray, 0, i);
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                value = input.readInt32();
                                switch (value) {
                                    case Action.UNKNOWN /*0*/:
                                    case TimeSelection.Type.TEMPORARY /*1*/:
                                    case TimeSelection.Type.INDEFINITELY /*2*/:
                                    case TimeSelection.Type.CUSTOM /*3*/:
                                    case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                    case Type.ADD_NEW_SHARES /*5*/:
                                    case Type.REMOVE_SHARE /*6*/:
                                    case Type.RESET_TIME /*7*/:
                                    case Type.TAP_GET_LINK /*8*/:
                                    case Type.CREATE_LINK /*9*/:
                                    case Type.TAP_ABOUT /*10*/:
                                    case Type.TAP_LEARN_MORE /*11*/:
                                    case Type.SWITCH_ACCOUNT /*12*/:
                                    case Type.DISPLAY_ERROR /*13*/:
                                    case Type.LAUNCH_SETTINGS /*14*/:
                                    case Type.OVEN_FRESH /*15*/:
                                    case LogSource.GMS_CORE_PEOPLE /*16*/:
                                    case LogSource.LE /*17*/:
                                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                                        int i2 = i + 1;
                                        newArray[i] = value;
                                        i = i2;
                                        break;
                                    default:
                                        break;
                                }
                            }
                            this.supportedTypes = newArray;
                        }
                        input.popLimit(limit);
                        continue;
                    case LogSource.NOVA /*34*/:
                        if (this.clientInfo == null) {
                            this.clientInfo = new ClientInfo();
                        }
                        input.readMessage(this.clientInfo);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListDashboardCardsRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListDashboardCardsRequest) MessageNano.mergeFrom(new ListDashboardCardsRequest(), data);
        }

        public static ListDashboardCardsRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListDashboardCardsRequest().mergeFrom(input);
        }
    }

    public static final class ListDashboardCardsResponse extends ExtendableMessageNano<ListDashboardCardsResponse> {
        private static volatile ListDashboardCardsResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public Card[] cards;

        public static ListDashboardCardsResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListDashboardCardsResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListDashboardCardsResponse() {
            clear();
        }

        public ListDashboardCardsResponse clear() {
            this.apiHeader = null;
            this.cards = Card.emptyArray();
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListDashboardCardsResponse)) {
                return false;
            }
            ListDashboardCardsResponse other = (ListDashboardCardsResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (!InternalNano.equals(this.cards, other.cards)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + InternalNano.hashCode(this.cards)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.cards != null && this.cards.length > 0) {
                for (Card element : this.cards) {
                    if (element != null) {
                        output.writeMessage(2, element);
                    }
                }
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.cards != null && this.cards.length > 0) {
                for (Card element : this.cards) {
                    if (element != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(2, element);
                    }
                }
            }
            return size;
        }

        public ListDashboardCardsResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        int i;
                        int arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 18);
                        if (this.cards == null) {
                            i = 0;
                        } else {
                            i = this.cards.length;
                        }
                        Card[] newArray = new Card[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.cards, 0, newArray, 0, i);
                        }
                        while (i < newArray.length - 1) {
                            newArray[i] = new Card();
                            input.readMessage(newArray[i]);
                            input.readTag();
                            i++;
                        }
                        newArray[i] = new Card();
                        input.readMessage(newArray[i]);
                        this.cards = newArray;
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListDashboardCardsResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListDashboardCardsResponse) MessageNano.mergeFrom(new ListDashboardCardsResponse(), data);
        }

        public static ListDashboardCardsResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListDashboardCardsResponse().mergeFrom(input);
        }
    }

    public static final class ListDevicesRequest extends ExtendableMessageNano<ListDevicesRequest> {
        private static volatile ListDevicesRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String personId;
        public int[] readMasks;

        public static ListDevicesRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListDevicesRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListDevicesRequest() {
            clear();
        }

        public ListDevicesRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.readMasks = WireFormatNano.EMPTY_INT_ARRAY;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListDevicesRequest)) {
                return false;
            }
            ListDevicesRequest other = (ListDevicesRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (!InternalNano.equals(this.readMasks, other.readMasks)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + InternalNano.hashCode(this.readMasks)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (this.readMasks != null && this.readMasks.length > 0) {
                for (int writeInt32 : this.readMasks) {
                    output.writeInt32(3, writeInt32);
                }
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (this.readMasks == null || this.readMasks.length <= 0) {
                return size;
            }
            int dataSize = 0;
            for (int element : this.readMasks) {
                dataSize += CodedOutputByteBufferNano.computeInt32SizeNoTag(element);
            }
            return (size + dataSize) + (this.readMasks.length * 1);
        }

        public ListDevicesRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                int i;
                int value;
                int[] newArray;
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.LB_C /*24*/:
                        int length = WireFormatNano.getRepeatedFieldArrayLength(input, 24);
                        int[] validValues = new int[length];
                        i = 0;
                        int validCount = 0;
                        while (i < length) {
                            int validCount2;
                            if (i != 0) {
                                input.readTag();
                            }
                            value = input.readInt32();
                            switch (value) {
                                case Action.UNKNOWN /*0*/:
                                case TimeSelection.Type.TEMPORARY /*1*/:
                                case TimeSelection.Type.INDEFINITELY /*2*/:
                                case TimeSelection.Type.CUSTOM /*3*/:
                                case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                case Type.ADD_NEW_SHARES /*5*/:
                                    validCount2 = validCount + 1;
                                    validValues[validCount] = value;
                                    break;
                                default:
                                    validCount2 = validCount;
                                    break;
                            }
                            i++;
                            validCount = validCount2;
                        }
                        if (validCount != 0) {
                            i = this.readMasks == null ? 0 : this.readMasks.length;
                            if (i != 0 || validCount != validValues.length) {
                                newArray = new int[(i + validCount)];
                                if (i != 0) {
                                    System.arraycopy(this.readMasks, 0, newArray, 0, i);
                                }
                                System.arraycopy(validValues, 0, newArray, i, validCount);
                                this.readMasks = newArray;
                                break;
                            }
                            this.readMasks = validValues;
                            break;
                        }
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        int limit = input.pushLimit(input.readRawVarint32());
                        int arrayLength = 0;
                        int startPos = input.getPosition();
                        while (input.getBytesUntilLimit() > 0) {
                            switch (input.readInt32()) {
                                case Action.UNKNOWN /*0*/:
                                case TimeSelection.Type.TEMPORARY /*1*/:
                                case TimeSelection.Type.INDEFINITELY /*2*/:
                                case TimeSelection.Type.CUSTOM /*3*/:
                                case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                case Type.ADD_NEW_SHARES /*5*/:
                                    arrayLength++;
                                    break;
                                default:
                                    break;
                            }
                        }
                        if (arrayLength != 0) {
                            input.rewindToPosition(startPos);
                            if (this.readMasks == null) {
                                i = 0;
                            } else {
                                i = this.readMasks.length;
                            }
                            newArray = new int[(i + arrayLength)];
                            if (i != 0) {
                                System.arraycopy(this.readMasks, 0, newArray, 0, i);
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                value = input.readInt32();
                                switch (value) {
                                    case Action.UNKNOWN /*0*/:
                                    case TimeSelection.Type.TEMPORARY /*1*/:
                                    case TimeSelection.Type.INDEFINITELY /*2*/:
                                    case TimeSelection.Type.CUSTOM /*3*/:
                                    case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                    case Type.ADD_NEW_SHARES /*5*/:
                                        int i2 = i + 1;
                                        newArray[i] = value;
                                        i = i2;
                                        break;
                                    default:
                                        break;
                                }
                            }
                            this.readMasks = newArray;
                        }
                        input.popLimit(limit);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListDevicesRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListDevicesRequest) MessageNano.mergeFrom(new ListDevicesRequest(), data);
        }

        public static ListDevicesRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListDevicesRequest().mergeFrom(input);
        }
    }

    public static final class ListDevicesResponse extends ExtendableMessageNano<ListDevicesResponse> {
        private static volatile ListDevicesResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public Device[] devices;

        public static ListDevicesResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListDevicesResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListDevicesResponse() {
            clear();
        }

        public ListDevicesResponse clear() {
            this.apiHeader = null;
            this.devices = Device.emptyArray();
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListDevicesResponse)) {
                return false;
            }
            ListDevicesResponse other = (ListDevicesResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (!InternalNano.equals(this.devices, other.devices)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + InternalNano.hashCode(this.devices)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.devices != null && this.devices.length > 0) {
                for (Device element : this.devices) {
                    if (element != null) {
                        output.writeMessage(2, element);
                    }
                }
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.devices != null && this.devices.length > 0) {
                for (Device element : this.devices) {
                    if (element != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(2, element);
                    }
                }
            }
            return size;
        }

        public ListDevicesResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        int i;
                        int arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 18);
                        if (this.devices == null) {
                            i = 0;
                        } else {
                            i = this.devices.length;
                        }
                        Device[] newArray = new Device[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.devices, 0, newArray, 0, i);
                        }
                        while (i < newArray.length - 1) {
                            newArray[i] = new Device();
                            input.readMessage(newArray[i]);
                            input.readTag();
                            i++;
                        }
                        newArray[i] = new Device();
                        input.readMessage(newArray[i]);
                        this.devices = newArray;
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListDevicesResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListDevicesResponse) MessageNano.mergeFrom(new ListDevicesResponse(), data);
        }

        public static ListDevicesResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListDevicesResponse().mergeFrom(input);
        }
    }

    public static final class ListEventTypeConfigsRequest extends ExtendableMessageNano<ListEventTypeConfigsRequest> {
        private static volatile ListEventTypeConfigsRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String personId;

        public static ListEventTypeConfigsRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListEventTypeConfigsRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListEventTypeConfigsRequest() {
            clear();
        }

        public ListEventTypeConfigsRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListEventTypeConfigsRequest)) {
                return false;
            }
            ListEventTypeConfigsRequest other = (ListEventTypeConfigsRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.personId.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(2, this.personId);
        }

        public ListEventTypeConfigsRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListEventTypeConfigsRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListEventTypeConfigsRequest) MessageNano.mergeFrom(new ListEventTypeConfigsRequest(), data);
        }

        public static ListEventTypeConfigsRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListEventTypeConfigsRequest().mergeFrom(input);
        }
    }

    public static final class ListEventTypeConfigsResponse extends ExtendableMessageNano<ListEventTypeConfigsResponse> {
        private static volatile ListEventTypeConfigsResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public EventTypeConfig[] configs;

        public static ListEventTypeConfigsResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListEventTypeConfigsResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListEventTypeConfigsResponse() {
            clear();
        }

        public ListEventTypeConfigsResponse clear() {
            this.apiHeader = null;
            this.configs = EventTypeConfig.emptyArray();
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListEventTypeConfigsResponse)) {
                return false;
            }
            ListEventTypeConfigsResponse other = (ListEventTypeConfigsResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (!InternalNano.equals(this.configs, other.configs)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + InternalNano.hashCode(this.configs)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.configs != null && this.configs.length > 0) {
                for (EventTypeConfig element : this.configs) {
                    if (element != null) {
                        output.writeMessage(2, element);
                    }
                }
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.configs != null && this.configs.length > 0) {
                for (EventTypeConfig element : this.configs) {
                    if (element != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(2, element);
                    }
                }
            }
            return size;
        }

        public ListEventTypeConfigsResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        int i;
                        int arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 18);
                        if (this.configs == null) {
                            i = 0;
                        } else {
                            i = this.configs.length;
                        }
                        EventTypeConfig[] newArray = new EventTypeConfig[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.configs, 0, newArray, 0, i);
                        }
                        while (i < newArray.length - 1) {
                            newArray[i] = new EventTypeConfig();
                            input.readMessage(newArray[i]);
                            input.readTag();
                            i++;
                        }
                        newArray[i] = new EventTypeConfig();
                        input.readMessage(newArray[i]);
                        this.configs = newArray;
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListEventTypeConfigsResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListEventTypeConfigsResponse) MessageNano.mergeFrom(new ListEventTypeConfigsResponse(), data);
        }

        public static ListEventTypeConfigsResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListEventTypeConfigsResponse().mergeFrom(input);
        }
    }

    public static final class ListFamilyLocationsRequest extends ExtendableMessageNano<ListFamilyLocationsRequest> {
        private static volatile ListFamilyLocationsRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String familyId;
        public boolean includeInvited;
        public boolean requestOvenFresh;

        public static ListFamilyLocationsRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListFamilyLocationsRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListFamilyLocationsRequest() {
            clear();
        }

        public ListFamilyLocationsRequest clear() {
            this.apiHeader = null;
            this.familyId = BuildConfig.VERSION_NAME;
            this.requestOvenFresh = false;
            this.includeInvited = false;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListFamilyLocationsRequest)) {
                return false;
            }
            ListFamilyLocationsRequest other = (ListFamilyLocationsRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.familyId == null) {
                if (other.familyId != null) {
                    return false;
                }
            } else if (!this.familyId.equals(other.familyId)) {
                return false;
            }
            if (this.requestOvenFresh != other.requestOvenFresh || this.includeInvited != other.includeInvited) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i;
            int i2 = 1231;
            int i3 = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.familyId == null ? 0 : this.familyId.hashCode())) * 31;
            if (this.requestOvenFresh) {
                i = 1231;
            } else {
                i = 1237;
            }
            i = (hashCode + i) * 31;
            if (!this.includeInvited) {
                i2 = 1237;
            }
            i = (i + i2) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i3 = this.unknownFieldData.hashCode();
            }
            return i + i3;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.familyId);
            }
            if (this.requestOvenFresh) {
                output.writeBool(3, this.requestOvenFresh);
            }
            if (this.includeInvited) {
                output.writeBool(4, this.includeInvited);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.familyId);
            }
            if (this.requestOvenFresh) {
                size += CodedOutputByteBufferNano.computeBoolSize(3, this.requestOvenFresh);
            }
            if (this.includeInvited) {
                return size + CodedOutputByteBufferNano.computeBoolSize(4, this.includeInvited);
            }
            return size;
        }

        public ListFamilyLocationsRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.familyId = input.readString();
                        continue;
                    case LogSource.LB_C /*24*/:
                        this.requestOvenFresh = input.readBool();
                        continue;
                    case LogSource.SOCIAL /*32*/:
                        this.includeInvited = input.readBool();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListFamilyLocationsRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListFamilyLocationsRequest) MessageNano.mergeFrom(new ListFamilyLocationsRequest(), data);
        }

        public static ListFamilyLocationsRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListFamilyLocationsRequest().mergeFrom(input);
        }
    }

    public static final class ListFamilyLocationsResponse extends ExtendableMessageNano<ListFamilyLocationsResponse> {
        private static volatile ListFamilyLocationsResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public String familyId;
        public FamilyMemberWithLocation[] memberLocations;
        public int millisecondsUntilRefresh;

        public static ListFamilyLocationsResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListFamilyLocationsResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListFamilyLocationsResponse() {
            clear();
        }

        public ListFamilyLocationsResponse clear() {
            this.apiHeader = null;
            this.familyId = BuildConfig.VERSION_NAME;
            this.memberLocations = FamilyMemberWithLocation.emptyArray();
            this.millisecondsUntilRefresh = 0;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListFamilyLocationsResponse)) {
                return false;
            }
            ListFamilyLocationsResponse other = (ListFamilyLocationsResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.familyId == null) {
                if (other.familyId != null) {
                    return false;
                }
            } else if (!this.familyId.equals(other.familyId)) {
                return false;
            }
            if (!InternalNano.equals(this.memberLocations, other.memberLocations) || this.millisecondsUntilRefresh != other.millisecondsUntilRefresh) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.familyId == null ? 0 : this.familyId.hashCode())) * 31) + InternalNano.hashCode(this.memberLocations)) * 31) + this.millisecondsUntilRefresh) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.familyId);
            }
            if (this.memberLocations != null && this.memberLocations.length > 0) {
                for (FamilyMemberWithLocation element : this.memberLocations) {
                    if (element != null) {
                        output.writeMessage(3, element);
                    }
                }
            }
            if (this.millisecondsUntilRefresh != 0) {
                output.writeInt32(4, this.millisecondsUntilRefresh);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.familyId);
            }
            if (this.memberLocations != null && this.memberLocations.length > 0) {
                for (FamilyMemberWithLocation element : this.memberLocations) {
                    if (element != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(3, element);
                    }
                }
            }
            if (this.millisecondsUntilRefresh != 0) {
                return size + CodedOutputByteBufferNano.computeInt32Size(4, this.millisecondsUntilRefresh);
            }
            return size;
        }

        public ListFamilyLocationsResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.familyId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        int i;
                        int arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 26);
                        if (this.memberLocations == null) {
                            i = 0;
                        } else {
                            i = this.memberLocations.length;
                        }
                        FamilyMemberWithLocation[] newArray = new FamilyMemberWithLocation[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.memberLocations, 0, newArray, 0, i);
                        }
                        while (i < newArray.length - 1) {
                            newArray[i] = new FamilyMemberWithLocation();
                            input.readMessage(newArray[i]);
                            input.readTag();
                            i++;
                        }
                        newArray[i] = new FamilyMemberWithLocation();
                        input.readMessage(newArray[i]);
                        this.memberLocations = newArray;
                        continue;
                    case LogSource.SOCIAL /*32*/:
                        this.millisecondsUntilRefresh = input.readInt32();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListFamilyLocationsResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListFamilyLocationsResponse) MessageNano.mergeFrom(new ListFamilyLocationsResponse(), data);
        }

        public static ListFamilyLocationsResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListFamilyLocationsResponse().mergeFrom(input);
        }
    }

    public static final class ListFamilyPlacesRequest extends ExtendableMessageNano<ListFamilyPlacesRequest> {
        private static volatile ListFamilyPlacesRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String familyId;

        public static ListFamilyPlacesRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListFamilyPlacesRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListFamilyPlacesRequest() {
            clear();
        }

        public ListFamilyPlacesRequest clear() {
            this.apiHeader = null;
            this.familyId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListFamilyPlacesRequest)) {
                return false;
            }
            ListFamilyPlacesRequest other = (ListFamilyPlacesRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.familyId == null) {
                if (other.familyId != null) {
                    return false;
                }
            } else if (!this.familyId.equals(other.familyId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.familyId == null ? 0 : this.familyId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.familyId);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.familyId.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(2, this.familyId);
        }

        public ListFamilyPlacesRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.familyId = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListFamilyPlacesRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListFamilyPlacesRequest) MessageNano.mergeFrom(new ListFamilyPlacesRequest(), data);
        }

        public static ListFamilyPlacesRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListFamilyPlacesRequest().mergeFrom(input);
        }
    }

    public static final class ListFamilyPlacesResponse extends ExtendableMessageNano<ListFamilyPlacesResponse> {
        private static volatile ListFamilyPlacesResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public FamilyPlace[] familyPlaces;

        public static ListFamilyPlacesResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListFamilyPlacesResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListFamilyPlacesResponse() {
            clear();
        }

        public ListFamilyPlacesResponse clear() {
            this.apiHeader = null;
            this.familyPlaces = FamilyPlace.emptyArray();
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListFamilyPlacesResponse)) {
                return false;
            }
            ListFamilyPlacesResponse other = (ListFamilyPlacesResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (!InternalNano.equals(this.familyPlaces, other.familyPlaces)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + InternalNano.hashCode(this.familyPlaces)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.familyPlaces != null && this.familyPlaces.length > 0) {
                for (FamilyPlace element : this.familyPlaces) {
                    if (element != null) {
                        output.writeMessage(2, element);
                    }
                }
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.familyPlaces != null && this.familyPlaces.length > 0) {
                for (FamilyPlace element : this.familyPlaces) {
                    if (element != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(2, element);
                    }
                }
            }
            return size;
        }

        public ListFamilyPlacesResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        int i;
                        int arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 18);
                        if (this.familyPlaces == null) {
                            i = 0;
                        } else {
                            i = this.familyPlaces.length;
                        }
                        FamilyPlace[] newArray = new FamilyPlace[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.familyPlaces, 0, newArray, 0, i);
                        }
                        while (i < newArray.length - 1) {
                            newArray[i] = new FamilyPlace();
                            input.readMessage(newArray[i]);
                            input.readTag();
                            i++;
                        }
                        newArray[i] = new FamilyPlace();
                        input.readMessage(newArray[i]);
                        this.familyPlaces = newArray;
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListFamilyPlacesResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListFamilyPlacesResponse) MessageNano.mergeFrom(new ListFamilyPlacesResponse(), data);
        }

        public static ListFamilyPlacesResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListFamilyPlacesResponse().mergeFrom(input);
        }
    }

    public static final class ListInboxItemsRequest extends ExtendableMessageNano<ListInboxItemsRequest> {
        private static volatile ListInboxItemsRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public int pageSize;
        public String pageToken;
        public String personId;

        public static ListInboxItemsRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListInboxItemsRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListInboxItemsRequest() {
            clear();
        }

        public ListInboxItemsRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.pageToken = BuildConfig.VERSION_NAME;
            this.pageSize = 0;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListInboxItemsRequest)) {
                return false;
            }
            ListInboxItemsRequest other = (ListInboxItemsRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.pageToken == null) {
                if (other.pageToken != null) {
                    return false;
                }
            } else if (!this.pageToken.equals(other.pageToken)) {
                return false;
            }
            if (this.pageSize != other.pageSize) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.pageToken == null ? 0 : this.pageToken.hashCode())) * 31) + this.pageSize) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (!this.pageToken.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.pageToken);
            }
            if (this.pageSize != 0) {
                output.writeInt32(4, this.pageSize);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (!this.pageToken.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(3, this.pageToken);
            }
            if (this.pageSize != 0) {
                return size + CodedOutputByteBufferNano.computeInt32Size(4, this.pageSize);
            }
            return size;
        }

        public ListInboxItemsRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.pageToken = input.readString();
                        continue;
                    case LogSource.SOCIAL /*32*/:
                        this.pageSize = input.readInt32();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListInboxItemsRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListInboxItemsRequest) MessageNano.mergeFrom(new ListInboxItemsRequest(), data);
        }

        public static ListInboxItemsRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListInboxItemsRequest().mergeFrom(input);
        }
    }

    public static final class ListInboxItemsResponse extends ExtendableMessageNano<ListInboxItemsResponse> {
        private static volatile ListInboxItemsResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public InboxItem[] items;
        public String nextPageToken;

        public static ListInboxItemsResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListInboxItemsResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListInboxItemsResponse() {
            clear();
        }

        public ListInboxItemsResponse clear() {
            this.apiHeader = null;
            this.items = InboxItem.emptyArray();
            this.nextPageToken = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListInboxItemsResponse)) {
                return false;
            }
            ListInboxItemsResponse other = (ListInboxItemsResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (!InternalNano.equals(this.items, other.items)) {
                return false;
            }
            if (this.nextPageToken == null) {
                if (other.nextPageToken != null) {
                    return false;
                }
            } else if (!this.nextPageToken.equals(other.nextPageToken)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + InternalNano.hashCode(this.items)) * 31) + (this.nextPageToken == null ? 0 : this.nextPageToken.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.items != null && this.items.length > 0) {
                for (InboxItem element : this.items) {
                    if (element != null) {
                        output.writeMessage(2, element);
                    }
                }
            }
            if (!this.nextPageToken.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.nextPageToken);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.items != null && this.items.length > 0) {
                for (InboxItem element : this.items) {
                    if (element != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(2, element);
                    }
                }
            }
            if (this.nextPageToken.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(3, this.nextPageToken);
        }

        public ListInboxItemsResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        int i;
                        int arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 18);
                        if (this.items == null) {
                            i = 0;
                        } else {
                            i = this.items.length;
                        }
                        InboxItem[] newArray = new InboxItem[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.items, 0, newArray, 0, i);
                        }
                        while (i < newArray.length - 1) {
                            newArray[i] = new InboxItem();
                            input.readMessage(newArray[i]);
                            input.readTag();
                            i++;
                        }
                        newArray[i] = new InboxItem();
                        input.readMessage(newArray[i]);
                        this.items = newArray;
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.nextPageToken = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListInboxItemsResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListInboxItemsResponse) MessageNano.mergeFrom(new ListInboxItemsResponse(), data);
        }

        public static ListInboxItemsResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListInboxItemsResponse().mergeFrom(input);
        }
    }

    public static final class ListInvitationsRequest extends ExtendableMessageNano<ListInvitationsRequest> {
        private static volatile ListInvitationsRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String familyId;

        public static ListInvitationsRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListInvitationsRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListInvitationsRequest() {
            clear();
        }

        public ListInvitationsRequest clear() {
            this.apiHeader = null;
            this.familyId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListInvitationsRequest)) {
                return false;
            }
            ListInvitationsRequest other = (ListInvitationsRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.familyId == null) {
                if (other.familyId != null) {
                    return false;
                }
            } else if (!this.familyId.equals(other.familyId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.familyId == null ? 0 : this.familyId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(1, this.familyId);
            }
            if (this.apiHeader != null) {
                output.writeMessage(2, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(1, this.familyId);
            }
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.apiHeader);
            }
            return size;
        }

        public ListInvitationsRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        this.familyId = input.readString();
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListInvitationsRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListInvitationsRequest) MessageNano.mergeFrom(new ListInvitationsRequest(), data);
        }

        public static ListInvitationsRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListInvitationsRequest().mergeFrom(input);
        }
    }

    public static final class ListInvitationsResponse extends ExtendableMessageNano<ListInvitationsResponse> {
        private static volatile ListInvitationsResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public Invitation[] invitations;

        public static ListInvitationsResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListInvitationsResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListInvitationsResponse() {
            clear();
        }

        public ListInvitationsResponse clear() {
            this.apiHeader = null;
            this.invitations = Invitation.emptyArray();
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListInvitationsResponse)) {
                return false;
            }
            ListInvitationsResponse other = (ListInvitationsResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (!InternalNano.equals(this.invitations, other.invitations)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + InternalNano.hashCode(this.invitations)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.invitations != null && this.invitations.length > 0) {
                for (Invitation element : this.invitations) {
                    if (element != null) {
                        output.writeMessage(1, element);
                    }
                }
            }
            if (this.apiHeader != null) {
                output.writeMessage(2, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.invitations != null && this.invitations.length > 0) {
                for (Invitation element : this.invitations) {
                    if (element != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(1, element);
                    }
                }
            }
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.apiHeader);
            }
            return size;
        }

        public ListInvitationsResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        int i;
                        int arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 10);
                        if (this.invitations == null) {
                            i = 0;
                        } else {
                            i = this.invitations.length;
                        }
                        Invitation[] newArray = new Invitation[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.invitations, 0, newArray, 0, i);
                        }
                        while (i < newArray.length - 1) {
                            newArray[i] = new Invitation();
                            input.readMessage(newArray[i]);
                            input.readTag();
                            i++;
                        }
                        newArray[i] = new Invitation();
                        input.readMessage(newArray[i]);
                        this.invitations = newArray;
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListInvitationsResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListInvitationsResponse) MessageNano.mergeFrom(new ListInvitationsResponse(), data);
        }

        public static ListInvitationsResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListInvitationsResponse().mergeFrom(input);
        }
    }

    public static final class ListMembersRequest extends ExtendableMessageNano<ListMembersRequest> {
        private static volatile ListMembersRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String familyId;

        public static ListMembersRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListMembersRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListMembersRequest() {
            clear();
        }

        public ListMembersRequest clear() {
            this.apiHeader = null;
            this.familyId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListMembersRequest)) {
                return false;
            }
            ListMembersRequest other = (ListMembersRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.familyId == null) {
                if (other.familyId != null) {
                    return false;
                }
            } else if (!this.familyId.equals(other.familyId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.familyId == null ? 0 : this.familyId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(1, this.familyId);
            }
            if (this.apiHeader != null) {
                output.writeMessage(2, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(1, this.familyId);
            }
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.apiHeader);
            }
            return size;
        }

        public ListMembersRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        this.familyId = input.readString();
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListMembersRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListMembersRequest) MessageNano.mergeFrom(new ListMembersRequest(), data);
        }

        public static ListMembersRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListMembersRequest().mergeFrom(input);
        }
    }

    public static final class ListMembersResponse extends ExtendableMessageNano<ListMembersResponse> {
        private static volatile ListMembersResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public FamilyMember[] members;
        public String myUserId;

        public static ListMembersResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListMembersResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListMembersResponse() {
            clear();
        }

        public ListMembersResponse clear() {
            this.apiHeader = null;
            this.members = FamilyMember.emptyArray();
            this.myUserId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListMembersResponse)) {
                return false;
            }
            ListMembersResponse other = (ListMembersResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (!InternalNano.equals(this.members, other.members)) {
                return false;
            }
            if (this.myUserId == null) {
                if (other.myUserId != null) {
                    return false;
                }
            } else if (!this.myUserId.equals(other.myUserId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + InternalNano.hashCode(this.members)) * 31) + (this.myUserId == null ? 0 : this.myUserId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.members != null && this.members.length > 0) {
                for (FamilyMember element : this.members) {
                    if (element != null) {
                        output.writeMessage(1, element);
                    }
                }
            }
            if (this.apiHeader != null) {
                output.writeMessage(2, this.apiHeader);
            }
            if (!this.myUserId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.myUserId);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.members != null && this.members.length > 0) {
                for (FamilyMember element : this.members) {
                    if (element != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(1, element);
                    }
                }
            }
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(2, this.apiHeader);
            }
            if (this.myUserId.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(3, this.myUserId);
        }

        public ListMembersResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        int i;
                        int arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 10);
                        if (this.members == null) {
                            i = 0;
                        } else {
                            i = this.members.length;
                        }
                        FamilyMember[] newArray = new FamilyMember[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.members, 0, newArray, 0, i);
                        }
                        while (i < newArray.length - 1) {
                            newArray[i] = new FamilyMember();
                            input.readMessage(newArray[i]);
                            input.readTag();
                            i++;
                        }
                        newArray[i] = new FamilyMember();
                        input.readMessage(newArray[i]);
                        this.members = newArray;
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.myUserId = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListMembersResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListMembersResponse) MessageNano.mergeFrom(new ListMembersResponse(), data);
        }

        public static ListMembersResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListMembersResponse().mergeFrom(input);
        }
    }

    public static final class ListPermissionRequestsRequest extends ExtendableMessageNano<ListPermissionRequestsRequest> {
        private static volatile ListPermissionRequestsRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public long fromVersion;
        public int pageSize;
        public String pageToken;
        public String personId;
        public int[] state;

        public static ListPermissionRequestsRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListPermissionRequestsRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListPermissionRequestsRequest() {
            clear();
        }

        public ListPermissionRequestsRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.state = WireFormatNano.EMPTY_INT_ARRAY;
            this.pageSize = 0;
            this.pageToken = BuildConfig.VERSION_NAME;
            this.fromVersion = 0;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListPermissionRequestsRequest)) {
                return false;
            }
            ListPermissionRequestsRequest other = (ListPermissionRequestsRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (!InternalNano.equals(this.state, other.state) || this.pageSize != other.pageSize) {
                return false;
            }
            if (this.pageToken == null) {
                if (other.pageToken != null) {
                    return false;
                }
            } else if (!this.pageToken.equals(other.pageToken)) {
                return false;
            }
            if (this.fromVersion != other.fromVersion) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + InternalNano.hashCode(this.state)) * 31) + this.pageSize) * 31) + (this.pageToken == null ? 0 : this.pageToken.hashCode())) * 31) + ((int) (this.fromVersion ^ (this.fromVersion >>> 32)))) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.pageSize != 0) {
                output.writeInt32(3, this.pageSize);
            }
            if (!this.pageToken.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(4, this.pageToken);
            }
            if (this.fromVersion != 0) {
                output.writeInt64(5, this.fromVersion);
            }
            if (this.apiHeader != null) {
                output.writeMessage(6, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(7, this.personId);
            }
            if (this.state != null && this.state.length > 0) {
                for (int writeInt32 : this.state) {
                    output.writeInt32(8, writeInt32);
                }
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.pageSize != 0) {
                size += CodedOutputByteBufferNano.computeInt32Size(3, this.pageSize);
            }
            if (!this.pageToken.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(4, this.pageToken);
            }
            if (this.fromVersion != 0) {
                size += CodedOutputByteBufferNano.computeInt64Size(5, this.fromVersion);
            }
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(6, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(7, this.personId);
            }
            if (this.state == null || this.state.length <= 0) {
                return size;
            }
            int dataSize = 0;
            for (int element : this.state) {
                dataSize += CodedOutputByteBufferNano.computeInt32SizeNoTag(element);
            }
            return (size + dataSize) + (this.state.length * 1);
        }

        public ListPermissionRequestsRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                int i;
                int value;
                int[] newArray;
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case LogSource.LB_C /*24*/:
                        this.pageSize = input.readInt32();
                        continue;
                    case LogSource.NOVA /*34*/:
                        this.pageToken = input.readString();
                        continue;
                    case LogSource.COPRESENCE /*40*/:
                        this.fromVersion = input.readInt64();
                        continue;
                    case LogSource.HANGOUT_LOG_REQUEST /*50*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.SLIDES /*58*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.KIDS_COMMUNICATOR /*64*/:
                        int length = WireFormatNano.getRepeatedFieldArrayLength(input, 64);
                        int[] validValues = new int[length];
                        i = 0;
                        int validCount = 0;
                        while (i < length) {
                            int validCount2;
                            if (i != 0) {
                                input.readTag();
                            }
                            value = input.readInt32();
                            switch (value) {
                                case Action.UNKNOWN /*0*/:
                                case TimeSelection.Type.TEMPORARY /*1*/:
                                case TimeSelection.Type.INDEFINITELY /*2*/:
                                case TimeSelection.Type.CUSTOM /*3*/:
                                case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                    validCount2 = validCount + 1;
                                    validValues[validCount] = value;
                                    break;
                                default:
                                    validCount2 = validCount;
                                    break;
                            }
                            i++;
                            validCount = validCount2;
                        }
                        if (validCount != 0) {
                            if (this.state == null) {
                                i = 0;
                            } else {
                                i = this.state.length;
                            }
                            if (i == 0) {
                                int length2 = validValues.length;
                                if (validCount == r0) {
                                    this.state = validValues;
                                    break;
                                }
                            }
                            newArray = new int[(i + validCount)];
                            if (i != 0) {
                                System.arraycopy(this.state, 0, newArray, 0, i);
                            }
                            System.arraycopy(validValues, 0, newArray, i, validCount);
                            this.state = newArray;
                            break;
                        }
                        continue;
                    case LogSource.WIFI_ASSISTANT /*66*/:
                        int limit = input.pushLimit(input.readRawVarint32());
                        int arrayLength = 0;
                        int startPos = input.getPosition();
                        while (input.getBytesUntilLimit() > 0) {
                            switch (input.readInt32()) {
                                case Action.UNKNOWN /*0*/:
                                case TimeSelection.Type.TEMPORARY /*1*/:
                                case TimeSelection.Type.INDEFINITELY /*2*/:
                                case TimeSelection.Type.CUSTOM /*3*/:
                                case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                    arrayLength++;
                                    break;
                                default:
                                    break;
                            }
                        }
                        if (arrayLength != 0) {
                            input.rewindToPosition(startPos);
                            if (this.state == null) {
                                i = 0;
                            } else {
                                i = this.state.length;
                            }
                            newArray = new int[(i + arrayLength)];
                            if (i != 0) {
                                System.arraycopy(this.state, 0, newArray, 0, i);
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                value = input.readInt32();
                                switch (value) {
                                    case Action.UNKNOWN /*0*/:
                                    case TimeSelection.Type.TEMPORARY /*1*/:
                                    case TimeSelection.Type.INDEFINITELY /*2*/:
                                    case TimeSelection.Type.CUSTOM /*3*/:
                                    case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                        int i2 = i + 1;
                                        newArray[i] = value;
                                        i = i2;
                                        break;
                                    default:
                                        break;
                                }
                            }
                            this.state = newArray;
                        }
                        input.popLimit(limit);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListPermissionRequestsRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListPermissionRequestsRequest) MessageNano.mergeFrom(new ListPermissionRequestsRequest(), data);
        }

        public static ListPermissionRequestsRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListPermissionRequestsRequest().mergeFrom(input);
        }
    }

    public static final class ListPermissionRequestsResponse extends ExtendableMessageNano<ListPermissionRequestsResponse> {
        private static volatile ListPermissionRequestsResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public long maxVersion;
        public String nextPageToken;
        public PermissionRequest[] permissionRequests;

        public static ListPermissionRequestsResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListPermissionRequestsResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListPermissionRequestsResponse() {
            clear();
        }

        public ListPermissionRequestsResponse clear() {
            this.apiHeader = null;
            this.permissionRequests = PermissionRequest.emptyArray();
            this.nextPageToken = BuildConfig.VERSION_NAME;
            this.maxVersion = 0;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListPermissionRequestsResponse)) {
                return false;
            }
            ListPermissionRequestsResponse other = (ListPermissionRequestsResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (!InternalNano.equals(this.permissionRequests, other.permissionRequests)) {
                return false;
            }
            if (this.nextPageToken == null) {
                if (other.nextPageToken != null) {
                    return false;
                }
            } else if (!this.nextPageToken.equals(other.nextPageToken)) {
                return false;
            }
            if (this.maxVersion != other.maxVersion) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + InternalNano.hashCode(this.permissionRequests)) * 31) + (this.nextPageToken == null ? 0 : this.nextPageToken.hashCode())) * 31) + ((int) (this.maxVersion ^ (this.maxVersion >>> 32)))) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.permissionRequests != null && this.permissionRequests.length > 0) {
                for (PermissionRequest element : this.permissionRequests) {
                    if (element != null) {
                        output.writeMessage(1, element);
                    }
                }
            }
            if (!this.nextPageToken.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.nextPageToken);
            }
            if (this.maxVersion != 0) {
                output.writeInt64(3, this.maxVersion);
            }
            if (this.apiHeader != null) {
                output.writeMessage(4, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.permissionRequests != null && this.permissionRequests.length > 0) {
                for (PermissionRequest element : this.permissionRequests) {
                    if (element != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(1, element);
                    }
                }
            }
            if (!this.nextPageToken.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.nextPageToken);
            }
            if (this.maxVersion != 0) {
                size += CodedOutputByteBufferNano.computeInt64Size(3, this.maxVersion);
            }
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(4, this.apiHeader);
            }
            return size;
        }

        public ListPermissionRequestsResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        int i;
                        int arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 10);
                        if (this.permissionRequests == null) {
                            i = 0;
                        } else {
                            i = this.permissionRequests.length;
                        }
                        PermissionRequest[] newArray = new PermissionRequest[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.permissionRequests, 0, newArray, 0, i);
                        }
                        while (i < newArray.length - 1) {
                            newArray[i] = new PermissionRequest();
                            input.readMessage(newArray[i]);
                            input.readTag();
                            i++;
                        }
                        newArray[i] = new PermissionRequest();
                        input.readMessage(newArray[i]);
                        this.permissionRequests = newArray;
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.nextPageToken = input.readString();
                        continue;
                    case LogSource.LB_C /*24*/:
                        this.maxVersion = input.readInt64();
                        continue;
                    case LogSource.NOVA /*34*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListPermissionRequestsResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListPermissionRequestsResponse) MessageNano.mergeFrom(new ListPermissionRequestsResponse(), data);
        }

        public static ListPermissionRequestsResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListPermissionRequestsResponse().mergeFrom(input);
        }
    }

    public static final class ListRemoteInstructionsRequest extends ExtendableMessageNano<ListRemoteInstructionsRequest> {
        private static volatile ListRemoteInstructionsRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String deviceId;
        public String personId;

        public static ListRemoteInstructionsRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListRemoteInstructionsRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListRemoteInstructionsRequest() {
            clear();
        }

        public ListRemoteInstructionsRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.deviceId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListRemoteInstructionsRequest)) {
                return false;
            }
            ListRemoteInstructionsRequest other = (ListRemoteInstructionsRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.deviceId == null) {
                if (other.deviceId != null) {
                    return false;
                }
            } else if (!this.deviceId.equals(other.deviceId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.deviceId == null ? 0 : this.deviceId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (!this.deviceId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.deviceId);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (this.deviceId.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(3, this.deviceId);
        }

        public ListRemoteInstructionsRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.deviceId = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListRemoteInstructionsRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListRemoteInstructionsRequest) MessageNano.mergeFrom(new ListRemoteInstructionsRequest(), data);
        }

        public static ListRemoteInstructionsRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListRemoteInstructionsRequest().mergeFrom(input);
        }
    }

    public static final class ListRemoteInstructionsResponse extends ExtendableMessageNano<ListRemoteInstructionsResponse> {
        private static volatile ListRemoteInstructionsResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public RemoteInstruction[] instructions;

        public static ListRemoteInstructionsResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListRemoteInstructionsResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListRemoteInstructionsResponse() {
            clear();
        }

        public ListRemoteInstructionsResponse clear() {
            this.apiHeader = null;
            this.instructions = RemoteInstruction.emptyArray();
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListRemoteInstructionsResponse)) {
                return false;
            }
            ListRemoteInstructionsResponse other = (ListRemoteInstructionsResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (!InternalNano.equals(this.instructions, other.instructions)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + InternalNano.hashCode(this.instructions)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.instructions != null && this.instructions.length > 0) {
                for (RemoteInstruction element : this.instructions) {
                    if (element != null) {
                        output.writeMessage(2, element);
                    }
                }
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.instructions != null && this.instructions.length > 0) {
                for (RemoteInstruction element : this.instructions) {
                    if (element != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(2, element);
                    }
                }
            }
            return size;
        }

        public ListRemoteInstructionsResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        int i;
                        int arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 18);
                        if (this.instructions == null) {
                            i = 0;
                        } else {
                            i = this.instructions.length;
                        }
                        RemoteInstruction[] newArray = new RemoteInstruction[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.instructions, 0, newArray, 0, i);
                        }
                        while (i < newArray.length - 1) {
                            newArray[i] = new RemoteInstruction();
                            input.readMessage(newArray[i]);
                            input.readTag();
                            i++;
                        }
                        newArray[i] = new RemoteInstruction();
                        input.readMessage(newArray[i]);
                        this.instructions = newArray;
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListRemoteInstructionsResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListRemoteInstructionsResponse) MessageNano.mergeFrom(new ListRemoteInstructionsResponse(), data);
        }

        public static ListRemoteInstructionsResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListRemoteInstructionsResponse().mergeFrom(input);
        }
    }

    public static final class ListRestrictionsByGroupsRequest extends ExtendableMessageNano<ListRestrictionsByGroupsRequest> {
        private static volatile ListRestrictionsByGroupsRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public boolean deprecatedTag5;
        public RestrictionFilter filter;
        public String filterToken;
        public String pageToken;
        public String personId;
        public int view;

        public static ListRestrictionsByGroupsRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListRestrictionsByGroupsRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListRestrictionsByGroupsRequest() {
            clear();
        }

        public ListRestrictionsByGroupsRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.view = 0;
            this.filterToken = BuildConfig.VERSION_NAME;
            this.filter = null;
            this.pageToken = BuildConfig.VERSION_NAME;
            this.deprecatedTag5 = false;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListRestrictionsByGroupsRequest)) {
                return false;
            }
            ListRestrictionsByGroupsRequest other = (ListRestrictionsByGroupsRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.view != other.view) {
                return false;
            }
            if (this.filterToken == null) {
                if (other.filterToken != null) {
                    return false;
                }
            } else if (!this.filterToken.equals(other.filterToken)) {
                return false;
            }
            if (this.filter == null) {
                if (other.filter != null) {
                    return false;
                }
            } else if (!this.filter.equals(other.filter)) {
                return false;
            }
            if (this.pageToken == null) {
                if (other.pageToken != null) {
                    return false;
                }
            } else if (!this.pageToken.equals(other.pageToken)) {
                return false;
            }
            if (this.deprecatedTag5 != other.deprecatedTag5) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + this.view) * 31) + (this.filterToken == null ? 0 : this.filterToken.hashCode())) * 31) + (this.filter == null ? 0 : this.filter.hashCode())) * 31) + (this.pageToken == null ? 0 : this.pageToken.hashCode())) * 31) + (this.deprecatedTag5 ? 1231 : 1237)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (this.view != 0) {
                output.writeInt32(3, this.view);
            }
            if (!this.filterToken.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(4, this.filterToken);
            }
            if (this.deprecatedTag5) {
                output.writeBool(5, this.deprecatedTag5);
            }
            if (!this.pageToken.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(6, this.pageToken);
            }
            if (this.filter != null) {
                output.writeMessage(7, this.filter);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (this.view != 0) {
                size += CodedOutputByteBufferNano.computeInt32Size(3, this.view);
            }
            if (!this.filterToken.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(4, this.filterToken);
            }
            if (this.deprecatedTag5) {
                size += CodedOutputByteBufferNano.computeBoolSize(5, this.deprecatedTag5);
            }
            if (!this.pageToken.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(6, this.pageToken);
            }
            if (this.filter != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(7, this.filter);
            }
            return size;
        }

        public ListRestrictionsByGroupsRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.LB_C /*24*/:
                        int value = input.readInt32();
                        switch (value) {
                            case Action.UNKNOWN /*0*/:
                            case TimeSelection.Type.TEMPORARY /*1*/:
                                this.view = value;
                                break;
                            default:
                                continue;
                        }
                    case LogSource.NOVA /*34*/:
                        this.filterToken = input.readString();
                        continue;
                    case LogSource.COPRESENCE /*40*/:
                        this.deprecatedTag5 = input.readBool();
                        continue;
                    case LogSource.HANGOUT_LOG_REQUEST /*50*/:
                        this.pageToken = input.readString();
                        continue;
                    case LogSource.SLIDES /*58*/:
                        if (this.filter == null) {
                            this.filter = new RestrictionFilter();
                        }
                        input.readMessage(this.filter);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListRestrictionsByGroupsRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListRestrictionsByGroupsRequest) MessageNano.mergeFrom(new ListRestrictionsByGroupsRequest(), data);
        }

        public static ListRestrictionsByGroupsRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListRestrictionsByGroupsRequest().mergeFrom(input);
        }
    }

    public static final class ListRestrictionsByGroupsResponse extends ExtendableMessageNano<ListRestrictionsByGroupsResponse> {
        private static volatile ListRestrictionsByGroupsResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public String nextPageToken;
        public RestrictionGroup[] restrictionGroups;

        public static ListRestrictionsByGroupsResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListRestrictionsByGroupsResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListRestrictionsByGroupsResponse() {
            clear();
        }

        public ListRestrictionsByGroupsResponse clear() {
            this.apiHeader = null;
            this.restrictionGroups = RestrictionGroup.emptyArray();
            this.nextPageToken = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListRestrictionsByGroupsResponse)) {
                return false;
            }
            ListRestrictionsByGroupsResponse other = (ListRestrictionsByGroupsResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (!InternalNano.equals(this.restrictionGroups, other.restrictionGroups)) {
                return false;
            }
            if (this.nextPageToken == null) {
                if (other.nextPageToken != null) {
                    return false;
                }
            } else if (!this.nextPageToken.equals(other.nextPageToken)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + InternalNano.hashCode(this.restrictionGroups)) * 31) + (this.nextPageToken == null ? 0 : this.nextPageToken.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.restrictionGroups != null && this.restrictionGroups.length > 0) {
                for (RestrictionGroup element : this.restrictionGroups) {
                    if (element != null) {
                        output.writeMessage(2, element);
                    }
                }
            }
            if (!this.nextPageToken.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.nextPageToken);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.restrictionGroups != null && this.restrictionGroups.length > 0) {
                for (RestrictionGroup element : this.restrictionGroups) {
                    if (element != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(2, element);
                    }
                }
            }
            if (this.nextPageToken.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(3, this.nextPageToken);
        }

        public ListRestrictionsByGroupsResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        int i;
                        int arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 18);
                        if (this.restrictionGroups == null) {
                            i = 0;
                        } else {
                            i = this.restrictionGroups.length;
                        }
                        RestrictionGroup[] newArray = new RestrictionGroup[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.restrictionGroups, 0, newArray, 0, i);
                        }
                        while (i < newArray.length - 1) {
                            newArray[i] = new RestrictionGroup();
                            input.readMessage(newArray[i]);
                            input.readTag();
                            i++;
                        }
                        newArray[i] = new RestrictionGroup();
                        input.readMessage(newArray[i]);
                        this.restrictionGroups = newArray;
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.nextPageToken = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListRestrictionsByGroupsResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListRestrictionsByGroupsResponse) MessageNano.mergeFrom(new ListRestrictionsByGroupsResponse(), data);
        }

        public static ListRestrictionsByGroupsResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListRestrictionsByGroupsResponse().mergeFrom(input);
        }
    }

    public static final class ListTimeoutsRequest extends ExtendableMessageNano<ListTimeoutsRequest> {
        private static volatile ListTimeoutsRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public boolean includeDisabled;
        public String personId;

        public static ListTimeoutsRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListTimeoutsRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListTimeoutsRequest() {
            clear();
        }

        public ListTimeoutsRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.includeDisabled = false;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListTimeoutsRequest)) {
                return false;
            }
            ListTimeoutsRequest other = (ListTimeoutsRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.includeDisabled != other.includeDisabled) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.includeDisabled ? 1231 : 1237)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (this.includeDisabled) {
                output.writeBool(3, this.includeDisabled);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (this.includeDisabled) {
                return size + CodedOutputByteBufferNano.computeBoolSize(3, this.includeDisabled);
            }
            return size;
        }

        public ListTimeoutsRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.LB_C /*24*/:
                        this.includeDisabled = input.readBool();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListTimeoutsRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListTimeoutsRequest) MessageNano.mergeFrom(new ListTimeoutsRequest(), data);
        }

        public static ListTimeoutsRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListTimeoutsRequest().mergeFrom(input);
        }
    }

    public static final class ListTimeoutsResponse extends ExtendableMessageNano<ListTimeoutsResponse> {
        private static volatile ListTimeoutsResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public long serverTimestampMillis;
        public int[] timeoutStates;
        public Timeout[] timeouts;

        public static ListTimeoutsResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ListTimeoutsResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ListTimeoutsResponse() {
            clear();
        }

        public ListTimeoutsResponse clear() {
            this.apiHeader = null;
            this.timeouts = Timeout.emptyArray();
            this.serverTimestampMillis = 0;
            this.timeoutStates = WireFormatNano.EMPTY_INT_ARRAY;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ListTimeoutsResponse)) {
                return false;
            }
            ListTimeoutsResponse other = (ListTimeoutsResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (!InternalNano.equals(this.timeouts, other.timeouts) || this.serverTimestampMillis != other.serverTimestampMillis || !InternalNano.equals(this.timeoutStates, other.timeoutStates)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + InternalNano.hashCode(this.timeouts)) * 31) + ((int) (this.serverTimestampMillis ^ (this.serverTimestampMillis >>> 32)))) * 31) + InternalNano.hashCode(this.timeoutStates)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.timeouts != null && this.timeouts.length > 0) {
                for (Timeout element : this.timeouts) {
                    if (element != null) {
                        output.writeMessage(2, element);
                    }
                }
            }
            if (this.serverTimestampMillis != 0) {
                output.writeInt64(3, this.serverTimestampMillis);
            }
            if (this.timeoutStates != null && this.timeoutStates.length > 0) {
                for (int writeInt32 : this.timeoutStates) {
                    output.writeInt32(4, writeInt32);
                }
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.timeouts != null && this.timeouts.length > 0) {
                for (Timeout element : this.timeouts) {
                    if (element != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(2, element);
                    }
                }
            }
            if (this.serverTimestampMillis != 0) {
                size += CodedOutputByteBufferNano.computeInt64Size(3, this.serverTimestampMillis);
            }
            if (this.timeoutStates == null || this.timeoutStates.length <= 0) {
                return size;
            }
            int dataSize = 0;
            for (int element2 : this.timeoutStates) {
                dataSize += CodedOutputByteBufferNano.computeInt32SizeNoTag(element2);
            }
            return (size + dataSize) + (this.timeoutStates.length * 1);
        }

        public ListTimeoutsResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                int arrayLength;
                int i;
                int value;
                int[] newArray;
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 18);
                        if (this.timeouts == null) {
                            i = 0;
                        } else {
                            i = this.timeouts.length;
                        }
                        Timeout[] newArray2 = new Timeout[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.timeouts, 0, newArray2, 0, i);
                        }
                        while (true) {
                            if (i < newArray2.length - 1) {
                                newArray2[i] = new Timeout();
                                input.readMessage(newArray2[i]);
                                input.readTag();
                                i++;
                            } else {
                                newArray2[i] = new Timeout();
                                input.readMessage(newArray2[i]);
                                this.timeouts = newArray2;
                                continue;
                            }
                        }
                    case LogSource.LB_C /*24*/:
                        this.serverTimestampMillis = input.readInt64();
                        continue;
                    case LogSource.SOCIAL /*32*/:
                        int length = WireFormatNano.getRepeatedFieldArrayLength(input, 32);
                        int[] validValues = new int[length];
                        i = 0;
                        int validCount = 0;
                        while (i < length) {
                            int validCount2;
                            if (i != 0) {
                                input.readTag();
                            }
                            value = input.readInt32();
                            switch (value) {
                                case Action.UNKNOWN /*0*/:
                                case TimeSelection.Type.TEMPORARY /*1*/:
                                case TimeSelection.Type.INDEFINITELY /*2*/:
                                case TimeSelection.Type.CUSTOM /*3*/:
                                    validCount2 = validCount + 1;
                                    validValues[validCount] = value;
                                    break;
                                default:
                                    validCount2 = validCount;
                                    break;
                            }
                            i++;
                            validCount = validCount2;
                        }
                        if (validCount != 0) {
                            if (this.timeoutStates == null) {
                                i = 0;
                            } else {
                                i = this.timeoutStates.length;
                            }
                            if (i == 0) {
                                int length2 = validValues.length;
                                if (validCount == r0) {
                                    this.timeoutStates = validValues;
                                    break;
                                }
                            }
                            newArray = new int[(i + validCount)];
                            if (i != 0) {
                                System.arraycopy(this.timeoutStates, 0, newArray, 0, i);
                            }
                            System.arraycopy(validValues, 0, newArray, i, validCount);
                            this.timeoutStates = newArray;
                            break;
                        }
                        continue;
                    case LogSource.NOVA /*34*/:
                        int limit = input.pushLimit(input.readRawVarint32());
                        arrayLength = 0;
                        int startPos = input.getPosition();
                        while (input.getBytesUntilLimit() > 0) {
                            switch (input.readInt32()) {
                                case Action.UNKNOWN /*0*/:
                                case TimeSelection.Type.TEMPORARY /*1*/:
                                case TimeSelection.Type.INDEFINITELY /*2*/:
                                case TimeSelection.Type.CUSTOM /*3*/:
                                    arrayLength++;
                                    break;
                                default:
                                    break;
                            }
                        }
                        if (arrayLength != 0) {
                            input.rewindToPosition(startPos);
                            if (this.timeoutStates == null) {
                                i = 0;
                            } else {
                                i = this.timeoutStates.length;
                            }
                            newArray = new int[(i + arrayLength)];
                            if (i != 0) {
                                System.arraycopy(this.timeoutStates, 0, newArray, 0, i);
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                value = input.readInt32();
                                switch (value) {
                                    case Action.UNKNOWN /*0*/:
                                    case TimeSelection.Type.TEMPORARY /*1*/:
                                    case TimeSelection.Type.INDEFINITELY /*2*/:
                                    case TimeSelection.Type.CUSTOM /*3*/:
                                        int i2 = i + 1;
                                        newArray[i] = value;
                                        i = i2;
                                        break;
                                    default:
                                        break;
                                }
                            }
                            this.timeoutStates = newArray;
                        }
                        input.popLimit(limit);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ListTimeoutsResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ListTimeoutsResponse) MessageNano.mergeFrom(new ListTimeoutsResponse(), data);
        }

        public static ListTimeoutsResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ListTimeoutsResponse().mergeFrom(input);
        }
    }

    public static final class ManagedDevice extends ExtendableMessageNano<ManagedDevice> {
        private static volatile ManagedDevice[] _emptyArray;
        public boolean deprecatedTag1;
        public int managedState;

        public interface ManagedState {
            public static final int MANAGED = 2;
            public static final int MANAGED_STATE_UNKNOWN = 0;
            public static final int UNMANAGED = 1;
        }

        public static ManagedDevice[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ManagedDevice[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ManagedDevice() {
            clear();
        }

        public ManagedDevice clear() {
            this.deprecatedTag1 = false;
            this.managedState = 0;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ManagedDevice)) {
                return false;
            }
            ManagedDevice other = (ManagedDevice) o;
            if (this.deprecatedTag1 != other.deprecatedTag1 || this.managedState != other.managedState) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.deprecatedTag1 ? 1231 : 1237)) * 31) + this.managedState) * 31;
            int hashCode2 = (this.unknownFieldData == null || this.unknownFieldData.isEmpty()) ? 0 : this.unknownFieldData.hashCode();
            return hashCode + hashCode2;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.deprecatedTag1) {
                output.writeBool(1, this.deprecatedTag1);
            }
            if (this.managedState != 0) {
                output.writeInt32(2, this.managedState);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.deprecatedTag1) {
                size += CodedOutputByteBufferNano.computeBoolSize(1, this.deprecatedTag1);
            }
            if (this.managedState != 0) {
                return size + CodedOutputByteBufferNano.computeInt32Size(2, this.managedState);
            }
            return size;
        }

        public ManagedDevice mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_GET_LINK /*8*/:
                        this.deprecatedTag1 = input.readBool();
                        continue;
                    case LogSource.GMS_CORE_PEOPLE /*16*/:
                        int value = input.readInt32();
                        switch (value) {
                            case Action.UNKNOWN /*0*/:
                            case TimeSelection.Type.TEMPORARY /*1*/:
                            case TimeSelection.Type.INDEFINITELY /*2*/:
                                this.managedState = value;
                                break;
                            default:
                                continue;
                        }
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ManagedDevice parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ManagedDevice) MessageNano.mergeFrom(new ManagedDevice(), data);
        }

        public static ManagedDevice parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ManagedDevice().mergeFrom(input);
        }
    }

    public static final class OptInTestChannelRequest extends ExtendableMessageNano<OptInTestChannelRequest> {
        private static volatile OptInTestChannelRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public int app;
        public String personId;

        public interface TestChannelApp {
            public static final int KID_SETUP = 1;
            public static final int PARENT_CENTER = 2;
            public static final int UNSPECIFIED = 0;
        }

        public static OptInTestChannelRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new OptInTestChannelRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public OptInTestChannelRequest() {
            clear();
        }

        public OptInTestChannelRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.app = 0;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof OptInTestChannelRequest)) {
                return false;
            }
            OptInTestChannelRequest other = (OptInTestChannelRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.app != other.app) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + this.app) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (this.app != 0) {
                output.writeInt32(3, this.app);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (this.app != 0) {
                return size + CodedOutputByteBufferNano.computeInt32Size(3, this.app);
            }
            return size;
        }

        public OptInTestChannelRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.LB_C /*24*/:
                        int value = input.readInt32();
                        switch (value) {
                            case Action.UNKNOWN /*0*/:
                            case TimeSelection.Type.TEMPORARY /*1*/:
                            case TimeSelection.Type.INDEFINITELY /*2*/:
                                this.app = value;
                                break;
                            default:
                                continue;
                        }
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static OptInTestChannelRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (OptInTestChannelRequest) MessageNano.mergeFrom(new OptInTestChannelRequest(), data);
        }

        public static OptInTestChannelRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new OptInTestChannelRequest().mergeFrom(input);
        }
    }

    public static final class OptInTestChannelResponse extends ExtendableMessageNano<OptInTestChannelResponse> {
        private static volatile OptInTestChannelResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;

        public static OptInTestChannelResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new OptInTestChannelResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public OptInTestChannelResponse() {
            clear();
        }

        public OptInTestChannelResponse clear() {
            this.apiHeader = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof OptInTestChannelResponse)) {
                return false;
            }
            OptInTestChannelResponse other = (OptInTestChannelResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            return size;
        }

        public OptInTestChannelResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static OptInTestChannelResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (OptInTestChannelResponse) MessageNano.mergeFrom(new OptInTestChannelResponse(), data);
        }

        public static OptInTestChannelResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new OptInTestChannelResponse().mergeFrom(input);
        }
    }

    public static final class ParentAppConfig extends ExtendableMessageNano<ParentAppConfig> {
        private static volatile ParentAppConfig[] _emptyArray;
        public int familyMembership;
        public MobileExperiment[] mobileExperiments;
        public int role;
        public AppUpgradeStatus upgradeStatus;

        public interface FamilyMembership {
            public static final int HAS_FAMILY = 2;
            public static final int NO_FAMILY = 1;
            public static final int UNKNOWN_FAMILY_MEMBERSHIP = 0;
        }

        public static final class MobileExperiment extends ExtendableMessageNano<MobileExperiment> {
            private static volatile MobileExperiment[] _emptyArray;
            public String displayName;
            public String id;

            public static MobileExperiment[] emptyArray() {
                if (_emptyArray == null) {
                    synchronized (InternalNano.LAZY_INIT_LOCK) {
                        if (_emptyArray == null) {
                            _emptyArray = new MobileExperiment[0];
                        }
                    }
                }
                return _emptyArray;
            }

            public MobileExperiment() {
                clear();
            }

            public MobileExperiment clear() {
                this.id = BuildConfig.VERSION_NAME;
                this.displayName = BuildConfig.VERSION_NAME;
                this.unknownFieldData = null;
                this.cachedSize = -1;
                return this;
            }

            public boolean equals(Object o) {
                if (o == this) {
                    return true;
                }
                if (!(o instanceof MobileExperiment)) {
                    return false;
                }
                MobileExperiment other = (MobileExperiment) o;
                if (this.id == null) {
                    if (other.id != null) {
                        return false;
                    }
                } else if (!this.id.equals(other.id)) {
                    return false;
                }
                if (this.displayName == null) {
                    if (other.displayName != null) {
                        return false;
                    }
                } else if (!this.displayName.equals(other.displayName)) {
                    return false;
                }
                if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                    return this.unknownFieldData.equals(other.unknownFieldData);
                }
                if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                    return true;
                }
                return false;
            }

            public int hashCode() {
                int i = 0;
                int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.id == null ? 0 : this.id.hashCode())) * 31) + (this.displayName == null ? 0 : this.displayName.hashCode())) * 31;
                if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                    i = this.unknownFieldData.hashCode();
                }
                return hashCode + i;
            }

            public void writeTo(CodedOutputByteBufferNano output) throws IOException {
                if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                    output.writeString(1, this.id);
                }
                if (!this.displayName.equals(BuildConfig.VERSION_NAME)) {
                    output.writeString(2, this.displayName);
                }
                super.writeTo(output);
            }

            protected int computeSerializedSize() {
                int size = super.computeSerializedSize();
                if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                    size += CodedOutputByteBufferNano.computeStringSize(1, this.id);
                }
                if (this.displayName.equals(BuildConfig.VERSION_NAME)) {
                    return size;
                }
                return size + CodedOutputByteBufferNano.computeStringSize(2, this.displayName);
            }

            public MobileExperiment mergeFrom(CodedInputByteBufferNano input) throws IOException {
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case Action.UNKNOWN /*0*/:
                            break;
                        case Type.TAP_ABOUT /*10*/:
                            this.id = input.readString();
                            continue;
                        case LogSource.GOOGLE_ANALYTICS /*18*/:
                            this.displayName = input.readString();
                            continue;
                        default:
                            if (!storeUnknownField(input, tag)) {
                                break;
                            }
                            continue;
                    }
                    return this;
                }
            }

            public static MobileExperiment parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
                return (MobileExperiment) MessageNano.mergeFrom(new MobileExperiment(), data);
            }

            public static MobileExperiment parseFrom(CodedInputByteBufferNano input) throws IOException {
                return new MobileExperiment().mergeFrom(input);
            }
        }

        public static ParentAppConfig[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ParentAppConfig[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ParentAppConfig() {
            clear();
        }

        public ParentAppConfig clear() {
            this.mobileExperiments = MobileExperiment.emptyArray();
            this.familyMembership = 0;
            this.role = 0;
            this.upgradeStatus = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ParentAppConfig)) {
                return false;
            }
            ParentAppConfig other = (ParentAppConfig) o;
            if (!InternalNano.equals(this.mobileExperiments, other.mobileExperiments) || this.familyMembership != other.familyMembership || this.role != other.role) {
                return false;
            }
            if (this.upgradeStatus == null) {
                if (other.upgradeStatus != null) {
                    return false;
                }
            } else if (!this.upgradeStatus.equals(other.upgradeStatus)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + InternalNano.hashCode(this.mobileExperiments)) * 31) + this.familyMembership) * 31) + this.role) * 31) + (this.upgradeStatus == null ? 0 : this.upgradeStatus.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.mobileExperiments != null && this.mobileExperiments.length > 0) {
                for (MobileExperiment element : this.mobileExperiments) {
                    if (element != null) {
                        output.writeMessage(1, element);
                    }
                }
            }
            if (this.familyMembership != 0) {
                output.writeInt32(2, this.familyMembership);
            }
            if (this.role != 0) {
                output.writeInt32(3, this.role);
            }
            if (this.upgradeStatus != null) {
                output.writeMessage(4, this.upgradeStatus);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.mobileExperiments != null && this.mobileExperiments.length > 0) {
                for (MobileExperiment element : this.mobileExperiments) {
                    if (element != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(1, element);
                    }
                }
            }
            if (this.familyMembership != 0) {
                size += CodedOutputByteBufferNano.computeInt32Size(2, this.familyMembership);
            }
            if (this.role != 0) {
                size += CodedOutputByteBufferNano.computeInt32Size(3, this.role);
            }
            if (this.upgradeStatus != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(4, this.upgradeStatus);
            }
            return size;
        }

        public ParentAppConfig mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                int value;
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        int i;
                        int arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 10);
                        if (this.mobileExperiments == null) {
                            i = 0;
                        } else {
                            i = this.mobileExperiments.length;
                        }
                        MobileExperiment[] newArray = new MobileExperiment[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.mobileExperiments, 0, newArray, 0, i);
                        }
                        while (i < newArray.length - 1) {
                            newArray[i] = new MobileExperiment();
                            input.readMessage(newArray[i]);
                            input.readTag();
                            i++;
                        }
                        newArray[i] = new MobileExperiment();
                        input.readMessage(newArray[i]);
                        this.mobileExperiments = newArray;
                        continue;
                    case LogSource.GMS_CORE_PEOPLE /*16*/:
                        value = input.readInt32();
                        switch (value) {
                            case Action.UNKNOWN /*0*/:
                            case TimeSelection.Type.TEMPORARY /*1*/:
                            case TimeSelection.Type.INDEFINITELY /*2*/:
                                this.familyMembership = value;
                                break;
                            default:
                                continue;
                        }
                    case LogSource.LB_C /*24*/:
                        value = input.readInt32();
                        switch (value) {
                            case Action.UNKNOWN /*0*/:
                            case TimeSelection.Type.TEMPORARY /*1*/:
                            case TimeSelection.Type.INDEFINITELY /*2*/:
                            case TimeSelection.Type.CUSTOM /*3*/:
                            case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                this.role = value;
                                break;
                            default:
                                continue;
                        }
                    case LogSource.NOVA /*34*/:
                        if (this.upgradeStatus == null) {
                            this.upgradeStatus = new AppUpgradeStatus();
                        }
                        input.readMessage(this.upgradeStatus);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ParentAppConfig parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ParentAppConfig) MessageNano.mergeFrom(new ParentAppConfig(), data);
        }

        public static ParentAppConfig parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ParentAppConfig().mergeFrom(input);
        }
    }

    public static final class PermissionRequest extends ExtendableMessageNano<PermissionRequest> {
        private static volatile PermissionRequest[] _emptyArray;
        public PermissionRequestAdditionalData additionalData;
        public String appId;
        public String childId;
        public ActionItem creationInfo;
        public int eventType;
        public String id;
        public ActionItem lastUpdate;
        public String objectRef;
        public int state;

        public static PermissionRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new PermissionRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public PermissionRequest() {
            clear();
        }

        public PermissionRequest clear() {
            this.id = BuildConfig.VERSION_NAME;
            this.childId = BuildConfig.VERSION_NAME;
            this.eventType = 0;
            this.appId = BuildConfig.VERSION_NAME;
            this.objectRef = BuildConfig.VERSION_NAME;
            this.state = 0;
            this.creationInfo = null;
            this.lastUpdate = null;
            this.additionalData = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof PermissionRequest)) {
                return false;
            }
            PermissionRequest other = (PermissionRequest) o;
            if (this.id == null) {
                if (other.id != null) {
                    return false;
                }
            } else if (!this.id.equals(other.id)) {
                return false;
            }
            if (this.childId == null) {
                if (other.childId != null) {
                    return false;
                }
            } else if (!this.childId.equals(other.childId)) {
                return false;
            }
            if (this.eventType != other.eventType) {
                return false;
            }
            if (this.appId == null) {
                if (other.appId != null) {
                    return false;
                }
            } else if (!this.appId.equals(other.appId)) {
                return false;
            }
            if (this.objectRef == null) {
                if (other.objectRef != null) {
                    return false;
                }
            } else if (!this.objectRef.equals(other.objectRef)) {
                return false;
            }
            if (this.state != other.state) {
                return false;
            }
            if (this.creationInfo == null) {
                if (other.creationInfo != null) {
                    return false;
                }
            } else if (!this.creationInfo.equals(other.creationInfo)) {
                return false;
            }
            if (this.lastUpdate == null) {
                if (other.lastUpdate != null) {
                    return false;
                }
            } else if (!this.lastUpdate.equals(other.lastUpdate)) {
                return false;
            }
            if (this.additionalData == null) {
                if (other.additionalData != null) {
                    return false;
                }
            } else if (!this.additionalData.equals(other.additionalData)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((((((((((((getClass().getName().hashCode() + 527) * 31) + (this.id == null ? 0 : this.id.hashCode())) * 31) + (this.childId == null ? 0 : this.childId.hashCode())) * 31) + this.eventType) * 31) + (this.appId == null ? 0 : this.appId.hashCode())) * 31) + (this.objectRef == null ? 0 : this.objectRef.hashCode())) * 31) + this.state) * 31) + (this.creationInfo == null ? 0 : this.creationInfo.hashCode())) * 31) + (this.lastUpdate == null ? 0 : this.lastUpdate.hashCode())) * 31) + (this.additionalData == null ? 0 : this.additionalData.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(1, this.id);
            }
            if (!this.childId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.childId);
            }
            if (!this.objectRef.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(4, this.objectRef);
            }
            if (this.state != 0) {
                output.writeInt32(5, this.state);
            }
            if (this.creationInfo != null) {
                output.writeMessage(6, this.creationInfo);
            }
            if (this.lastUpdate != null) {
                output.writeMessage(7, this.lastUpdate);
            }
            if (this.additionalData != null) {
                output.writeMessage(8, this.additionalData);
            }
            if (!this.appId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(9, this.appId);
            }
            if (this.eventType != 0) {
                output.writeInt32(10, this.eventType);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(1, this.id);
            }
            if (!this.childId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.childId);
            }
            if (!this.objectRef.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(4, this.objectRef);
            }
            if (this.state != 0) {
                size += CodedOutputByteBufferNano.computeInt32Size(5, this.state);
            }
            if (this.creationInfo != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(6, this.creationInfo);
            }
            if (this.lastUpdate != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(7, this.lastUpdate);
            }
            if (this.additionalData != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(8, this.additionalData);
            }
            if (!this.appId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(9, this.appId);
            }
            if (this.eventType != 0) {
                return size + CodedOutputByteBufferNano.computeInt32Size(10, this.eventType);
            }
            return size;
        }

        public PermissionRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                int value;
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        this.id = input.readString();
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.childId = input.readString();
                        continue;
                    case LogSource.NOVA /*34*/:
                        this.objectRef = input.readString();
                        continue;
                    case LogSource.COPRESENCE /*40*/:
                        value = input.readInt32();
                        switch (value) {
                            case Action.UNKNOWN /*0*/:
                            case TimeSelection.Type.TEMPORARY /*1*/:
                            case TimeSelection.Type.INDEFINITELY /*2*/:
                            case TimeSelection.Type.CUSTOM /*3*/:
                            case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                this.state = value;
                                break;
                            default:
                                continue;
                        }
                    case LogSource.HANGOUT_LOG_REQUEST /*50*/:
                        if (this.creationInfo == null) {
                            this.creationInfo = new ActionItem();
                        }
                        input.readMessage(this.creationInfo);
                        continue;
                    case LogSource.SLIDES /*58*/:
                        if (this.lastUpdate == null) {
                            this.lastUpdate = new ActionItem();
                        }
                        input.readMessage(this.lastUpdate);
                        continue;
                    case LogSource.WIFI_ASSISTANT /*66*/:
                        if (this.additionalData == null) {
                            this.additionalData = new PermissionRequestAdditionalData();
                        }
                        input.readMessage(this.additionalData);
                        continue;
                    case LogSource.MOVIES /*74*/:
                        this.appId = input.readString();
                        continue;
                    case LogSource.CRONET_ANDROID_GSA /*80*/:
                        value = input.readInt32();
                        switch (value) {
                            case Action.UNKNOWN /*0*/:
                            case TimeSelection.Type.INDEFINITELY /*2*/:
                            case OvenFreshResult.NO_ACCOUNTS /*4*/:
                            case Type.ADD_NEW_SHARES /*5*/:
                            case Type.REMOVE_SHARE /*6*/:
                            case Type.RESET_TIME /*7*/:
                            case Type.CREATE_LINK /*9*/:
                            case Type.TAP_ABOUT /*10*/:
                            case Type.TAP_LEARN_MORE /*11*/:
                            case Type.SWITCH_ACCOUNT /*12*/:
                            case Type.DISPLAY_ERROR /*13*/:
                            case Type.LAUNCH_SETTINGS /*14*/:
                            case Type.OVEN_FRESH /*15*/:
                            case LogSource.GMS_CORE_PEOPLE /*16*/:
                            case LogSource.LE /*17*/:
                            case LogSource.GOOGLE_ANALYTICS /*18*/:
                            case LogSource.LB_D /*19*/:
                            case LogSource.ANDROID_GSA /*20*/:
                            case LogSource.LB_T /*21*/:
                            case LogSource.PERSONAL_LOGGER /*22*/:
                            case LogSource.GMS_CORE_WALLET_MERCHANT_ERROR /*23*/:
                            case LogSource.LB_C /*24*/:
                            case LogSource.ANDROID_AUTH /*25*/:
                            case LogSource.ANDROID_CAMERA /*26*/:
                            case LogSource.CW /*27*/:
                            case LogSource.GEL /*28*/:
                            case LogSource.DNA_PROBER /*29*/:
                            case LogSource.UDR /*30*/:
                                this.eventType = value;
                                break;
                            default:
                                continue;
                        }
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static PermissionRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (PermissionRequest) MessageNano.mergeFrom(new PermissionRequest(), data);
        }

        public static PermissionRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new PermissionRequest().mergeFrom(input);
        }
    }

    public static final class RecordConsentsRequest extends ExtendableMessageNano<RecordConsentsRequest> {
        private static volatile RecordConsentsRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public int[] consents;
        public String personId;

        public static RecordConsentsRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new RecordConsentsRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public RecordConsentsRequest() {
            clear();
        }

        public RecordConsentsRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.consents = WireFormatNano.EMPTY_INT_ARRAY;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof RecordConsentsRequest)) {
                return false;
            }
            RecordConsentsRequest other = (RecordConsentsRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (!InternalNano.equals(this.consents, other.consents)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + InternalNano.hashCode(this.consents)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (this.consents != null && this.consents.length > 0) {
                for (int writeInt32 : this.consents) {
                    output.writeInt32(3, writeInt32);
                }
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (this.consents == null || this.consents.length <= 0) {
                return size;
            }
            int dataSize = 0;
            for (int element : this.consents) {
                dataSize += CodedOutputByteBufferNano.computeInt32SizeNoTag(element);
            }
            return (size + dataSize) + (this.consents.length * 1);
        }

        public RecordConsentsRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                int i;
                int value;
                int[] newArray;
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.LB_C /*24*/:
                        int length = WireFormatNano.getRepeatedFieldArrayLength(input, 24);
                        int[] validValues = new int[length];
                        i = 0;
                        int validCount = 0;
                        while (i < length) {
                            int validCount2;
                            if (i != 0) {
                                input.readTag();
                            }
                            value = input.readInt32();
                            switch (value) {
                                case Action.UNKNOWN /*0*/:
                                case TimeSelection.Type.TEMPORARY /*1*/:
                                case TimeSelection.Type.INDEFINITELY /*2*/:
                                case TimeSelection.Type.CUSTOM /*3*/:
                                case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                case Type.ADD_NEW_SHARES /*5*/:
                                    validCount2 = validCount + 1;
                                    validValues[validCount] = value;
                                    break;
                                default:
                                    validCount2 = validCount;
                                    break;
                            }
                            i++;
                            validCount = validCount2;
                        }
                        if (validCount != 0) {
                            i = this.consents == null ? 0 : this.consents.length;
                            if (i != 0 || validCount != validValues.length) {
                                newArray = new int[(i + validCount)];
                                if (i != 0) {
                                    System.arraycopy(this.consents, 0, newArray, 0, i);
                                }
                                System.arraycopy(validValues, 0, newArray, i, validCount);
                                this.consents = newArray;
                                break;
                            }
                            this.consents = validValues;
                            break;
                        }
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        int limit = input.pushLimit(input.readRawVarint32());
                        int arrayLength = 0;
                        int startPos = input.getPosition();
                        while (input.getBytesUntilLimit() > 0) {
                            switch (input.readInt32()) {
                                case Action.UNKNOWN /*0*/:
                                case TimeSelection.Type.TEMPORARY /*1*/:
                                case TimeSelection.Type.INDEFINITELY /*2*/:
                                case TimeSelection.Type.CUSTOM /*3*/:
                                case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                case Type.ADD_NEW_SHARES /*5*/:
                                    arrayLength++;
                                    break;
                                default:
                                    break;
                            }
                        }
                        if (arrayLength != 0) {
                            input.rewindToPosition(startPos);
                            if (this.consents == null) {
                                i = 0;
                            } else {
                                i = this.consents.length;
                            }
                            newArray = new int[(i + arrayLength)];
                            if (i != 0) {
                                System.arraycopy(this.consents, 0, newArray, 0, i);
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                value = input.readInt32();
                                switch (value) {
                                    case Action.UNKNOWN /*0*/:
                                    case TimeSelection.Type.TEMPORARY /*1*/:
                                    case TimeSelection.Type.INDEFINITELY /*2*/:
                                    case TimeSelection.Type.CUSTOM /*3*/:
                                    case OvenFreshResult.NO_ACCOUNTS /*4*/:
                                    case Type.ADD_NEW_SHARES /*5*/:
                                        int i2 = i + 1;
                                        newArray[i] = value;
                                        i = i2;
                                        break;
                                    default:
                                        break;
                                }
                            }
                            this.consents = newArray;
                        }
                        input.popLimit(limit);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static RecordConsentsRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (RecordConsentsRequest) MessageNano.mergeFrom(new RecordConsentsRequest(), data);
        }

        public static RecordConsentsRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new RecordConsentsRequest().mergeFrom(input);
        }
    }

    public static final class RecordConsentsResponse extends ExtendableMessageNano<RecordConsentsResponse> {
        private static volatile RecordConsentsResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;

        public static RecordConsentsResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new RecordConsentsResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public RecordConsentsResponse() {
            clear();
        }

        public RecordConsentsResponse clear() {
            this.apiHeader = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof RecordConsentsResponse)) {
                return false;
            }
            RecordConsentsResponse other = (RecordConsentsResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            return size;
        }

        public RecordConsentsResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static RecordConsentsResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (RecordConsentsResponse) MessageNano.mergeFrom(new RecordConsentsResponse(), data);
        }

        public static RecordConsentsResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new RecordConsentsResponse().mergeFrom(input);
        }
    }

    public static final class RecreateInvitationRequest extends ExtendableMessageNano<RecreateInvitationRequest> {
        private static volatile RecreateInvitationRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String familyId;
        public String invitationId;
        public int notificationMode;

        public static RecreateInvitationRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new RecreateInvitationRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public RecreateInvitationRequest() {
            clear();
        }

        public RecreateInvitationRequest clear() {
            this.apiHeader = null;
            this.familyId = BuildConfig.VERSION_NAME;
            this.invitationId = BuildConfig.VERSION_NAME;
            this.notificationMode = 0;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof RecreateInvitationRequest)) {
                return false;
            }
            RecreateInvitationRequest other = (RecreateInvitationRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.familyId == null) {
                if (other.familyId != null) {
                    return false;
                }
            } else if (!this.familyId.equals(other.familyId)) {
                return false;
            }
            if (this.invitationId == null) {
                if (other.invitationId != null) {
                    return false;
                }
            } else if (!this.invitationId.equals(other.invitationId)) {
                return false;
            }
            if (this.notificationMode != other.notificationMode) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.familyId == null ? 0 : this.familyId.hashCode())) * 31) + (this.invitationId == null ? 0 : this.invitationId.hashCode())) * 31) + this.notificationMode) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.familyId);
            }
            if (!this.invitationId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.invitationId);
            }
            if (this.notificationMode != 0) {
                output.writeInt32(4, this.notificationMode);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.familyId);
            }
            if (!this.invitationId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(3, this.invitationId);
            }
            if (this.notificationMode != 0) {
                return size + CodedOutputByteBufferNano.computeInt32Size(4, this.notificationMode);
            }
            return size;
        }

        public RecreateInvitationRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.familyId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.invitationId = input.readString();
                        continue;
                    case LogSource.SOCIAL /*32*/:
                        int value = input.readInt32();
                        switch (value) {
                            case Action.UNKNOWN /*0*/:
                            case TimeSelection.Type.TEMPORARY /*1*/:
                            case TimeSelection.Type.INDEFINITELY /*2*/:
                                this.notificationMode = value;
                                break;
                            default:
                                continue;
                        }
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static RecreateInvitationRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (RecreateInvitationRequest) MessageNano.mergeFrom(new RecreateInvitationRequest(), data);
        }

        public static RecreateInvitationRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new RecreateInvitationRequest().mergeFrom(input);
        }
    }

    public static final class RecreateInvitationResponse extends ExtendableMessageNano<RecreateInvitationResponse> {
        private static volatile RecreateInvitationResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public Invitation invitation;

        public static RecreateInvitationResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new RecreateInvitationResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public RecreateInvitationResponse() {
            clear();
        }

        public RecreateInvitationResponse clear() {
            this.apiHeader = null;
            this.invitation = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof RecreateInvitationResponse)) {
                return false;
            }
            RecreateInvitationResponse other = (RecreateInvitationResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.invitation == null) {
                if (other.invitation != null) {
                    return false;
                }
            } else if (!this.invitation.equals(other.invitation)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.invitation == null ? 0 : this.invitation.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.invitation != null) {
                output.writeMessage(2, this.invitation);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.invitation != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.invitation);
            }
            return size;
        }

        public RecreateInvitationResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.invitation == null) {
                            this.invitation = new Invitation();
                        }
                        input.readMessage(this.invitation);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static RecreateInvitationResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (RecreateInvitationResponse) MessageNano.mergeFrom(new RecreateInvitationResponse(), data);
        }

        public static RecreateInvitationResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new RecreateInvitationResponse().mergeFrom(input);
        }
    }

    public static final class RegisteredDevice extends ExtendableMessageNano<RegisteredDevice> {
        private static volatile RegisteredDevice[] _emptyArray;
        public ApnsRegistrationInfo apnsRegistrationInfo;
        public GcmRegistrationInfo gcmRegistrationInfo;
        public String registrationId;

        public static RegisteredDevice[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new RegisteredDevice[0];
                    }
                }
            }
            return _emptyArray;
        }

        public RegisteredDevice() {
            clear();
        }

        public RegisteredDevice clear() {
            this.registrationId = BuildConfig.VERSION_NAME;
            this.gcmRegistrationInfo = null;
            this.apnsRegistrationInfo = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof RegisteredDevice)) {
                return false;
            }
            RegisteredDevice other = (RegisteredDevice) o;
            if (this.registrationId == null) {
                if (other.registrationId != null) {
                    return false;
                }
            } else if (!this.registrationId.equals(other.registrationId)) {
                return false;
            }
            if (this.gcmRegistrationInfo == null) {
                if (other.gcmRegistrationInfo != null) {
                    return false;
                }
            } else if (!this.gcmRegistrationInfo.equals(other.gcmRegistrationInfo)) {
                return false;
            }
            if (this.apnsRegistrationInfo == null) {
                if (other.apnsRegistrationInfo != null) {
                    return false;
                }
            } else if (!this.apnsRegistrationInfo.equals(other.apnsRegistrationInfo)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.registrationId == null ? 0 : this.registrationId.hashCode())) * 31) + (this.gcmRegistrationInfo == null ? 0 : this.gcmRegistrationInfo.hashCode())) * 31) + (this.apnsRegistrationInfo == null ? 0 : this.apnsRegistrationInfo.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (!this.registrationId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(1, this.registrationId);
            }
            if (this.gcmRegistrationInfo != null) {
                output.writeMessage(2, this.gcmRegistrationInfo);
            }
            if (this.apnsRegistrationInfo != null) {
                output.writeMessage(3, this.apnsRegistrationInfo);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (!this.registrationId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(1, this.registrationId);
            }
            if (this.gcmRegistrationInfo != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(2, this.gcmRegistrationInfo);
            }
            if (this.apnsRegistrationInfo != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(3, this.apnsRegistrationInfo);
            }
            return size;
        }

        public RegisteredDevice mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        this.registrationId = input.readString();
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.gcmRegistrationInfo == null) {
                            this.gcmRegistrationInfo = new GcmRegistrationInfo();
                        }
                        input.readMessage(this.gcmRegistrationInfo);
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        if (this.apnsRegistrationInfo == null) {
                            this.apnsRegistrationInfo = new ApnsRegistrationInfo();
                        }
                        input.readMessage(this.apnsRegistrationInfo);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static RegisteredDevice parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (RegisteredDevice) MessageNano.mergeFrom(new RegisteredDevice(), data);
        }

        public static RegisteredDevice parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new RegisteredDevice().mergeFrom(input);
        }
    }

    public static final class ReportDeviceInfoRequest extends ExtendableMessageNano<ReportDeviceInfoRequest> {
        private static volatile ReportDeviceInfoRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public byte[] deprecatedTag4;
        public Device device;
        public String deviceId;
        public String personId;

        public static ReportDeviceInfoRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ReportDeviceInfoRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ReportDeviceInfoRequest() {
            clear();
        }

        public ReportDeviceInfoRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.deviceId = BuildConfig.VERSION_NAME;
            this.device = null;
            this.deprecatedTag4 = WireFormatNano.EMPTY_BYTES;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ReportDeviceInfoRequest)) {
                return false;
            }
            ReportDeviceInfoRequest other = (ReportDeviceInfoRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.deviceId == null) {
                if (other.deviceId != null) {
                    return false;
                }
            } else if (!this.deviceId.equals(other.deviceId)) {
                return false;
            }
            if (this.device == null) {
                if (other.device != null) {
                    return false;
                }
            } else if (!this.device.equals(other.device)) {
                return false;
            }
            if (!Arrays.equals(this.deprecatedTag4, other.deprecatedTag4)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.deviceId == null ? 0 : this.deviceId.hashCode())) * 31) + (this.device == null ? 0 : this.device.hashCode())) * 31) + Arrays.hashCode(this.deprecatedTag4)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (!this.deviceId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.deviceId);
            }
            if (!Arrays.equals(this.deprecatedTag4, WireFormatNano.EMPTY_BYTES)) {
                output.writeBytes(4, this.deprecatedTag4);
            }
            if (this.device != null) {
                output.writeMessage(5, this.device);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (!this.deviceId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(3, this.deviceId);
            }
            if (!Arrays.equals(this.deprecatedTag4, WireFormatNano.EMPTY_BYTES)) {
                size += CodedOutputByteBufferNano.computeBytesSize(4, this.deprecatedTag4);
            }
            if (this.device != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(5, this.device);
            }
            return size;
        }

        public ReportDeviceInfoRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.deviceId = input.readString();
                        continue;
                    case LogSource.NOVA /*34*/:
                        this.deprecatedTag4 = input.readBytes();
                        continue;
                    case LogSource.PHOTOS /*42*/:
                        if (this.device == null) {
                            this.device = new Device();
                        }
                        input.readMessage(this.device);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ReportDeviceInfoRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ReportDeviceInfoRequest) MessageNano.mergeFrom(new ReportDeviceInfoRequest(), data);
        }

        public static ReportDeviceInfoRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ReportDeviceInfoRequest().mergeFrom(input);
        }
    }

    public static final class ReportDeviceInfoResponse extends ExtendableMessageNano<ReportDeviceInfoResponse> {
        private static volatile ReportDeviceInfoResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;

        public static ReportDeviceInfoResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ReportDeviceInfoResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ReportDeviceInfoResponse() {
            clear();
        }

        public ReportDeviceInfoResponse clear() {
            this.apiHeader = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ReportDeviceInfoResponse)) {
                return false;
            }
            ReportDeviceInfoResponse other = (ReportDeviceInfoResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            return size;
        }

        public ReportDeviceInfoResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ReportDeviceInfoResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ReportDeviceInfoResponse) MessageNano.mergeFrom(new ReportDeviceInfoResponse(), data);
        }

        public static ReportDeviceInfoResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ReportDeviceInfoResponse().mergeFrom(input);
        }
    }

    public static final class ResetDashboardCardsDismissalRequest extends ExtendableMessageNano<ResetDashboardCardsDismissalRequest> {
        private static volatile ResetDashboardCardsDismissalRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String personId;

        public static ResetDashboardCardsDismissalRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ResetDashboardCardsDismissalRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ResetDashboardCardsDismissalRequest() {
            clear();
        }

        public ResetDashboardCardsDismissalRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ResetDashboardCardsDismissalRequest)) {
                return false;
            }
            ResetDashboardCardsDismissalRequest other = (ResetDashboardCardsDismissalRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.personId.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(2, this.personId);
        }

        public ResetDashboardCardsDismissalRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ResetDashboardCardsDismissalRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ResetDashboardCardsDismissalRequest) MessageNano.mergeFrom(new ResetDashboardCardsDismissalRequest(), data);
        }

        public static ResetDashboardCardsDismissalRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ResetDashboardCardsDismissalRequest().mergeFrom(input);
        }
    }

    public static final class ResetDashboardCardsDismissalResponse extends ExtendableMessageNano<ResetDashboardCardsDismissalResponse> {
        private static volatile ResetDashboardCardsDismissalResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;

        public static ResetDashboardCardsDismissalResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new ResetDashboardCardsDismissalResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public ResetDashboardCardsDismissalResponse() {
            clear();
        }

        public ResetDashboardCardsDismissalResponse clear() {
            this.apiHeader = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof ResetDashboardCardsDismissalResponse)) {
                return false;
            }
            ResetDashboardCardsDismissalResponse other = (ResetDashboardCardsDismissalResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            return size;
        }

        public ResetDashboardCardsDismissalResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static ResetDashboardCardsDismissalResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (ResetDashboardCardsDismissalResponse) MessageNano.mergeFrom(new ResetDashboardCardsDismissalResponse(), data);
        }

        public static ResetDashboardCardsDismissalResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new ResetDashboardCardsDismissalResponse().mergeFrom(input);
        }
    }

    public static final class SignInToken extends ExtendableMessageNano<SignInToken> {
        private static volatile SignInToken[] _emptyArray;
        public String accessCode;
        public String id;

        public static SignInToken[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new SignInToken[0];
                    }
                }
            }
            return _emptyArray;
        }

        public SignInToken() {
            clear();
        }

        public SignInToken clear() {
            this.id = BuildConfig.VERSION_NAME;
            this.accessCode = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof SignInToken)) {
                return false;
            }
            SignInToken other = (SignInToken) o;
            if (this.id == null) {
                if (other.id != null) {
                    return false;
                }
            } else if (!this.id.equals(other.id)) {
                return false;
            }
            if (this.accessCode == null) {
                if (other.accessCode != null) {
                    return false;
                }
            } else if (!this.accessCode.equals(other.accessCode)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.id == null ? 0 : this.id.hashCode())) * 31) + (this.accessCode == null ? 0 : this.accessCode.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(1, this.id);
            }
            if (!this.accessCode.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.accessCode);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(1, this.id);
            }
            if (this.accessCode.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(2, this.accessCode);
        }

        public SignInToken mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        this.id = input.readString();
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.accessCode = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static SignInToken parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (SignInToken) MessageNano.mergeFrom(new SignInToken(), data);
        }

        public static SignInToken parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new SignInToken().mergeFrom(input);
        }
    }

    public static final class SuspendTimeoutRequest extends ExtendableMessageNano<SuspendTimeoutRequest> {
        private static volatile SuspendTimeoutRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public boolean isUnsuspend;
        public String personId;
        public String timeoutId;

        public static SuspendTimeoutRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new SuspendTimeoutRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public SuspendTimeoutRequest() {
            clear();
        }

        public SuspendTimeoutRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.timeoutId = BuildConfig.VERSION_NAME;
            this.isUnsuspend = false;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof SuspendTimeoutRequest)) {
                return false;
            }
            SuspendTimeoutRequest other = (SuspendTimeoutRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.timeoutId == null) {
                if (other.timeoutId != null) {
                    return false;
                }
            } else if (!this.timeoutId.equals(other.timeoutId)) {
                return false;
            }
            if (this.isUnsuspend != other.isUnsuspend) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.timeoutId == null ? 0 : this.timeoutId.hashCode())) * 31) + (this.isUnsuspend ? 1231 : 1237)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (!this.timeoutId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.timeoutId);
            }
            if (this.isUnsuspend) {
                output.writeBool(4, this.isUnsuspend);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (!this.timeoutId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(3, this.timeoutId);
            }
            if (this.isUnsuspend) {
                return size + CodedOutputByteBufferNano.computeBoolSize(4, this.isUnsuspend);
            }
            return size;
        }

        public SuspendTimeoutRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.timeoutId = input.readString();
                        continue;
                    case LogSource.SOCIAL /*32*/:
                        this.isUnsuspend = input.readBool();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static SuspendTimeoutRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (SuspendTimeoutRequest) MessageNano.mergeFrom(new SuspendTimeoutRequest(), data);
        }

        public static SuspendTimeoutRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new SuspendTimeoutRequest().mergeFrom(input);
        }
    }

    public static final class SuspendTimeoutResponse extends ExtendableMessageNano<SuspendTimeoutResponse> {
        private static volatile SuspendTimeoutResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public Timeout timeout;

        public static SuspendTimeoutResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new SuspendTimeoutResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public SuspendTimeoutResponse() {
            clear();
        }

        public SuspendTimeoutResponse clear() {
            this.apiHeader = null;
            this.timeout = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof SuspendTimeoutResponse)) {
                return false;
            }
            SuspendTimeoutResponse other = (SuspendTimeoutResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.timeout == null) {
                if (other.timeout != null) {
                    return false;
                }
            } else if (!this.timeout.equals(other.timeout)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.timeout == null ? 0 : this.timeout.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.timeout != null) {
                output.writeMessage(2, this.timeout);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.timeout != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.timeout);
            }
            return size;
        }

        public SuspendTimeoutResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.timeout == null) {
                            this.timeout = new Timeout();
                        }
                        input.readMessage(this.timeout);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static SuspendTimeoutResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (SuspendTimeoutResponse) MessageNano.mergeFrom(new SuspendTimeoutResponse(), data);
        }

        public static SuspendTimeoutResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new SuspendTimeoutResponse().mergeFrom(input);
        }
    }

    public interface UnmetPrecondition {
        public static final int CVN_CHALLENGE_REQUIRED = 15;
        public static final int FAMILY_ACCESS_SECRET_EXPIRED = 12;
        public static final int FAMILY_ACCESS_SECRET_NOT_FOUND = 11;
        public static final int FAMILY_EXISTS = 10;
        public static final int FAMILY_INACTIVE = 13;
        public static final int HOH_OF_ANOTHER_FAMILY = 16;
        public static final int IS_CHILD = 3;
        public static final int IS_DASHER = 4;
        public static final int LACKS_BIRTHDAY = 2;
        public static final int NOT_ALLOWED = 8;
        public static final int NO_FAMILY = 5;
        public static final int NO_PARENTAL_CONSENT = 9;
        public static final int TOO_MANY_FAMILY_SWITCHES = 14;
        public static final int TOO_MANY_MEMBERS = 6;
        public static final int TOO_MANY_PARENTS = 7;
        public static final int TOO_YOUNG = 1;
        public static final int UNKNOWN_UNMET_PRECONDITION = 0;
    }

    public static final class UpdateAppRequest extends ExtendableMessageNano<UpdateAppRequest> {
        private static volatile UpdateAppRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public App app;
        public String packageName;
        public String personId;

        public static UpdateAppRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateAppRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateAppRequest() {
            clear();
        }

        public UpdateAppRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.packageName = BuildConfig.VERSION_NAME;
            this.app = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateAppRequest)) {
                return false;
            }
            UpdateAppRequest other = (UpdateAppRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.packageName == null) {
                if (other.packageName != null) {
                    return false;
                }
            } else if (!this.packageName.equals(other.packageName)) {
                return false;
            }
            if (this.app == null) {
                if (other.app != null) {
                    return false;
                }
            } else if (!this.app.equals(other.app)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.packageName == null ? 0 : this.packageName.hashCode())) * 31) + (this.app == null ? 0 : this.app.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (!this.packageName.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.packageName);
            }
            if (this.app != null) {
                output.writeMessage(4, this.app);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (!this.packageName.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(3, this.packageName);
            }
            if (this.app != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(4, this.app);
            }
            return size;
        }

        public UpdateAppRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.packageName = input.readString();
                        continue;
                    case LogSource.NOVA /*34*/:
                        if (this.app == null) {
                            this.app = new App();
                        }
                        input.readMessage(this.app);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateAppRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateAppRequest) MessageNano.mergeFrom(new UpdateAppRequest(), data);
        }

        public static UpdateAppRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateAppRequest().mergeFrom(input);
        }
    }

    public static final class UpdateAppResponse extends ExtendableMessageNano<UpdateAppResponse> {
        private static volatile UpdateAppResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public App app;

        public static UpdateAppResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateAppResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateAppResponse() {
            clear();
        }

        public UpdateAppResponse clear() {
            this.apiHeader = null;
            this.app = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateAppResponse)) {
                return false;
            }
            UpdateAppResponse other = (UpdateAppResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.app == null) {
                if (other.app != null) {
                    return false;
                }
            } else if (!this.app.equals(other.app)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.app == null ? 0 : this.app.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.app != null) {
                output.writeMessage(2, this.app);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.app != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.app);
            }
            return size;
        }

        public UpdateAppResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.app == null) {
                            this.app = new App();
                        }
                        input.readMessage(this.app);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateAppResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateAppResponse) MessageNano.mergeFrom(new UpdateAppResponse(), data);
        }

        public static UpdateAppResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateAppResponse().mergeFrom(input);
        }
    }

    public static final class UpdateAppRestrictionRequest extends ExtendableMessageNano<UpdateAppRestrictionRequest> {
        private static volatile UpdateAppRestrictionRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public RestrictionValue appRestrictionValue;
        public String packageName;
        public String personId;
        public String restrictionId;

        public static UpdateAppRestrictionRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateAppRestrictionRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateAppRestrictionRequest() {
            clear();
        }

        public UpdateAppRestrictionRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.packageName = BuildConfig.VERSION_NAME;
            this.restrictionId = BuildConfig.VERSION_NAME;
            this.appRestrictionValue = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateAppRestrictionRequest)) {
                return false;
            }
            UpdateAppRestrictionRequest other = (UpdateAppRestrictionRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.packageName == null) {
                if (other.packageName != null) {
                    return false;
                }
            } else if (!this.packageName.equals(other.packageName)) {
                return false;
            }
            if (this.restrictionId == null) {
                if (other.restrictionId != null) {
                    return false;
                }
            } else if (!this.restrictionId.equals(other.restrictionId)) {
                return false;
            }
            if (this.appRestrictionValue == null) {
                if (other.appRestrictionValue != null) {
                    return false;
                }
            } else if (!this.appRestrictionValue.equals(other.appRestrictionValue)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.packageName == null ? 0 : this.packageName.hashCode())) * 31) + (this.restrictionId == null ? 0 : this.restrictionId.hashCode())) * 31) + (this.appRestrictionValue == null ? 0 : this.appRestrictionValue.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (!this.packageName.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.packageName);
            }
            if (!this.restrictionId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(4, this.restrictionId);
            }
            if (this.appRestrictionValue != null) {
                output.writeMessage(5, this.appRestrictionValue);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (!this.packageName.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(3, this.packageName);
            }
            if (!this.restrictionId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(4, this.restrictionId);
            }
            if (this.appRestrictionValue != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(5, this.appRestrictionValue);
            }
            return size;
        }

        public UpdateAppRestrictionRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.packageName = input.readString();
                        continue;
                    case LogSource.NOVA /*34*/:
                        this.restrictionId = input.readString();
                        continue;
                    case LogSource.PHOTOS /*42*/:
                        if (this.appRestrictionValue == null) {
                            this.appRestrictionValue = new RestrictionValue();
                        }
                        input.readMessage(this.appRestrictionValue);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateAppRestrictionRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateAppRestrictionRequest) MessageNano.mergeFrom(new UpdateAppRestrictionRequest(), data);
        }

        public static UpdateAppRestrictionRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateAppRestrictionRequest().mergeFrom(input);
        }
    }

    public static final class UpdateAppRestrictionResponse extends ExtendableMessageNano<UpdateAppRestrictionResponse> {
        private static volatile UpdateAppRestrictionResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public Restriction restriction;

        public static UpdateAppRestrictionResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateAppRestrictionResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateAppRestrictionResponse() {
            clear();
        }

        public UpdateAppRestrictionResponse clear() {
            this.apiHeader = null;
            this.restriction = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateAppRestrictionResponse)) {
                return false;
            }
            UpdateAppRestrictionResponse other = (UpdateAppRestrictionResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.restriction == null) {
                if (other.restriction != null) {
                    return false;
                }
            } else if (!this.restriction.equals(other.restriction)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.restriction == null ? 0 : this.restriction.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.restriction != null) {
                output.writeMessage(2, this.restriction);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.restriction != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.restriction);
            }
            return size;
        }

        public UpdateAppRestrictionResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.restriction == null) {
                            this.restriction = new Restriction();
                        }
                        input.readMessage(this.restriction);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateAppRestrictionResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateAppRestrictionResponse) MessageNano.mergeFrom(new UpdateAppRestrictionResponse(), data);
        }

        public static UpdateAppRestrictionResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateAppRestrictionResponse().mergeFrom(input);
        }
    }

    public static final class UpdateAppVisibilityRequest extends ExtendableMessageNano<UpdateAppVisibilityRequest> {
        private static volatile UpdateAppVisibilityRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public boolean hidden;
        public String packageName;
        public String personId;

        public static UpdateAppVisibilityRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateAppVisibilityRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateAppVisibilityRequest() {
            clear();
        }

        public UpdateAppVisibilityRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.packageName = BuildConfig.VERSION_NAME;
            this.hidden = false;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateAppVisibilityRequest)) {
                return false;
            }
            UpdateAppVisibilityRequest other = (UpdateAppVisibilityRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.packageName == null) {
                if (other.packageName != null) {
                    return false;
                }
            } else if (!this.packageName.equals(other.packageName)) {
                return false;
            }
            if (this.hidden != other.hidden) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.packageName == null ? 0 : this.packageName.hashCode())) * 31) + (this.hidden ? 1231 : 1237)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (!this.packageName.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.packageName);
            }
            if (this.hidden) {
                output.writeBool(4, this.hidden);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (!this.packageName.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(3, this.packageName);
            }
            if (this.hidden) {
                return size + CodedOutputByteBufferNano.computeBoolSize(4, this.hidden);
            }
            return size;
        }

        public UpdateAppVisibilityRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.packageName = input.readString();
                        continue;
                    case LogSource.SOCIAL /*32*/:
                        this.hidden = input.readBool();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateAppVisibilityRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateAppVisibilityRequest) MessageNano.mergeFrom(new UpdateAppVisibilityRequest(), data);
        }

        public static UpdateAppVisibilityRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateAppVisibilityRequest().mergeFrom(input);
        }
    }

    public static final class UpdateAppVisibilityResponse extends ExtendableMessageNano<UpdateAppVisibilityResponse> {
        private static volatile UpdateAppVisibilityResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;

        public static UpdateAppVisibilityResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateAppVisibilityResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateAppVisibilityResponse() {
            clear();
        }

        public UpdateAppVisibilityResponse clear() {
            this.apiHeader = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateAppVisibilityResponse)) {
                return false;
            }
            UpdateAppVisibilityResponse other = (UpdateAppVisibilityResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            return size;
        }

        public UpdateAppVisibilityResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateAppVisibilityResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateAppVisibilityResponse) MessageNano.mergeFrom(new UpdateAppVisibilityResponse(), data);
        }

        public static UpdateAppVisibilityResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateAppVisibilityResponse().mergeFrom(input);
        }
    }

    public static final class UpdateChromeSettingsRequest extends ExtendableMessageNano<UpdateChromeSettingsRequest> {
        private static volatile UpdateChromeSettingsRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public ChromeSettings chromeSettings;
        public String personId;

        public static UpdateChromeSettingsRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateChromeSettingsRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateChromeSettingsRequest() {
            clear();
        }

        public UpdateChromeSettingsRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.chromeSettings = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateChromeSettingsRequest)) {
                return false;
            }
            UpdateChromeSettingsRequest other = (UpdateChromeSettingsRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.chromeSettings == null) {
                if (other.chromeSettings != null) {
                    return false;
                }
            } else if (!this.chromeSettings.equals(other.chromeSettings)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.chromeSettings == null ? 0 : this.chromeSettings.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (this.chromeSettings != null) {
                output.writeMessage(3, this.chromeSettings);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (this.chromeSettings != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(3, this.chromeSettings);
            }
            return size;
        }

        public UpdateChromeSettingsRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        if (this.chromeSettings == null) {
                            this.chromeSettings = new ChromeSettings();
                        }
                        input.readMessage(this.chromeSettings);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateChromeSettingsRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateChromeSettingsRequest) MessageNano.mergeFrom(new UpdateChromeSettingsRequest(), data);
        }

        public static UpdateChromeSettingsRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateChromeSettingsRequest().mergeFrom(input);
        }
    }

    public static final class UpdateChromeSettingsResponse extends ExtendableMessageNano<UpdateChromeSettingsResponse> {
        private static volatile UpdateChromeSettingsResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public ChromeSettings chromeSettings;

        public static UpdateChromeSettingsResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateChromeSettingsResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateChromeSettingsResponse() {
            clear();
        }

        public UpdateChromeSettingsResponse clear() {
            this.apiHeader = null;
            this.chromeSettings = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateChromeSettingsResponse)) {
                return false;
            }
            UpdateChromeSettingsResponse other = (UpdateChromeSettingsResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.chromeSettings == null) {
                if (other.chromeSettings != null) {
                    return false;
                }
            } else if (!this.chromeSettings.equals(other.chromeSettings)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.chromeSettings == null ? 0 : this.chromeSettings.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.chromeSettings != null) {
                output.writeMessage(2, this.chromeSettings);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.chromeSettings != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.chromeSettings);
            }
            return size;
        }

        public UpdateChromeSettingsResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.chromeSettings == null) {
                            this.chromeSettings = new ChromeSettings();
                        }
                        input.readMessage(this.chromeSettings);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateChromeSettingsResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateChromeSettingsResponse) MessageNano.mergeFrom(new UpdateChromeSettingsResponse(), data);
        }

        public static UpdateChromeSettingsResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateChromeSettingsResponse().mergeFrom(input);
        }
    }

    public static final class UpdateDashboardCardsDismissalRequest extends ExtendableMessageNano<UpdateDashboardCardsDismissalRequest> {
        private static volatile UpdateDashboardCardsDismissalRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public CardDismissal[] cardDismissals;
        public String personId;

        public static UpdateDashboardCardsDismissalRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateDashboardCardsDismissalRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateDashboardCardsDismissalRequest() {
            clear();
        }

        public UpdateDashboardCardsDismissalRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.cardDismissals = CardDismissal.emptyArray();
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateDashboardCardsDismissalRequest)) {
                return false;
            }
            UpdateDashboardCardsDismissalRequest other = (UpdateDashboardCardsDismissalRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (!InternalNano.equals(this.cardDismissals, other.cardDismissals)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + InternalNano.hashCode(this.cardDismissals)) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (this.cardDismissals != null && this.cardDismissals.length > 0) {
                for (CardDismissal element : this.cardDismissals) {
                    if (element != null) {
                        output.writeMessage(3, element);
                    }
                }
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (this.cardDismissals != null && this.cardDismissals.length > 0) {
                for (CardDismissal element : this.cardDismissals) {
                    if (element != null) {
                        size += CodedOutputByteBufferNano.computeMessageSize(3, element);
                    }
                }
            }
            return size;
        }

        public UpdateDashboardCardsDismissalRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        int i;
                        int arrayLength = WireFormatNano.getRepeatedFieldArrayLength(input, 26);
                        if (this.cardDismissals == null) {
                            i = 0;
                        } else {
                            i = this.cardDismissals.length;
                        }
                        CardDismissal[] newArray = new CardDismissal[(i + arrayLength)];
                        if (i != 0) {
                            System.arraycopy(this.cardDismissals, 0, newArray, 0, i);
                        }
                        while (i < newArray.length - 1) {
                            newArray[i] = new CardDismissal();
                            input.readMessage(newArray[i]);
                            input.readTag();
                            i++;
                        }
                        newArray[i] = new CardDismissal();
                        input.readMessage(newArray[i]);
                        this.cardDismissals = newArray;
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateDashboardCardsDismissalRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateDashboardCardsDismissalRequest) MessageNano.mergeFrom(new UpdateDashboardCardsDismissalRequest(), data);
        }

        public static UpdateDashboardCardsDismissalRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateDashboardCardsDismissalRequest().mergeFrom(input);
        }
    }

    public static final class UpdateDashboardCardsDismissalResponse extends ExtendableMessageNano<UpdateDashboardCardsDismissalResponse> {
        private static volatile UpdateDashboardCardsDismissalResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;

        public static UpdateDashboardCardsDismissalResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateDashboardCardsDismissalResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateDashboardCardsDismissalResponse() {
            clear();
        }

        public UpdateDashboardCardsDismissalResponse clear() {
            this.apiHeader = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateDashboardCardsDismissalResponse)) {
                return false;
            }
            UpdateDashboardCardsDismissalResponse other = (UpdateDashboardCardsDismissalResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            return size;
        }

        public UpdateDashboardCardsDismissalResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateDashboardCardsDismissalResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateDashboardCardsDismissalResponse) MessageNano.mergeFrom(new UpdateDashboardCardsDismissalResponse(), data);
        }

        public static UpdateDashboardCardsDismissalResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateDashboardCardsDismissalResponse().mergeFrom(input);
        }
    }

    public static final class UpdateEventTypeConfigRequest extends ExtendableMessageNano<UpdateEventTypeConfigRequest> {
        private static volatile UpdateEventTypeConfigRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public EventTypeConfig config;
        public String eventTypeId;
        public String personId;

        public static UpdateEventTypeConfigRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateEventTypeConfigRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateEventTypeConfigRequest() {
            clear();
        }

        public UpdateEventTypeConfigRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.eventTypeId = BuildConfig.VERSION_NAME;
            this.config = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateEventTypeConfigRequest)) {
                return false;
            }
            UpdateEventTypeConfigRequest other = (UpdateEventTypeConfigRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.eventTypeId == null) {
                if (other.eventTypeId != null) {
                    return false;
                }
            } else if (!this.eventTypeId.equals(other.eventTypeId)) {
                return false;
            }
            if (this.config == null) {
                if (other.config != null) {
                    return false;
                }
            } else if (!this.config.equals(other.config)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.eventTypeId == null ? 0 : this.eventTypeId.hashCode())) * 31) + (this.config == null ? 0 : this.config.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (!this.eventTypeId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.eventTypeId);
            }
            if (this.config != null) {
                output.writeMessage(4, this.config);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (!this.eventTypeId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(3, this.eventTypeId);
            }
            if (this.config != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(4, this.config);
            }
            return size;
        }

        public UpdateEventTypeConfigRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.eventTypeId = input.readString();
                        continue;
                    case LogSource.NOVA /*34*/:
                        if (this.config == null) {
                            this.config = new EventTypeConfig();
                        }
                        input.readMessage(this.config);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateEventTypeConfigRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateEventTypeConfigRequest) MessageNano.mergeFrom(new UpdateEventTypeConfigRequest(), data);
        }

        public static UpdateEventTypeConfigRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateEventTypeConfigRequest().mergeFrom(input);
        }
    }

    public static final class UpdateEventTypeConfigResponse extends ExtendableMessageNano<UpdateEventTypeConfigResponse> {
        private static volatile UpdateEventTypeConfigResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public EventTypeConfig config;

        public static UpdateEventTypeConfigResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateEventTypeConfigResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateEventTypeConfigResponse() {
            clear();
        }

        public UpdateEventTypeConfigResponse clear() {
            this.apiHeader = null;
            this.config = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateEventTypeConfigResponse)) {
                return false;
            }
            UpdateEventTypeConfigResponse other = (UpdateEventTypeConfigResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.config == null) {
                if (other.config != null) {
                    return false;
                }
            } else if (!this.config.equals(other.config)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.config == null ? 0 : this.config.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.config != null) {
                output.writeMessage(2, this.config);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.config != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.config);
            }
            return size;
        }

        public UpdateEventTypeConfigResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.config == null) {
                            this.config = new EventTypeConfig();
                        }
                        input.readMessage(this.config);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateEventTypeConfigResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateEventTypeConfigResponse) MessageNano.mergeFrom(new UpdateEventTypeConfigResponse(), data);
        }

        public static UpdateEventTypeConfigResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateEventTypeConfigResponse().mergeFrom(input);
        }
    }

    public static final class UpdateFamilyRequest extends ExtendableMessageNano<UpdateFamilyRequest> {
        private static volatile UpdateFamilyRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public Family family;
        public String id;

        public static UpdateFamilyRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateFamilyRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateFamilyRequest() {
            clear();
        }

        public UpdateFamilyRequest clear() {
            this.apiHeader = null;
            this.id = BuildConfig.VERSION_NAME;
            this.family = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateFamilyRequest)) {
                return false;
            }
            UpdateFamilyRequest other = (UpdateFamilyRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.id == null) {
                if (other.id != null) {
                    return false;
                }
            } else if (!this.id.equals(other.id)) {
                return false;
            }
            if (this.family == null) {
                if (other.family != null) {
                    return false;
                }
            } else if (!this.family.equals(other.family)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.id == null ? 0 : this.id.hashCode())) * 31) + (this.family == null ? 0 : this.family.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.family != null) {
                output.writeMessage(1, this.family);
            }
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.id);
            }
            if (this.apiHeader != null) {
                output.writeMessage(3, this.apiHeader);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.family != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.family);
            }
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.id);
            }
            if (this.apiHeader != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(3, this.apiHeader);
            }
            return size;
        }

        public UpdateFamilyRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.family == null) {
                            this.family = new Family();
                        }
                        input.readMessage(this.family);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.id = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateFamilyRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateFamilyRequest) MessageNano.mergeFrom(new UpdateFamilyRequest(), data);
        }

        public static UpdateFamilyRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateFamilyRequest().mergeFrom(input);
        }
    }

    public static final class UpdateFamilyResponse extends ExtendableMessageNano<UpdateFamilyResponse> {
        private static volatile UpdateFamilyResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public Family family;

        public static UpdateFamilyResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateFamilyResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateFamilyResponse() {
            clear();
        }

        public UpdateFamilyResponse clear() {
            this.apiHeader = null;
            this.family = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateFamilyResponse)) {
                return false;
            }
            UpdateFamilyResponse other = (UpdateFamilyResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.family == null) {
                if (other.family != null) {
                    return false;
                }
            } else if (!this.family.equals(other.family)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.family == null ? 0 : this.family.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.family != null) {
                output.writeMessage(2, this.family);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.family != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.family);
            }
            return size;
        }

        public UpdateFamilyResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.family == null) {
                            this.family = new Family();
                        }
                        input.readMessage(this.family);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateFamilyResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateFamilyResponse) MessageNano.mergeFrom(new UpdateFamilyResponse(), data);
        }

        public static UpdateFamilyResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateFamilyResponse().mergeFrom(input);
        }
    }

    public static final class UpdateInboxItemRequest extends ExtendableMessageNano<UpdateInboxItemRequest> {
        private static volatile UpdateInboxItemRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String id;
        public InboxItem item;
        public String personId;
        public ViewParameters viewParameters;

        public static UpdateInboxItemRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateInboxItemRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateInboxItemRequest() {
            clear();
        }

        public UpdateInboxItemRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.id = BuildConfig.VERSION_NAME;
            this.item = null;
            this.viewParameters = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateInboxItemRequest)) {
                return false;
            }
            UpdateInboxItemRequest other = (UpdateInboxItemRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.id == null) {
                if (other.id != null) {
                    return false;
                }
            } else if (!this.id.equals(other.id)) {
                return false;
            }
            if (this.item == null) {
                if (other.item != null) {
                    return false;
                }
            } else if (!this.item.equals(other.item)) {
                return false;
            }
            if (this.viewParameters == null) {
                if (other.viewParameters != null) {
                    return false;
                }
            } else if (!this.viewParameters.equals(other.viewParameters)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.id == null ? 0 : this.id.hashCode())) * 31) + (this.item == null ? 0 : this.item.hashCode())) * 31) + (this.viewParameters == null ? 0 : this.viewParameters.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.id);
            }
            if (this.item != null) {
                output.writeMessage(4, this.item);
            }
            if (this.viewParameters != null) {
                output.writeMessage(5, this.viewParameters);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(3, this.id);
            }
            if (this.item != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(4, this.item);
            }
            if (this.viewParameters != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(5, this.viewParameters);
            }
            return size;
        }

        public UpdateInboxItemRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.id = input.readString();
                        continue;
                    case LogSource.NOVA /*34*/:
                        if (this.item == null) {
                            this.item = new InboxItem();
                        }
                        input.readMessage(this.item);
                        continue;
                    case LogSource.PHOTOS /*42*/:
                        if (this.viewParameters == null) {
                            this.viewParameters = new ViewParameters();
                        }
                        input.readMessage(this.viewParameters);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateInboxItemRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateInboxItemRequest) MessageNano.mergeFrom(new UpdateInboxItemRequest(), data);
        }

        public static UpdateInboxItemRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateInboxItemRequest().mergeFrom(input);
        }
    }

    public static final class UpdateInboxItemResponse extends ExtendableMessageNano<UpdateInboxItemResponse> {
        private static volatile UpdateInboxItemResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public InboxItem item;

        public static UpdateInboxItemResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateInboxItemResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateInboxItemResponse() {
            clear();
        }

        public UpdateInboxItemResponse clear() {
            this.apiHeader = null;
            this.item = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateInboxItemResponse)) {
                return false;
            }
            UpdateInboxItemResponse other = (UpdateInboxItemResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.item == null) {
                if (other.item != null) {
                    return false;
                }
            } else if (!this.item.equals(other.item)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.item == null ? 0 : this.item.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.item != null) {
                output.writeMessage(2, this.item);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.item != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.item);
            }
            return size;
        }

        public UpdateInboxItemResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.item == null) {
                            this.item = new InboxItem();
                        }
                        input.readMessage(this.item);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateInboxItemResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateInboxItemResponse) MessageNano.mergeFrom(new UpdateInboxItemResponse(), data);
        }

        public static UpdateInboxItemResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateInboxItemResponse().mergeFrom(input);
        }
    }

    public static final class UpdateInvitationRequest extends ExtendableMessageNano<UpdateInvitationRequest> {
        private static volatile UpdateInvitationRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String familyId;
        public Invitation invitation;
        public String invitationId;

        public static UpdateInvitationRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateInvitationRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateInvitationRequest() {
            clear();
        }

        public UpdateInvitationRequest clear() {
            this.apiHeader = null;
            this.familyId = BuildConfig.VERSION_NAME;
            this.invitationId = BuildConfig.VERSION_NAME;
            this.invitation = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateInvitationRequest)) {
                return false;
            }
            UpdateInvitationRequest other = (UpdateInvitationRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.familyId == null) {
                if (other.familyId != null) {
                    return false;
                }
            } else if (!this.familyId.equals(other.familyId)) {
                return false;
            }
            if (this.invitationId == null) {
                if (other.invitationId != null) {
                    return false;
                }
            } else if (!this.invitationId.equals(other.invitationId)) {
                return false;
            }
            if (this.invitation == null) {
                if (other.invitation != null) {
                    return false;
                }
            } else if (!this.invitation.equals(other.invitation)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.familyId == null ? 0 : this.familyId.hashCode())) * 31) + (this.invitationId == null ? 0 : this.invitationId.hashCode())) * 31) + (this.invitation == null ? 0 : this.invitation.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.familyId);
            }
            if (!this.invitationId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.invitationId);
            }
            if (this.invitation != null) {
                output.writeMessage(4, this.invitation);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.familyId);
            }
            if (!this.invitationId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(3, this.invitationId);
            }
            if (this.invitation != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(4, this.invitation);
            }
            return size;
        }

        public UpdateInvitationRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.familyId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.invitationId = input.readString();
                        continue;
                    case LogSource.NOVA /*34*/:
                        if (this.invitation == null) {
                            this.invitation = new Invitation();
                        }
                        input.readMessage(this.invitation);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateInvitationRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateInvitationRequest) MessageNano.mergeFrom(new UpdateInvitationRequest(), data);
        }

        public static UpdateInvitationRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateInvitationRequest().mergeFrom(input);
        }
    }

    public static final class UpdateInvitationResponse extends ExtendableMessageNano<UpdateInvitationResponse> {
        private static volatile UpdateInvitationResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public Invitation invitation;

        public static UpdateInvitationResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateInvitationResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateInvitationResponse() {
            clear();
        }

        public UpdateInvitationResponse clear() {
            this.apiHeader = null;
            this.invitation = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateInvitationResponse)) {
                return false;
            }
            UpdateInvitationResponse other = (UpdateInvitationResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.invitation == null) {
                if (other.invitation != null) {
                    return false;
                }
            } else if (!this.invitation.equals(other.invitation)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.invitation == null ? 0 : this.invitation.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.invitation != null) {
                output.writeMessage(2, this.invitation);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.invitation != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.invitation);
            }
            return size;
        }

        public UpdateInvitationResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.invitation == null) {
                            this.invitation = new Invitation();
                        }
                        input.readMessage(this.invitation);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateInvitationResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateInvitationResponse) MessageNano.mergeFrom(new UpdateInvitationResponse(), data);
        }

        public static UpdateInvitationResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateInvitationResponse().mergeFrom(input);
        }
    }

    public static final class UpdateLocationSharingAclRequest extends ExtendableMessageNano<UpdateLocationSharingAclRequest> {
        private static volatile UpdateLocationSharingAclRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String id;
        public String personId;
        public LocationSharingAclUpdate update;

        public static UpdateLocationSharingAclRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateLocationSharingAclRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateLocationSharingAclRequest() {
            clear();
        }

        public UpdateLocationSharingAclRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.id = BuildConfig.VERSION_NAME;
            this.update = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateLocationSharingAclRequest)) {
                return false;
            }
            UpdateLocationSharingAclRequest other = (UpdateLocationSharingAclRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.id == null) {
                if (other.id != null) {
                    return false;
                }
            } else if (!this.id.equals(other.id)) {
                return false;
            }
            if (this.update == null) {
                if (other.update != null) {
                    return false;
                }
            } else if (!this.update.equals(other.update)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.id == null ? 0 : this.id.hashCode())) * 31) + (this.update == null ? 0 : this.update.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.id);
            }
            if (this.update != null) {
                output.writeMessage(4, this.update);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(3, this.id);
            }
            if (this.update != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(4, this.update);
            }
            return size;
        }

        public UpdateLocationSharingAclRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.id = input.readString();
                        continue;
                    case LogSource.NOVA /*34*/:
                        if (this.update == null) {
                            this.update = new LocationSharingAclUpdate();
                        }
                        input.readMessage(this.update);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateLocationSharingAclRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateLocationSharingAclRequest) MessageNano.mergeFrom(new UpdateLocationSharingAclRequest(), data);
        }

        public static UpdateLocationSharingAclRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateLocationSharingAclRequest().mergeFrom(input);
        }
    }

    public static final class UpdateLocationSharingAclResponse extends ExtendableMessageNano<UpdateLocationSharingAclResponse> {
        private static volatile UpdateLocationSharingAclResponse[] _emptyArray;
        public LocationSharingAcl acl;
        public ApiResponseHeader apiHeader;

        public static UpdateLocationSharingAclResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateLocationSharingAclResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateLocationSharingAclResponse() {
            clear();
        }

        public UpdateLocationSharingAclResponse clear() {
            this.apiHeader = null;
            this.acl = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateLocationSharingAclResponse)) {
                return false;
            }
            UpdateLocationSharingAclResponse other = (UpdateLocationSharingAclResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.acl == null) {
                if (other.acl != null) {
                    return false;
                }
            } else if (!this.acl.equals(other.acl)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.acl == null ? 0 : this.acl.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.acl != null) {
                output.writeMessage(2, this.acl);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.acl != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.acl);
            }
            return size;
        }

        public UpdateLocationSharingAclResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.acl == null) {
                            this.acl = new LocationSharingAcl();
                        }
                        input.readMessage(this.acl);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateLocationSharingAclResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateLocationSharingAclResponse) MessageNano.mergeFrom(new UpdateLocationSharingAclResponse(), data);
        }

        public static UpdateLocationSharingAclResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateLocationSharingAclResponse().mergeFrom(input);
        }
    }

    public static final class UpdateManagedDeviceRequest extends ExtendableMessageNano<UpdateManagedDeviceRequest> {
        private static volatile UpdateManagedDeviceRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String deviceId;
        public ManagedDevice managedDevice;

        public static UpdateManagedDeviceRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateManagedDeviceRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateManagedDeviceRequest() {
            clear();
        }

        public UpdateManagedDeviceRequest clear() {
            this.apiHeader = null;
            this.deviceId = BuildConfig.VERSION_NAME;
            this.managedDevice = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateManagedDeviceRequest)) {
                return false;
            }
            UpdateManagedDeviceRequest other = (UpdateManagedDeviceRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.deviceId == null) {
                if (other.deviceId != null) {
                    return false;
                }
            } else if (!this.deviceId.equals(other.deviceId)) {
                return false;
            }
            if (this.managedDevice == null) {
                if (other.managedDevice != null) {
                    return false;
                }
            } else if (!this.managedDevice.equals(other.managedDevice)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.deviceId == null ? 0 : this.deviceId.hashCode())) * 31) + (this.managedDevice == null ? 0 : this.managedDevice.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.deviceId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.deviceId);
            }
            if (this.managedDevice != null) {
                output.writeMessage(3, this.managedDevice);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.deviceId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.deviceId);
            }
            if (this.managedDevice != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(3, this.managedDevice);
            }
            return size;
        }

        public UpdateManagedDeviceRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.deviceId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        if (this.managedDevice == null) {
                            this.managedDevice = new ManagedDevice();
                        }
                        input.readMessage(this.managedDevice);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateManagedDeviceRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateManagedDeviceRequest) MessageNano.mergeFrom(new UpdateManagedDeviceRequest(), data);
        }

        public static UpdateManagedDeviceRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateManagedDeviceRequest().mergeFrom(input);
        }
    }

    public static final class UpdateMemberRequest extends ExtendableMessageNano<UpdateMemberRequest> {
        private static volatile UpdateMemberRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String familyId;
        public FamilyMember member;
        public String userId;

        public static UpdateMemberRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateMemberRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateMemberRequest() {
            clear();
        }

        public UpdateMemberRequest clear() {
            this.apiHeader = null;
            this.familyId = BuildConfig.VERSION_NAME;
            this.userId = BuildConfig.VERSION_NAME;
            this.member = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateMemberRequest)) {
                return false;
            }
            UpdateMemberRequest other = (UpdateMemberRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.familyId == null) {
                if (other.familyId != null) {
                    return false;
                }
            } else if (!this.familyId.equals(other.familyId)) {
                return false;
            }
            if (this.userId == null) {
                if (other.userId != null) {
                    return false;
                }
            } else if (!this.userId.equals(other.userId)) {
                return false;
            }
            if (this.member == null) {
                if (other.member != null) {
                    return false;
                }
            } else if (!this.member.equals(other.member)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.familyId == null ? 0 : this.familyId.hashCode())) * 31) + (this.userId == null ? 0 : this.userId.hashCode())) * 31) + (this.member == null ? 0 : this.member.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.familyId);
            }
            if (!this.userId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.userId);
            }
            if (this.member != null) {
                output.writeMessage(4, this.member);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.familyId);
            }
            if (!this.userId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(3, this.userId);
            }
            if (this.member != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(4, this.member);
            }
            return size;
        }

        public UpdateMemberRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.familyId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.userId = input.readString();
                        continue;
                    case LogSource.NOVA /*34*/:
                        if (this.member == null) {
                            this.member = new FamilyMember();
                        }
                        input.readMessage(this.member);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateMemberRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateMemberRequest) MessageNano.mergeFrom(new UpdateMemberRequest(), data);
        }

        public static UpdateMemberRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateMemberRequest().mergeFrom(input);
        }
    }

    public static final class UpdateMemberResponse extends ExtendableMessageNano<UpdateMemberResponse> {
        private static volatile UpdateMemberResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public FamilyMember member;

        public static UpdateMemberResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateMemberResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateMemberResponse() {
            clear();
        }

        public UpdateMemberResponse clear() {
            this.apiHeader = null;
            this.member = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateMemberResponse)) {
                return false;
            }
            UpdateMemberResponse other = (UpdateMemberResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.member == null) {
                if (other.member != null) {
                    return false;
                }
            } else if (!this.member.equals(other.member)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.member == null ? 0 : this.member.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.member != null) {
                output.writeMessage(2, this.member);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.member != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.member);
            }
            return size;
        }

        public UpdateMemberResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.member == null) {
                            this.member = new FamilyMember();
                        }
                        input.readMessage(this.member);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateMemberResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateMemberResponse) MessageNano.mergeFrom(new UpdateMemberResponse(), data);
        }

        public static UpdateMemberResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateMemberResponse().mergeFrom(input);
        }
    }

    public static final class UpdatePermissionRequestRequest extends ExtendableMessageNano<UpdatePermissionRequestRequest> {
        private static volatile UpdatePermissionRequestRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String id;
        public PermissionRequest permissionRequest;
        public String personId;

        public static UpdatePermissionRequestRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdatePermissionRequestRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdatePermissionRequestRequest() {
            clear();
        }

        public UpdatePermissionRequestRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.id = BuildConfig.VERSION_NAME;
            this.permissionRequest = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdatePermissionRequestRequest)) {
                return false;
            }
            UpdatePermissionRequestRequest other = (UpdatePermissionRequestRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.id == null) {
                if (other.id != null) {
                    return false;
                }
            } else if (!this.id.equals(other.id)) {
                return false;
            }
            if (this.permissionRequest == null) {
                if (other.permissionRequest != null) {
                    return false;
                }
            } else if (!this.permissionRequest.equals(other.permissionRequest)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.id == null ? 0 : this.id.hashCode())) * 31) + (this.permissionRequest == null ? 0 : this.permissionRequest.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(1, this.id);
            }
            if (this.permissionRequest != null) {
                output.writeMessage(2, this.permissionRequest);
            }
            if (this.apiHeader != null) {
                output.writeMessage(3, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(4, this.personId);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (!this.id.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(1, this.id);
            }
            if (this.permissionRequest != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(2, this.permissionRequest);
            }
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(3, this.apiHeader);
            }
            if (this.personId.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(4, this.personId);
        }

        public UpdatePermissionRequestRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        this.id = input.readString();
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.permissionRequest == null) {
                            this.permissionRequest = new PermissionRequest();
                        }
                        input.readMessage(this.permissionRequest);
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.NOVA /*34*/:
                        this.personId = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdatePermissionRequestRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdatePermissionRequestRequest) MessageNano.mergeFrom(new UpdatePermissionRequestRequest(), data);
        }

        public static UpdatePermissionRequestRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdatePermissionRequestRequest().mergeFrom(input);
        }
    }

    public static final class UpdatePermissionRequestResponse extends ExtendableMessageNano<UpdatePermissionRequestResponse> {
        private static volatile UpdatePermissionRequestResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public PermissionRequest permissionRequest;

        public static UpdatePermissionRequestResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdatePermissionRequestResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdatePermissionRequestResponse() {
            clear();
        }

        public UpdatePermissionRequestResponse clear() {
            this.apiHeader = null;
            this.permissionRequest = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdatePermissionRequestResponse)) {
                return false;
            }
            UpdatePermissionRequestResponse other = (UpdatePermissionRequestResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.permissionRequest == null) {
                if (other.permissionRequest != null) {
                    return false;
                }
            } else if (!this.permissionRequest.equals(other.permissionRequest)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.permissionRequest == null ? 0 : this.permissionRequest.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.permissionRequest != null) {
                output.writeMessage(2, this.permissionRequest);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.permissionRequest != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.permissionRequest);
            }
            return size;
        }

        public UpdatePermissionRequestResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.permissionRequest == null) {
                            this.permissionRequest = new PermissionRequest();
                        }
                        input.readMessage(this.permissionRequest);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdatePermissionRequestResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdatePermissionRequestResponse) MessageNano.mergeFrom(new UpdatePermissionRequestResponse(), data);
        }

        public static UpdatePermissionRequestResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdatePermissionRequestResponse().mergeFrom(input);
        }
    }

    public static final class UpdateRestrictionRequest extends ExtendableMessageNano<UpdateRestrictionRequest> {
        private static volatile UpdateRestrictionRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String personId;
        public String restrictionId;
        public RestrictionValue restrictionValue;

        public static UpdateRestrictionRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateRestrictionRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateRestrictionRequest() {
            clear();
        }

        public UpdateRestrictionRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.restrictionId = BuildConfig.VERSION_NAME;
            this.restrictionValue = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateRestrictionRequest)) {
                return false;
            }
            UpdateRestrictionRequest other = (UpdateRestrictionRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.restrictionId == null) {
                if (other.restrictionId != null) {
                    return false;
                }
            } else if (!this.restrictionId.equals(other.restrictionId)) {
                return false;
            }
            if (this.restrictionValue == null) {
                if (other.restrictionValue != null) {
                    return false;
                }
            } else if (!this.restrictionValue.equals(other.restrictionValue)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.restrictionId == null ? 0 : this.restrictionId.hashCode())) * 31) + (this.restrictionValue == null ? 0 : this.restrictionValue.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (!this.restrictionId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.restrictionId);
            }
            if (this.restrictionValue != null) {
                output.writeMessage(4, this.restrictionValue);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (!this.restrictionId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(3, this.restrictionId);
            }
            if (this.restrictionValue != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(4, this.restrictionValue);
            }
            return size;
        }

        public UpdateRestrictionRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.restrictionId = input.readString();
                        continue;
                    case LogSource.NOVA /*34*/:
                        if (this.restrictionValue == null) {
                            this.restrictionValue = new RestrictionValue();
                        }
                        input.readMessage(this.restrictionValue);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateRestrictionRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateRestrictionRequest) MessageNano.mergeFrom(new UpdateRestrictionRequest(), data);
        }

        public static UpdateRestrictionRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateRestrictionRequest().mergeFrom(input);
        }
    }

    public static final class UpdateRestrictionResponse extends ExtendableMessageNano<UpdateRestrictionResponse> {
        private static volatile UpdateRestrictionResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public Restriction restriction;

        public static UpdateRestrictionResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateRestrictionResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateRestrictionResponse() {
            clear();
        }

        public UpdateRestrictionResponse clear() {
            this.apiHeader = null;
            this.restriction = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateRestrictionResponse)) {
                return false;
            }
            UpdateRestrictionResponse other = (UpdateRestrictionResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.restriction == null) {
                if (other.restriction != null) {
                    return false;
                }
            } else if (!this.restriction.equals(other.restriction)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.restriction == null ? 0 : this.restriction.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.restriction != null) {
                output.writeMessage(2, this.restriction);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.restriction != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.restriction);
            }
            return size;
        }

        public UpdateRestrictionResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.restriction == null) {
                            this.restriction = new Restriction();
                        }
                        input.readMessage(this.restriction);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateRestrictionResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateRestrictionResponse) MessageNano.mergeFrom(new UpdateRestrictionResponse(), data);
        }

        public static UpdateRestrictionResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateRestrictionResponse().mergeFrom(input);
        }
    }

    public static final class UpdateSearchSettingsRequest extends ExtendableMessageNano<UpdateSearchSettingsRequest> {
        private static volatile UpdateSearchSettingsRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String personId;
        public SearchSettings searchSettings;

        public static UpdateSearchSettingsRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateSearchSettingsRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateSearchSettingsRequest() {
            clear();
        }

        public UpdateSearchSettingsRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.searchSettings = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateSearchSettingsRequest)) {
                return false;
            }
            UpdateSearchSettingsRequest other = (UpdateSearchSettingsRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.searchSettings == null) {
                if (other.searchSettings != null) {
                    return false;
                }
            } else if (!this.searchSettings.equals(other.searchSettings)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.searchSettings == null ? 0 : this.searchSettings.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (this.searchSettings != null) {
                output.writeMessage(3, this.searchSettings);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (this.searchSettings != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(3, this.searchSettings);
            }
            return size;
        }

        public UpdateSearchSettingsRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        if (this.searchSettings == null) {
                            this.searchSettings = new SearchSettings();
                        }
                        input.readMessage(this.searchSettings);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateSearchSettingsRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateSearchSettingsRequest) MessageNano.mergeFrom(new UpdateSearchSettingsRequest(), data);
        }

        public static UpdateSearchSettingsRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateSearchSettingsRequest().mergeFrom(input);
        }
    }

    public static final class UpdateSearchSettingsResponse extends ExtendableMessageNano<UpdateSearchSettingsResponse> {
        private static volatile UpdateSearchSettingsResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public SearchSettings searchSettings;

        public static UpdateSearchSettingsResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpdateSearchSettingsResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpdateSearchSettingsResponse() {
            clear();
        }

        public UpdateSearchSettingsResponse clear() {
            this.apiHeader = null;
            this.searchSettings = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpdateSearchSettingsResponse)) {
                return false;
            }
            UpdateSearchSettingsResponse other = (UpdateSearchSettingsResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.searchSettings == null) {
                if (other.searchSettings != null) {
                    return false;
                }
            } else if (!this.searchSettings.equals(other.searchSettings)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.searchSettings == null ? 0 : this.searchSettings.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.searchSettings != null) {
                output.writeMessage(2, this.searchSettings);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.searchSettings != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.searchSettings);
            }
            return size;
        }

        public UpdateSearchSettingsResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.searchSettings == null) {
                            this.searchSettings = new SearchSettings();
                        }
                        input.readMessage(this.searchSettings);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpdateSearchSettingsResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpdateSearchSettingsResponse) MessageNano.mergeFrom(new UpdateSearchSettingsResponse(), data);
        }

        public static UpdateSearchSettingsResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpdateSearchSettingsResponse().mergeFrom(input);
        }
    }

    public static final class UpsertFamilyPlaceRequest extends ExtendableMessageNano<UpsertFamilyPlaceRequest> {
        private static volatile UpsertFamilyPlaceRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String familyId;
        public FamilyPlace familyPlace;

        public static UpsertFamilyPlaceRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpsertFamilyPlaceRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpsertFamilyPlaceRequest() {
            clear();
        }

        public UpsertFamilyPlaceRequest clear() {
            this.apiHeader = null;
            this.familyId = BuildConfig.VERSION_NAME;
            this.familyPlace = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpsertFamilyPlaceRequest)) {
                return false;
            }
            UpsertFamilyPlaceRequest other = (UpsertFamilyPlaceRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.familyId == null) {
                if (other.familyId != null) {
                    return false;
                }
            } else if (!this.familyId.equals(other.familyId)) {
                return false;
            }
            if (this.familyPlace == null) {
                if (other.familyPlace != null) {
                    return false;
                }
            } else if (!this.familyPlace.equals(other.familyPlace)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.familyId == null ? 0 : this.familyId.hashCode())) * 31) + (this.familyPlace == null ? 0 : this.familyPlace.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.familyId);
            }
            if (this.familyPlace != null) {
                output.writeMessage(3, this.familyPlace);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.familyId);
            }
            if (this.familyPlace != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(3, this.familyPlace);
            }
            return size;
        }

        public UpsertFamilyPlaceRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.familyId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        if (this.familyPlace == null) {
                            this.familyPlace = new FamilyPlace();
                        }
                        input.readMessage(this.familyPlace);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpsertFamilyPlaceRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpsertFamilyPlaceRequest) MessageNano.mergeFrom(new UpsertFamilyPlaceRequest(), data);
        }

        public static UpsertFamilyPlaceRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpsertFamilyPlaceRequest().mergeFrom(input);
        }
    }

    public static final class UpsertFamilyPlaceResponse extends ExtendableMessageNano<UpsertFamilyPlaceResponse> {
        private static volatile UpsertFamilyPlaceResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public FamilyPlace familyPlace;

        public static UpsertFamilyPlaceResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpsertFamilyPlaceResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpsertFamilyPlaceResponse() {
            clear();
        }

        public UpsertFamilyPlaceResponse clear() {
            this.apiHeader = null;
            this.familyPlace = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpsertFamilyPlaceResponse)) {
                return false;
            }
            UpsertFamilyPlaceResponse other = (UpsertFamilyPlaceResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.familyPlace == null) {
                if (other.familyPlace != null) {
                    return false;
                }
            } else if (!this.familyPlace.equals(other.familyPlace)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.familyPlace == null ? 0 : this.familyPlace.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.familyPlace != null) {
                output.writeMessage(2, this.familyPlace);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.familyPlace != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.familyPlace);
            }
            return size;
        }

        public UpsertFamilyPlaceResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.familyPlace == null) {
                            this.familyPlace = new FamilyPlace();
                        }
                        input.readMessage(this.familyPlace);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpsertFamilyPlaceResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpsertFamilyPlaceResponse) MessageNano.mergeFrom(new UpsertFamilyPlaceResponse(), data);
        }

        public static UpsertFamilyPlaceResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpsertFamilyPlaceResponse().mergeFrom(input);
        }
    }

    public static final class UpsertTimeoutRequest extends ExtendableMessageNano<UpsertTimeoutRequest> {
        private static volatile UpsertTimeoutRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String personId;
        public Timeout timeout;

        public static UpsertTimeoutRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpsertTimeoutRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpsertTimeoutRequest() {
            clear();
        }

        public UpsertTimeoutRequest clear() {
            this.apiHeader = null;
            this.personId = BuildConfig.VERSION_NAME;
            this.timeout = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpsertTimeoutRequest)) {
                return false;
            }
            UpsertTimeoutRequest other = (UpsertTimeoutRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.personId == null) {
                if (other.personId != null) {
                    return false;
                }
            } else if (!this.personId.equals(other.personId)) {
                return false;
            }
            if (this.timeout == null) {
                if (other.timeout != null) {
                    return false;
                }
            } else if (!this.timeout.equals(other.timeout)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.personId == null ? 0 : this.personId.hashCode())) * 31) + (this.timeout == null ? 0 : this.timeout.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.personId);
            }
            if (this.timeout != null) {
                output.writeMessage(3, this.timeout);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.personId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.personId);
            }
            if (this.timeout != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(3, this.timeout);
            }
            return size;
        }

        public UpsertTimeoutRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.personId = input.readString();
                        continue;
                    case LogSource.ANDROID_CAMERA /*26*/:
                        if (this.timeout == null) {
                            this.timeout = new Timeout();
                        }
                        input.readMessage(this.timeout);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpsertTimeoutRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpsertTimeoutRequest) MessageNano.mergeFrom(new UpsertTimeoutRequest(), data);
        }

        public static UpsertTimeoutRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpsertTimeoutRequest().mergeFrom(input);
        }
    }

    public static final class UpsertTimeoutResponse extends ExtendableMessageNano<UpsertTimeoutResponse> {
        private static volatile UpsertTimeoutResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public Timeout timeout;

        public static UpsertTimeoutResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new UpsertTimeoutResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public UpsertTimeoutResponse() {
            clear();
        }

        public UpsertTimeoutResponse clear() {
            this.apiHeader = null;
            this.timeout = null;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof UpsertTimeoutResponse)) {
                return false;
            }
            UpsertTimeoutResponse other = (UpsertTimeoutResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.timeout == null) {
                if (other.timeout != null) {
                    return false;
                }
            } else if (!this.timeout.equals(other.timeout)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.timeout == null ? 0 : this.timeout.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.timeout != null) {
                output.writeMessage(2, this.timeout);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.timeout != null) {
                return size + CodedOutputByteBufferNano.computeMessageSize(2, this.timeout);
            }
            return size;
        }

        public UpsertTimeoutResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        if (this.timeout == null) {
                            this.timeout = new Timeout();
                        }
                        input.readMessage(this.timeout);
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static UpsertTimeoutResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (UpsertTimeoutResponse) MessageNano.mergeFrom(new UpsertTimeoutResponse(), data);
        }

        public static UpsertTimeoutResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new UpsertTimeoutResponse().mergeFrom(input);
        }
    }

    public static final class VerifyCvnChallengeRequest extends ExtendableMessageNano<VerifyCvnChallengeRequest> {
        private static volatile VerifyCvnChallengeRequest[] _emptyArray;
        public ApiRequestHeader apiHeader;
        public String eesCvnHandle;
        public String familyId;
        public int familyProductCorrelationIdType;

        public static VerifyCvnChallengeRequest[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new VerifyCvnChallengeRequest[0];
                    }
                }
            }
            return _emptyArray;
        }

        public VerifyCvnChallengeRequest() {
            clear();
        }

        public VerifyCvnChallengeRequest clear() {
            this.apiHeader = null;
            this.familyId = BuildConfig.VERSION_NAME;
            this.familyProductCorrelationIdType = 0;
            this.eesCvnHandle = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof VerifyCvnChallengeRequest)) {
                return false;
            }
            VerifyCvnChallengeRequest other = (VerifyCvnChallengeRequest) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.familyId == null) {
                if (other.familyId != null) {
                    return false;
                }
            } else if (!this.familyId.equals(other.familyId)) {
                return false;
            }
            if (this.familyProductCorrelationIdType != other.familyProductCorrelationIdType) {
                return false;
            }
            if (this.eesCvnHandle == null) {
                if (other.eesCvnHandle != null) {
                    return false;
                }
            } else if (!this.eesCvnHandle.equals(other.eesCvnHandle)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + (this.familyId == null ? 0 : this.familyId.hashCode())) * 31) + this.familyProductCorrelationIdType) * 31) + (this.eesCvnHandle == null ? 0 : this.eesCvnHandle.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(2, this.familyId);
            }
            if (this.familyProductCorrelationIdType != 0) {
                output.writeInt32(3, this.familyProductCorrelationIdType);
            }
            if (!this.eesCvnHandle.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(4, this.eesCvnHandle);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (!this.familyId.equals(BuildConfig.VERSION_NAME)) {
                size += CodedOutputByteBufferNano.computeStringSize(2, this.familyId);
            }
            if (this.familyProductCorrelationIdType != 0) {
                size += CodedOutputByteBufferNano.computeInt32Size(3, this.familyProductCorrelationIdType);
            }
            if (this.eesCvnHandle.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(4, this.eesCvnHandle);
        }

        public VerifyCvnChallengeRequest mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiRequestHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GOOGLE_ANALYTICS /*18*/:
                        this.familyId = input.readString();
                        continue;
                    case LogSource.LB_C /*24*/:
                        this.familyProductCorrelationIdType = input.readInt32();
                        continue;
                    case LogSource.NOVA /*34*/:
                        this.eesCvnHandle = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static VerifyCvnChallengeRequest parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (VerifyCvnChallengeRequest) MessageNano.mergeFrom(new VerifyCvnChallengeRequest(), data);
        }

        public static VerifyCvnChallengeRequest parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new VerifyCvnChallengeRequest().mergeFrom(input);
        }
    }

    public static final class VerifyCvnChallengeResponse extends ExtendableMessageNano<VerifyCvnChallengeResponse> {
        private static volatile VerifyCvnChallengeResponse[] _emptyArray;
        public ApiResponseHeader apiHeader;
        public int cvnVerificationResult;
        public String errorMessage;

        public interface CvnVerificationResult {
            public static final int CVN_INVALID = 2;
            public static final int INTERNAL_ERROR = 3;
            public static final int SUCCESS = 1;
            public static final int UNKNOWN_CVN_VERIFICATION_RESULT = 0;
        }

        public static VerifyCvnChallengeResponse[] emptyArray() {
            if (_emptyArray == null) {
                synchronized (InternalNano.LAZY_INIT_LOCK) {
                    if (_emptyArray == null) {
                        _emptyArray = new VerifyCvnChallengeResponse[0];
                    }
                }
            }
            return _emptyArray;
        }

        public VerifyCvnChallengeResponse() {
            clear();
        }

        public VerifyCvnChallengeResponse clear() {
            this.apiHeader = null;
            this.cvnVerificationResult = 0;
            this.errorMessage = BuildConfig.VERSION_NAME;
            this.unknownFieldData = null;
            this.cachedSize = -1;
            return this;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof VerifyCvnChallengeResponse)) {
                return false;
            }
            VerifyCvnChallengeResponse other = (VerifyCvnChallengeResponse) o;
            if (this.apiHeader == null) {
                if (other.apiHeader != null) {
                    return false;
                }
            } else if (!this.apiHeader.equals(other.apiHeader)) {
                return false;
            }
            if (this.cvnVerificationResult != other.cvnVerificationResult) {
                return false;
            }
            if (this.errorMessage == null) {
                if (other.errorMessage != null) {
                    return false;
                }
            } else if (!this.errorMessage.equals(other.errorMessage)) {
                return false;
            }
            if (this.unknownFieldData != null && !this.unknownFieldData.isEmpty()) {
                return this.unknownFieldData.equals(other.unknownFieldData);
            }
            if (other.unknownFieldData == null || other.unknownFieldData.isEmpty()) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i = 0;
            int hashCode = (((((((getClass().getName().hashCode() + 527) * 31) + (this.apiHeader == null ? 0 : this.apiHeader.hashCode())) * 31) + this.cvnVerificationResult) * 31) + (this.errorMessage == null ? 0 : this.errorMessage.hashCode())) * 31;
            if (!(this.unknownFieldData == null || this.unknownFieldData.isEmpty())) {
                i = this.unknownFieldData.hashCode();
            }
            return hashCode + i;
        }

        public void writeTo(CodedOutputByteBufferNano output) throws IOException {
            if (this.apiHeader != null) {
                output.writeMessage(1, this.apiHeader);
            }
            if (this.cvnVerificationResult != 0) {
                output.writeInt32(2, this.cvnVerificationResult);
            }
            if (!this.errorMessage.equals(BuildConfig.VERSION_NAME)) {
                output.writeString(3, this.errorMessage);
            }
            super.writeTo(output);
        }

        protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.apiHeader != null) {
                size += CodedOutputByteBufferNano.computeMessageSize(1, this.apiHeader);
            }
            if (this.cvnVerificationResult != 0) {
                size += CodedOutputByteBufferNano.computeInt32Size(2, this.cvnVerificationResult);
            }
            if (this.errorMessage.equals(BuildConfig.VERSION_NAME)) {
                return size;
            }
            return size + CodedOutputByteBufferNano.computeStringSize(3, this.errorMessage);
        }

        public VerifyCvnChallengeResponse mergeFrom(CodedInputByteBufferNano input) throws IOException {
            while (true) {
                int tag = input.readTag();
                switch (tag) {
                    case Action.UNKNOWN /*0*/:
                        break;
                    case Type.TAP_ABOUT /*10*/:
                        if (this.apiHeader == null) {
                            this.apiHeader = new ApiResponseHeader();
                        }
                        input.readMessage(this.apiHeader);
                        continue;
                    case LogSource.GMS_CORE_PEOPLE /*16*/:
                        int value = input.readInt32();
                        switch (value) {
                            case Action.UNKNOWN /*0*/:
                            case TimeSelection.Type.TEMPORARY /*1*/:
                            case TimeSelection.Type.INDEFINITELY /*2*/:
                            case TimeSelection.Type.CUSTOM /*3*/:
                                this.cvnVerificationResult = value;
                                break;
                            default:
                                continue;
                        }
                    case LogSource.ANDROID_CAMERA /*26*/:
                        this.errorMessage = input.readString();
                        continue;
                    default:
                        if (!storeUnknownField(input, tag)) {
                            break;
                        }
                        continue;
                }
                return this;
            }
        }

        public static VerifyCvnChallengeResponse parseFrom(byte[] data) throws InvalidProtocolBufferNanoException {
            return (VerifyCvnChallengeResponse) MessageNano.mergeFrom(new VerifyCvnChallengeResponse(), data);
        }

        public static VerifyCvnChallengeResponse parseFrom(CodedInputByteBufferNano input) throws IOException {
            return new VerifyCvnChallengeResponse().mergeFrom(input);
        }
    }
}
